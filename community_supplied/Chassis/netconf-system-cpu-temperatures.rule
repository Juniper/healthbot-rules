/*
 * Detects Chassis components temperatures and notifies when anomalies are found.
 * One input control detection
 * 
 *   1) "threshold" is the threshold that causes the rule to report
 *      an anomaly.  By default it's 80. This rule will set a dashboard
 *      color to red when *all* the CPU/Buffer memory/ Heap memory utilization greater than
 *      'threshold'. 
 */
healthbot {
    topic chassis.temperature  {
        rule check-netconf-chassis-component-temperature {
	    synopsis "Chassis component temperature change detector";
            description "Collects temperature details from chassis components and notify anomalies based on threshold values ";
		    /*
            * Use componet-name as key for rule.
            */
            keys component-name;
            function temperature-in-degrees {
			    description "Python application collects string from the iagent sensor and pick the temperature as integer for all chassis components";
                path temp_degrees.py;
                method temp_degrees;
                argument temperature {
                    mandatory;
                }
            }
            sensor chassis-sensor {
			    synopsis "Chassis temperature sensor initialization";
                description "iAgent sensor to collect data from network device"; 
                iAgent {
                    file chassis-env-info.yml;
                    table ChassisStatsTable;
                    frequency 300s;
                }
            }
			/*
            * Fields defined with variables, dynamic thresholds and constant values
            */
            field component-name {
                sensor chassis-sensor {
                    path name;
                }
                type string;
                description "Name of the component";
            }
            field dt-temperature-value {
                formula {
                    anomaly-detection {
                        algorithm 3sigma;
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$temperature-value";
                    }
                }                                   
                type integer;
                description "Anomaly detection value for component temperature";
            }
            field temperature-value {
                formula {
                    user-defined-function {
                        function-name temperature-in-degrees;
                        argument temperature "$temperature";
                    }
                }
                type integer;
            }
            field threshold {
                constant {
                    value "{{threshold-value}}";
                }
                type integer;
                description "Threshold value for component temperature";
            }
			/*
            * Anomaly detection logic for chassis components.
            */
            trigger component-temperature {
			    /*
                * Sets color to red and sends out an anomaly notification when
                * temperature value increases more than threshold static ($threshold) value
                * 
                */ 
                frequency 1offset;
                term is-component-temperature-abnormal {
                    when {
                        greater-than "$temperature-value" "$threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Temperature of $component-name has crossed static threshold value ($threshold), Value=$temperature-value (degrees)";
                        }
                    }
                }
				/*
                * Sets color to yellow and sends out an anomaly notification when
                * temperature value increases more than dynamic threshold value
                * 
                */
                term is-component-temperature-above-dt {
                    when {
                        equal-to "$dt-temperature-value" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "Temperature of $component-name has crossed dynamic threshold value, Value= $temperature-value (degrees)";
                        }
                    }
                }
				/*
                * Defaults color to green.
                */
                term component-temperature-is-normal {
                    then {
                        status {
                            color green;
                            message "Temperature of  $component-name is normal, Value=$temperature-value (degrees)";
                        }
                    }
                }
            }
            variable threshold-value {
                value 80;
                description "Threshold value for temperature";
                type int;
            } 
			rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                        }                       
                    }
                }
            }
        }
	}	
}    
