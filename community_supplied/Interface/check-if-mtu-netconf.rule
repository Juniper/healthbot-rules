/*
* Detects interface MTU values and notifies when anomalies
* are found.
*
* Two input control detection
*
* 1) interface-name, is a regular expression that matches the
* interfaces that you would like to monitor. By default it's
* '.*' which matches all interfaces. Use something like 'ge.*'
* to match only gigabit ethernet interfaces.
*
* 2)mtu-variable, is MTU recommended value that causes the rule
* to report an anomaly. By default it is 1514. This rule will set
* the dashboard color to green when interface MTU value is equal
* to the recommended MTU value. Otherwise it is set to red.
*/
healthbot {
    topic interface.statistics {
        description "Monitors and notify interface statistics i.e. link state, flaps, neighbor state, input & output traffic and errors";
        synopsis "Interface statistics analyzer";
        rule check-if-mtu-netconf {
            keys interface-name;
            synopsis "Interface MTU analyzer";
            description "Collects the interface MTU values periodically and notifies in case of anomalies";
            /*
            * Monitors the interface MTU values and notifies via the
            * dashboard colors when the interface MTU value is equal
            * to recommended MTU value, it is set to green. Otherwise
            * it is set to red.
            *
            * Use interface-name as key for rule
            *
            *
            * Sensor Configuration to get data from network devices.
            *
            */
            sensor interface {
                synopsis "Interfaces netconf based iAgent sensor definition";
                description "iAgent sensor defined in yml file using netconf rpc/cli command and defined fields using pyez tables & views to collect data from network device";
                iAgent {
                    file IntStatsTable.yml;
                    table IntStatsTable;
                    frequency 60s;
                }
            }
            /*
            * Fields defined using sensor path. Map the longer sensor names
            * to the shorter field names used in the rules.
            */
            field admin-status {
                sensor interface {
                    path admin-status;
                }
                type string;
                description "Admin status";
            }
            field interface-name {
                sensor interface {
                    where "admin-status =~ /up/";
                    where "name =~ /{{interface-name}}/";
                    path name;
                }
                type string;
                description "Interface to be monitored";
            }
            field mtu {
                sensor interface {
                    path mtu;
                }
                type string;
                description "MTU value of an interface";
            }
            /*
            * Field defined with variable and constant value
            */
            field mtu-recommended-value {
                constant {
                    value "{{mtu-variable}}";
                }
                type string;
                description "Recommended MTU value";
            }
            /*
            * Anomaly detection logic.
            */
            trigger interface-mtu-status {
                synopsis "Interface MTU value check";
                description "Sets health based on the interface MTU value";
                frequency 1.5offset;
                /*
                * Sets color to green and sends out an anomaly notification when
                * the interface has a MTU value ($mtu) equal to the recommended
                * mtu value ($mtu-recommended-value)
                */
                term normal {
                    when {
                        equal-to "$mtu" "$mtu-recommended-value";
                    }
                    then {
                        status {
                            color green;
                                message "MTU on the $interface-name ($mtu) is set to the recommended value $mtu-recommended-value";
                        }
                    }
                }
                /*
                * Defaults color to red.
                */
                term abnormal {
                    then {
                        status {
                            color red;
                            message "MTU on the $interface-name ($mtu) is not set to the recommended value $mtu-recommended-value";
                        }
                    }
                }
            }
            /*
            * Variables with default values. Default values can be changed
            * while deploying playbook instance.
            */
            variable interface-name {
                value .*;
                description "Enter interface name in regex i.e. ge-.*";
                type string;
            }
            variable mtu-variable {
                value 1514;
                description "Enter MTU recommended value";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products EX {
                                platforms All {
                                    releases 17.3R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                        }
                    }
                }
            }
        }
    }
}
