/*
 * Detects FPC CPU and memory utilization and notifies when anomalies are found.
 * One input control detection
 * 
 *   1) "threshold" is the threshold that causes the rule to report
 *      an anomaly.  By default it's 80. This rule will set a dashboard
 *      color to red when *all* the CPU/Buffer memory/ Heap memory utilization greater than
 *      'threshold'. 
 *   2) slot-name,  is a regular expression that matches the
 *      FPC slot number that you would like to monitor.  By default it's
 *      all slots [0-9]*. 
 */
healthbot {
    topic linecard.fpc  {
        rule check-netconf-fpc-cpu-memory-stats {
	    synopsis "FPC CPU, Memory Heap & Buffer Utilization change detector";
            description "Collects CPU, Memory Heap& Buffer Utilization details from FPC slot and notify anomalies based on threshold values ";
	        /*
            * Use FPC slot as key for rule.
            */
            keys slot;
            sensor fpc-sensor {
			    synopsis "FPC CPU Memory sensor initialization";
                description "FPC iAgent sensor to collect data from network device";
                iAgent {
                    file fpc-cpu-memory-stats.yml;
                    table FPCCpuMemoryStatsTable;
                    frequency 90s;              
                }
            }
            /*
            * Fields defined with variables, dynamic thresholds and constant values
            */
            field dt-buffer-util {
                formula {
                    anomaly-detection {
                        algorithm k-means;
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$memory-buffer-utilization";
                    }
                }
                type integer;
                description "dynamic threshold value for memory buffer utilization";
            }
            field dt-cpu-total {
                formula {
                    dynamic-threshold {
                        algorithm k-means;
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$cpu-total";
                    }
                }
                type integer;
                description "dynamic threshold value for CPU utilization";
            }
            field dt-heap-utilization {
                formula {
                    dynamic-threshold {
                        algorithm k-means;      
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$memory-heap-utilization";
                    }
                }
                type integer;
                description "dynamic threshold value for memory heap utilization";
            }
            field slot {
                sensor fpc-sensor {
                    where "slot =~ /{{slot-name}}/";
                    path slot;
                }
                type string;
                description "fpc slot number";
            }
            field threshold {
                constant {
                    value "{{static-threshold}}";
                }
                type integer;
                description "Threshold value for memory & CPU utilization values";
            }
			/*
            * Anomaly detection logic for buffer memory utilization.
            */
            trigger buffer-memory-utilization {
                frequency 300s;
				/*
                * Sets color to red and sends out an anomaly notification when
                * memory buffer utilization count increases more than threshold static ($threshold) value
                * 
                */
                term is-buffer-memory-utilization-abnormal {
                    when {
                        greater-than "$memory-buffer-utilization" "$threshold";
                    }
                    then {                      
                        status {
                            color red;
                            message "Buffer memory utilization for fpc slot=($slot) is crossed static threshold value ($threshold), Value=($memory-buffer-utilization)";
                        }
                    }
                }
				/*
                * Sets color to yellow and sends out an anomaly notification when
                * memory buffer utilization count increases more than dynamic threshold ($threshold) value
                * 
                */
                term is-buffer-memory-utilization-above-dt {
                    when {
                        equal-to "$dt-buffer-util" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "buffer memory utilization for fpc slot=($slot) is crossed dynamic threshold value, Value=($memory-buffer-utilization)";
                        }
                    }
                }
				/*
                * Defaults color to green.
                */
                term is-buffer-memory-utilization-normal {
                    then {
                        status {
                            color green;
                            message "Buffer memory utilization for fpc slot=($slot) is normal, Value=($memory-buffer-utilization)";
                        }
                    }
                }
            }
			/*
            * Anomaly detection logic for CPU utilization.
            */
            trigger cpu-utilization {
                frequency 300s;
               	/*
                * Sets color to red and sends out an anomaly notification when
                * CPU utilization count increases more than static static ($threshold) value
                * 
                */				
                term is-cpu-utilization-abnormal {
                    when {
                        greater-than "$cpu-total" "$threshold";
                    }
                    then {
                        status {
                            color red;
                            message "CPU utilization for fpc slot=($slot) is crossed static threshold value ($threshold), Value=($cpu-total)";
                        }
                    }
                }
                /*
                * Sets color to yellow and sends out an anomaly notification when
                * CPU utilization count increases more than dynamic threshold ($threshold) value
                * 
                */
                term is-cpu-utilization-above-dt {
                    when {
                        equal-to "$dt-cpu-total" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "CPU utilization for fpc slot=($slot) is crossed dynamic threshold value, Value=($cpu-total)";
                        }
                    }
                }
				/*
                * Defaults color to green.
                */
                term is-cpu-utilization-normal {
                    then {
                        status {
                            color green;
                            message "CPU utilization for fpc slot=($slot) is normal, Value=($cpu-total)";
                        }
                    }
                }                               
            }
			/*
            * Anomaly detection logic for heap memory utilization.
            */
            trigger heap-memory-utilization {
                frequency 300s;
				               	/*
                * Sets color to red and sends out an anomaly notification when
                * memory heap utilization count increases more than static static ($threshold) value
                * 
                */				
                term is-heap-memory-utilization-abnormal {
                    when {
                        greater-than "$memory-heap-utilization" "$threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Heap memory utilization for fpc slot=($slot) is crossed static threshold value ($threshold), Value=($memory-heap-utilization)";
                        }
                    }
                }
                /*
                * Sets color to yellow and sends out an anomaly notification when
                * heap memory utilization count increases more than dynamic threshold ($threshold) value
                * 
                */
                term is-heap-utilization-above-dt{
                    when {
                        equal-to "$dt-heap-utilization" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "Heap memory utilization for fpc slot=($slot) is crossed dynamic threshold value, Value=($memory-heap-utilization)";
                        }
                    }
                }
				/*
                * Defaults color to green.
                */
                term is-heap-memory-utilization-normal {
                    then {
                        status {                
                            color green;
                            message "Heap memory utilization for fpc slot=($slot) is normal, Value=($memory-heap-utilization)";
                        }
                    }
                }
            }
            variable slot-name {
                value "[0-9].*";
                description "fpc slot number ";
                type string;
            }
            variable static-threshold {
                value 80;
                description "static threshold value for CPU and memory utilization";
                type int;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform ALL;
                                }
                            }
                        }                       
                    }
                }
            }
	    }
	}
}
