/*
 * This rule flags for anomaly in Fan Health when there is abnormal change in Fan Speed.
 */
healthbot {
    topic platform {
        rule fan-speed-anomaly {
            keys name;
            synopsis "Anomaly Detection in Fan Health using Fan Speed";
            description "Anomaly Detection in Fan Health using Fan Speed";
            sensor fan-sensor {
                iAgent {
                    file fanhealth.yml;
                    table EvoFanTable;
                    frequency 5s;
                }
            }
            field anomaly-detected {
                formula {
                    anomaly-detection {
                        algorithm 3sigma;
                        learning-period 1hours;
                        pattern-periodicity 5minutes;
                        field-name "$rpm";
                    }
                }
                type integer;
                description "Anomaly Detection Logic using fan speed in rpm as input to 3sigma algorithm.";
            }
            field name {
                sensor fan-sensor {
                    path name;
                }
                type string;
                description "Fan Name";
            }
            field rpm {
                sensor fan-sensor {
                    path rpm;
                }
                type integer;
                description "Current Fan Speed in RPM";
            }
            field rpm-percent {
                sensor fan-sensor {
                    path rpm-percent;
                }
                type integer;
                description "Current Fan Speed in percentage";
            }
            field status {
                sensor fan-sensor {
                    path status;
                }
                type string;
                description "Fan Overall Status";
            }
            trigger fan-status-trigger {
                frequency 10s;
                term anomaly-detection {
                    when {
                        equal-to "$anomaly-detected" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "Anomaly Detected\n\n$name \n  $status  \n  $rpm \n  $rpm-percent  \n  $anomaly-detected ";
                        }
                    }
                }
                term fan-default {
                    then {
                        status {
                            color green;
                            message "$name \n  $status  \n  $rpm \n  $rpm-percent  \n  $anomaly-detected ";
                        }
                    }
                }
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 4.0.0;
                supported-devices {
                    juniper {
                        operating-system junosEvolved {
                            products PTX {
                                releases 21.1 {
                                    release-support min-supported-release;
                                    platform All;
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files fanhealth.yml;
                }
            }
        }
    }
}
