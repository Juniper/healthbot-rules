/*
* Checks if NLRI RD and RT are present in the route received from remote peer and raises
* alarm when anomalies are found.
* One input control detection
*
* 1) destination variable,  is the route received from the remote peer.
*    By default it is .*. This rule will set a dashboard color to green when 
*    rd and rt are present in the received route, else it sets color to red.
*   
*
*/
healthbot {
    topic protocol.l3vpn {
        rule check-nlri-rd-rt-netconf {
            keys destination-address;
            synopsis "BGP Neighbor  NLRI RD:RT";
            description "To check if NLRI RD:RT are present ";
            /*
             * Checks RD and RT values for routes in bgpl3vpn table. Notifies  
             * via the dashboard colors when values are present by setting color to  
             * green.Otherwise the color is set to red.
             *
            * starttime is taken as the key field.
             */
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor NLRI {
                iAgent {
                    file NLRI-RD-RT.yml;
                    table NLRITable;
                    frequency 60s;
                }
            }
            /*
             * Field defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field destination-address {
                sensor NLRI {
                    where "rt-destination =~ /{{destination}}/";
                    path rt-destination;
                }
                type string;
                description "ip address received from the peer.";
            }
            field import-accepted {
                sensor NLRI {
                    path bgp-rt-flag;
                }
                type string;
                description "Flag that shows  rt has been accepted.";
            }
            field route-distinguisher {
                sensor NLRI {
                    path route-distinguisher;
                    zero-suppression;
                }
                type string;
                description "Route distingusher of the route imported.";
            }
            field route-target {
                sensor NLRI {
                    path extended-community;
                    zero-suppression;
                }
                type string;
                description "Route target of the route imported.";
            }
            trigger rd-rt-present {
                synopsis "NLRI RD:RT is present";
                description "Sets health based on the NLRI RD:RT is present in the route";
                frequency 1.5o;
                /*
                 * Sets color to green when the route contains RD and RT values.
                 */
                term if-rd-rt-is-present {
                    when {
                        exists "$route-distinguisher";
                        exists "$route-target";
                    }
                    then {
                        status {
                            color green;
                            message "NLRI RD $route-distinguisher and RT $route-target  for the destination $destination-address.";
                        }
                    }
                }
                /*
                 * Defaults color to red.
                 */
                term rd-rt-is-not-present {
                    then {
                        status {
                            color red;
                            message "NLRI RD and RT are not present for $destination-address.";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable destination {
                value .*;
                description "Any destinaiton.";
                type string;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                            products MX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform all;
                                }
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX2010 MX2020 MX240 MX480 MX960 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX1000 PTX10000 PTX5000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                        }
                    }
                    other-vendor cisco-IOS-XR {
                        vendor-name cisco;
                        operating-system IOS-XR;
                    }
                }
            }
        }
    }
}
