/*
* Checks if vrf neighor ip addresses are present in the forwarding table and raises
* alarms when anomalies are found.
* Two input control detection
*
* 1) peer-list,  vector collects vrf neighbor list from "collect-peerip-in-vrf-table-oc"
*    rule an anomaly. This rule will set dashboard color to red when neighbor ip is 
*    not present in the forwarding table.
*
*
* 2) route-list, vector collects routes in forwarding table from 
*    "check-forwarding-table-netconf".This rule will set dashboard color to red when 
*    neighbor ip is not present in the forwarding table.
*/
healthbot {
    topic protocol.bgp {
        rule check-peer {
            synopsis "Have fwd table entry for neighbour's IP KPI";
            description "To check vrf  peer address is present in the forwarding tble";
            /*
             * Checks if vrf neighor ip addresses are present in the forwarding 
             * table and raises red alarm if it is not present, Otherwise  
             * the color is set to green.
             */
            rule-frequency 60s;
            /*
             * Function to list the neighbor ip addresses that are present in 
             * forwarding table.
             */
            function common-items {
                path common.py;
                method common;
                argument list1 {
                    mandatory;
                }
                argument list2 {
                    mandatory;
                }
            }
            /*
             * Function to list the neighbor ip addresses that are not present in 
             * forwarding table.
             */
            function non-common-items {
                description "The function lists the ip addresses that are not common between the 2 lists.";
                path Not-in-forwarding-table.py;
                method notcommon;
                argument list1 {
                    mandatory;
                }
                argument list2 {
                    mandatory;
                }
            }
            /*
             * Field defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            /*
             * Field defined using user defined functions
             */
            field common-list {
                formula {
                    user-defined-function {
                        function-name common-items;
                        argument list1 "@peer-list";
                        argument list2 "@route-list";
                    }
                }
                type string;
                description "Lists the peer ip addresses that are present in the forwarding table.";
            }
            /*
             * Field defined using user defined functions
             */
            field not-common-list {
                formula {
                    user-defined-function {
                        function-name non-common-items;
                        argument list1 "@peer-list";
                        argument list2 "@route-list";
                    }
                }
                type string;
                description "Lists the items that are not present in the forwarding table.";
            }
            /*
             * Anomaly detection logic.
             */
            trigger peer-in-forwarding-table {
                synopsis "Peer IP in forwarding table";
                description "Sets health based on if peer is present in forwarding table";
                frequency 1.5o;
                /*
                 * Sets color to green when the peers ($common-list) are present 
                 * in the forwarding table.
                 */
                term peer-present {
                    when {
                        exists "$common-list";
                    }
                    then {
                        status {
                            color green;
                            message "$common-list peers are present in the forwarding table. ";
                        }
                    }
                }
                /*
                 * Defaults color to red.
                 */
                term peer-not-present {
                    when {
                        exists "$not-common-list";
                    }
                    then {
                        status {
                            color red;
                            message "$not-common-list peers are not present in the forwarding table.";
                        }
                    }
                }
            }
            vector peer-list {
                path "/topic[topic-name=protocol.bgp]/rule[rule-name=collect-peerip-in-vrf-table-oc]/neighbor-address";
                time-range 60s;
            }
            vector route-list {
                path "/topic[topic-name=protocol.bgp]/rule[rule-name=check-forwarding-table-netconf]/route";
                time-range 60s;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                            products MX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform all;
                                }
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX2010 MX2020 MX240 MX480 MX960 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX1000 PTX10000 PTX5000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                        }
                    }
                    other-vendor cisco-IOS-XR {
                        vendor-name cisco;
                        operating-system IOS-XR;
                    }
                }
            }
        }
    }
}
