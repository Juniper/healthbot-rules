/*
 * This rule checks is any error counters are incrementing for a NAT rule
 *
 * It flags RED with an aprropriate error message if one of these counters increment above threshold (default: 1) in a given interval
 * Counters Checked:
 *  - failed-translation-hits
 * Else it keeps flagging GREEN
 *
 * Data for NAT rule can be fetched based on rule-name or rule-set-name or service-interface-name or any combination of the three as follows:
 *  - Data for all nat rules can be fetched by parsing .* for variable rule-name
 *  - Data for a subset of nat rules can be fetched by using | seperated values e.g: r1 | r2
 *  - Data for only one rule can be fetched parsing specific name for variable rule-name e.g: r1
 *  - Data for all nat rule-sets can be fetched by parsing .* for variable rule-set-name
 *  - Data for a subset of nat rule-sets can be fetched by parsing | seperated values e.g: rs1 | rs2
 *  - Data for only one rule-set can be fetched parsing specific name for variable rule-set-name e.g: rs1
 *  - Based on service interface name (parse vms-.* or ams.* for all vms or ams interfaces)
 *  - Selected service interface names using | seperated values e.g: ams0 | ams1
 *  - Specific service interface name using the name of service interface e.g: ams0
 */
healthbot {
    topic usf.cgnat.rule-set-info {
        rule source-nat-rule-set-info {
            keys [ interface-name rule-name rule-set-name service-set-name ];
            description "Source NAT rule-set info";
            sensor SourceNatRuleSetInfo {
                iAgent {
                    file source_nat_rule_set_info.yml;
                    table SourceNatRuleSetTable;
                    frequency 60s;
                }
            }
            field concurrent-hits {
                sensor SourceNatRuleSetInfo {
                    path concurrent-hits;
                }
                type integer;
                description "Concurrent Hits";
            }
            field failed-hits {
                sensor SourceNatRuleSetInfo {
                    path failed-hits;
                }
                type integer;
                description "Failed Hits";
            }
            field interface-name {
                sensor SourceNatRuleSetInfo {
                    where "interface-name =~ /{{interface-name}}/";
                    path interface-name;
                }
                type string;
                description "Interface name";
            }
            field rule-name {
                sensor SourceNatRuleSetInfo {
                    where "rule-name =~ /{{rule-name}}/";
                    path rule-name;
                }
                type string;
                description "Name of the Source NAT rule";
            }
            field rule-set-name {
                sensor SourceNatRuleSetInfo {
                    where "rule-set-name =~ /{{rule-set-name}}/";
                    path rule-set-name;
                }
                type string;
                description "Name of rule-set";
            }
            field rule-translation-hits {
                sensor SourceNatRuleSetInfo {
                    path rule-translation-hits;
                }
                type integer;
                description "Rule translation hits";
            }
            field service-set-name {
                sensor SourceNatRuleSetInfo {
                    path service-set-name;
                }
                type string;
                description "Name of service-set";
            }
            field succ-hits {
                sensor SourceNatRuleSetInfo {
                    path succ-hits;
                }
                type integer;
                description "Successful translation hits";
            }
            trigger SourceNatRuleSetTriggers {
                frequency 70s;
                term failed_hits_trigger {
                    when {
                        increasing-at-least-by-value "$failed-hits" {
                            value 1;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Observing failed translation hits for service-set: $service-set-name , service-interface: $interface-name , rule-set: $rule-set-name and rule: $rule-name";
                        }
                    }
                }
                term Default {
                    then {
                        status {
                            color green;
                            message "NAT rule-set is normal for service-set: $service-set-name , service-interface: $interface-name , rule-set: $rule-set-name and rule: $rule-name";
                        }
                    }
                }
            }
            variable interface-name {
                value None;
                description "interface name to be matched";
                type string;
            }
            variable rule-name {
                value None;
                description "Rule name to be matched";
                type string;
            }
            variable rule-set-name {
                value None;
                description "Rule-set-name to be matched";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 21.1R1 {
                                    release-support min-supported-release;
                                    platform All-models-where-SPC3-is-supported;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
