/* This rule fetches data for APP mappings
 *
 * The data can be fetched using pool-name or service-interface-name or internal-ip or service-set-name or any combination of the 4
 *
 * The data can be fetched:
 *  - Based on pool name (parse .* for variable pool-name for all pools)
 *  - Selected pool names (parse | seperated values for subset e.g: p1 | p2)
 *  - For a particular pool (parse exact pool name)
 *  - Based on service interface name (parse vms-.* or ams.* for all vms or ams interfaces)
 *  - Selected service interface names using | seperated values e.g: ams0 | ams1
 *  - Specific service interface name using the name of service interface e.g: ams0
 *  - Based on service-set-name (parse .* for variable service-set-name) to fetch data for all service-sets
 *  - Data for sub-set of service-sets can be fetched by parsing | seperated values for variable service-set-name e.g: ss1 | ss2
 *  - Data for a specific service-set can be fetched by parsing the name of the service-set e.g: ss1
 *  - Data can be fetched for all internal-ips by parsing .* for variable internal-ip
 *  - Data for sub-set of internal-ips can be fetched by parsing | seperated values for variable internal-ip e.g: 20.1.1.2 | 20.1.1.3
 *  - Data for a specific internal-ip can be fetched by parsing the exact sting of ip e.g: 20.1.1.2
 *
 */
healthbot {
    topic usf.cgnat.subscriber-app-mapping-info {
        rule subscriber-app-mapping-info {
            keys [ interface-name internal-ip pool-name service-set-name ];
            description "Source NAT APP Mapping Info";
            sensor SourceNatAppMappingInfo {
                iAgent {
                    file source_nat_app_mapping.yml;
                    table SourceNatAppTable;
                    frequency 60s;
                }
            }
            field external-ip {
                sensor SourceNatAppMappingInfo {
                    path external-ip;
                }
                type string;
                description "Post NAT IP address";
            }
            field interface-name {
                sensor SourceNatAppMappingInfo {
                    where "interface-name =~ /{{service-interface-name}}/";
                    path interface-name;
                }
                type string;
                description "Service interface Name";
            }
            field internal-ip {
                sensor SourceNatAppMappingInfo {
                    where "internal-ip =~ /{{internal-ip-address}}/";
                    path internal-ip;
                }
                type string;
                description "Internal IP address";
            }
            field mapping-state {
                sensor SourceNatAppMappingInfo {
                    path mapping-state;
                }
                type string;
                description "State of Mapping";
            }
            field pool-name {
                sensor SourceNatAppMappingInfo {
                    where "pool-name =~ /{{pool-name}}/";
                    path pool-name;
                }
                type string;
                description "Name of the NAT pool";
            }
            field ports-in-use {
                sensor SourceNatAppMappingInfo {
                    path ports-in-use;
                }
                type integer;
                description "Number of ports in use";
            }
            field service-set-name {
                sensor SourceNatAppMappingInfo {
                    path service-set-name;
                }
                type string;
                description "Name of the service-set";
            }
            field session-count {
                sensor SourceNatAppMappingInfo {
                    path session-count;
                }
                type integer;
                description "Session count";
            }
            variable internal-ip-address {
                value None;
                description "Internal IP address to be matched";
                type string;
            }
            variable pool-name {
                value None;
                description "pool-name to be matched";
                type string;
            }
            variable service-interface-name {
                value None;
                description "Name of the service interface to be matched";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 21.1R1 {
                                    release-support min-supported-release;
                                    platform All-models-where-SPC3-is-supported;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
