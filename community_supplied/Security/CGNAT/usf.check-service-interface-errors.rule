/*
 * Detectsservice- interface errors and notifies when anomalies are found.
 */
healthbot {
    topic usf.check-service-interface-errors {
        rule check-service-interface-errors {
            keys service-interface;
            synopsis "Interface error analyzer";
            description "Collects the interface errors (errors (all), drops,discards, timeouts and runts) periodically and notifies in case of anomalies";
            sensor ServiceInterfaceErrorStats {
                synopsis "Interfaces netconf based iAgent sensor definition";
                description "iAgent sensor defined in yml file using netconf rpc/cli command and defined fields using pyez tables & views to collect data from network device";
                iAgent {
                    file vms_intf_errors.yml;
                    table IntStatsTable;
                    frequency 60s;
                }
            }
            field carrier-transitions {
                sensor ServiceInterfaceErrorStats {
                    path carrier-transitions;
                }
                type integer;
                description "Carrier transitions";
            }
            field error-threshold {
                constant {
                    value "{{error-threshold}}";
                }
                type integer;
            }
            field framing-errors {
                sensor ServiceInterfaceErrorStats {
                    path framing-errors;
                }
                type integer;
                description "Framing errors";
            }
            field input-discards {
                sensor ServiceInterfaceErrorStats {
                    path input-discards;
                }
                type integer;
                description "Input Discards";
            }
            field input-drops {
                sensor ServiceInterfaceErrorStats {
                    path input-drops;
                }
                type integer;
                description "Input Drops";
            }
            field input-errors {
                sensor ServiceInterfaceErrorStats {
                    path input-errors;
                }
                type integer;
                description "Interfaces input error";
            }
            field input-giants {
                sensor ServiceInterfaceErrorStats {
                    path input-giants;
                }
                type integer;
                description "Input Giants";
            }
            field input-resource-errors {
                sensor ServiceInterfaceErrorStats {
                    path input-resource-errors;
                }
                type integer;
                description "Input resource erros";
            }
            field input-runts {
                sensor ServiceInterfaceErrorStats {
                    path input-runts;
                }
                type integer;
                description "Input Runts";
            }
            field mtu-errors {
                sensor ServiceInterfaceErrorStats {
                    path mtu-errors;
                }
                type integer;
                description "Mtu errors";
            }
            field output-drops {
                sensor ServiceInterfaceErrorStats {
                    path output-drops;
                }
                type integer;
                description "Output drops";
            }
            field output-errors {
                sensor ServiceInterfaceErrorStats {
                    path output-errors;
                }
                type integer;
                description "Interfaces output error";
            }
            field output-resource-errors {
                sensor ServiceInterfaceErrorStats {
                    path output-resource-errors;
                }
                type integer;
                description "Output resource errors";
            }
            field service-interface {
                sensor ServiceInterfaceErrorStats {
                    where "name =~ /{{interface-name}}/";
                    path name;
                }
                type string;
                description "Interfaces to be monitored";
            }
            trigger interface-in-errors {
                synopsis "Interface input-errors";
                description "Sets health based on the change in input-errors count";
                frequency 70s;
                term input_errors {
                    when {
                        increasing-at-least-by-value "$input-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Input errors seen on $service-interface";
                        }
                    }
                }
                term input_drops {
                    when {
                        increasing-at-least-by-value "$input-drops" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Input drops seen for $service-interface";
                        }
                    }
                }
                term framing_errors {
                    when {
                        increasing-at-least-by-value "$framing-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Framing errors seen for $service-interface";
                        }
                    }
                }
                term input_runts {
                    when {
                        increasing-at-least-by-value "$input-runts" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Input runts seen for $service-interface";
                        }
                    }
                }
                term input_giants {
                    when {
                        increasing-at-least-by-value "$input-giants" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Input giants seen for $service-interface";
                        }
                    }
                }
                term input_discards {
                    when {
                        increasing-at-least-by-value "$input-discards" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Input discards seen for $service-interface";
                        }
                    }
                }
                term input_resource_errors {
                    when {
                        increasing-at-least-by-value "$input-resource-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Input resource errors seen for $service-interface";
                        }
                    }
                }
                term default {
                    then {
                        status {
                            color green;
                            message "No input errors seen in $service-interface";
                        }
                    }
                }
            }
            trigger interface-out-errors {
                synopsis "Interface output-errors";
                description "Sets health based on the change in output-errors count";
                frequency 60s;
                term carrier_transitions {
                    when {
                        increasing-at-least-by-value "$carrier-transitions" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Carrier transition errors seen on $service-interface";
                        }
                    }
                }
                term output_errors {
                    when {
                        increasing-at-least-by-value "$output-drops" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Output errors seen for $service-interface";
                        }
                    }
                }
                term output_drops {
                    when {
                        increasing-at-least-by-value "$output-drops" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Output drops seen for $service-interface";
                        }
                    }
                }
                term mtu_errors {
                    when {
                        increasing-at-least-by-value "$mtu-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "MTU errors seen for $service-interface";
                        }
                    }
                }
                term output_resource_errors {
                    when {
                        increasing-at-least-by-value "$output-resource-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Output resource errors seen on $service-interface";
                        }
                    }
                }
                term default {
                    then {
                        status {
                            color green;
                            message "No output errors seen on $service-interface";
                        }
                    }
                }
            }
            variable error-threshold {
                value 1;
                description "Interface traffic low threshold value in bps.";
                type int;
            }
            variable interface-name {
                value None;
                description "Enter Service interface name";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 21.1R1 {
                                    release-support min-supported-release;
                                    platform All-models-where-SPC3-is-supported;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
