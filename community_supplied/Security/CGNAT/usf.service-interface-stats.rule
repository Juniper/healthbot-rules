/*
 * This rule checks if the input/output pps/bps of service interface is goind beyond threshold
 *
 * It flags RED if the input/output pps/bps of service interface is goes beyond threshold
 * Else it keeps flagging green
 *
 */
healthbot {
    topic usf.service-interface-stats {
        rule service-interface-stats {
            keys service-interface-name;
            description "Service Interface Stats";
            sensor ServiceInterfaceStats {
                iAgent {
                    file vms_intf_stats.yml;
                    table VmsIntfStatsTable;
                    frequency 60s;
                    args interface-name {
                        arg-value "{{service-interface-name}}";
                    }
                }
            }
            field admin-status {
                sensor ServiceInterfaceStats {
                    path admin-status;
                }
                type string;
                description "Admin status";
            }
            field bps-threshold {
                constant {
                    value "{{bps-threshold}}";
                }
                type integer;
                description "BPS threshold";
            }
            field input-bps {
                sensor ServiceInterfaceStats {
                    path input-bps;
                }
                type integer;
                description "Input bps";
            }
            field input-pps {
                sensor ServiceInterfaceStats {
                    path input-pps;
                }
                type integer;
                description "Input PPS";
            }
            field oper-status {
                sensor ServiceInterfaceStats {
                    path oper-status;
                }
                type string;
                description "Oper status";
            }
            field output-bps {
                sensor ServiceInterfaceStats {
                    path output-bps;
                }
                type integer;
                description "Output Bps";
            }
            field output-pps {
                sensor ServiceInterfaceStats {
                    path output-pps;
                }
                type integer;
                description "Output PPS";
            }
            field pps-threshold {
                constant {
                    value "{{pps-threshold}}";
                }
                type integer;
                description "PPS threshold";
            }
            field service-interface-name {
                sensor ServiceInterfaceStats {
                    where "name =~ /{{service-interface-name}}/";
                    path name;
                }
                type string;
                description "Name of the service interface";
            }
            trigger Service_intf_stats_triggers {
                frequency 60s;
                term admin_status {
                    when {
                        does-not-match-with "$admin-status" up;
                    }
                    then {
                        status {
                            color red;
                            message "admin-status of $service-interface-name is not UP, it is $admin-status";
                        }
                    }
                }
                term oper_status {
                    when {
                        does-not-match-with "$oper-status" up;
                    }
                    then {
                        status {
                            color red;
                            message "oper-status of $service-interface-name is not UP, it is $oper-status";
                        }
                    }
                }
                term input_pps_high {
                    when {
                        greater-than "$input-pps" "$pps-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Input pps is $input-pps higher than $pps-threshold for $service-interface-name";
                        }
                    }
                }
                term input_bps_high {
                    when {
                        greater-than "$input-bps" "$bps-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Input bps is $input-bps higher than $bps-threshold for $service-interface-name";
                        }
                    }
                }
                term output-pps {
                    when {
                        greater-than "$output-pps" "$pps-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Output pps is $output-pps higher than $pps-threshold for $service-interface-name";
                        }
                    }
                }
                term output_bps {
                    when {
                        greater-than "$output-bps" "$bps-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Output bps is $output-bps higher than $bps-threshold for $service-interface-name";
                        }
                    }
                }
                term Default {
                    then {
                        status {
                            color green;
                            message "Interface stats are normal for $service-interface-name";
                        }
                    }
                }
            }
            variable bps-threshold {
                value 1000000000;
                type int;
            }
            variable pps-threshold {
                value 1000000000;
                description "pps threshold";
                type int;
            }
            variable service-interface-name {
                value None;
                description "Service Interface Name";
                type sensor-argument;
            }
        }
    }
}
