/*
 * This rule flags anamolies related to service-set summary
 *
 * This rule flags RED when one of the following events occur
 *  - CPU util goes beyond threshold (default: 90%)
 *  - Service-set percent bytes used >= threshold (default: 90%)
 *  - Service-set policy  percent bytes used >= threshold (default: 90%)
 * Else it keeps flagging GREEN
 *
 * The data can be fetched to sensor:
 *  - Based on service-set-name (parse .* for variable service-set-name) to fetch data for all service-sets
 *  - Data for sub-set of service-sets can be fetched by parsing | seperated values for variable service-set-name e.g: ss1 | ss2
 *  - Data for a specific service-set can be fetched by parsing the name of the service-set e.g: ss1
 *  - Based on service interface name (parse vms-.* or ams.* for all vms or ams interfaces)
 *  - Selected service interface names using | seperated values e.g: ams0 | ams1
 *  - Specific service interface name using the name of service interface e.g: ams0
 *
 */
healthbot {
    topic usf.service-set-summary {
        rule service-set-summary {
            keys interface-name;
            description "Fetches Info About Service Set Summary";
            function get_cpu_util_percentage_float {
                path get-float-from-percentage-string.py;
                method get_float_from_percentage_string;
                argument percentage_string {
                    mandatory;
                }
            }
            sensor servicesetsummary {
                iAgent {
                    file service_set_summary.yml;
                    table ServiceSetSummaryTable;
                    frequency 60s;
                }
            }
            field cpu-util-exp {
                constant {
                    value "{{cpu-util-exp}}";
                }
                type float;
                description "Expected value for CPU utilization";
            }
            field cpu-utilisation {
                sensor servicesetsummary {
                    path service-set-cpu-utilization;
                }
                type string;
                description "CPU utilisation of the service PIC";
            }
            field cpu-utilisation-value {
                formula {
                    user-defined-function {
                        function-name get_cpu_util_percentage_float;
                        argument percentage_string "$cpu-utilisation";
                    }
                }
                type float;
            }
            field interface-name {
                sensor servicesetsummary {
                    where "interface-name =~ /{{service-interface-name}}/";
                    path interface-name;
                }
                type string;
            }
            field service-set-bytes-percent-exp {
                constant {
                    value "{{service-set-bytes-percent-exp}}";
                }
                type float;
                description "Expected value for service-set bytes percentage utilisation";
            }
            field service-set-percent-bytes-used {
                sensor servicesetsummary {
                    path service-set-percent-bytes-used;
                }
                type float;
                description "Percentage of bytes used by service-set";
            }
            field service-set-percent-policy-bytes-used {
                sensor servicesetsummary {
                    path service-set-percent-policy-bytes-used;
                }
                type float;
                description "Percentage of policy bytes used by service-set";
            }
            field service-set-percent-policy-bytes-used-exp {
                constant {
                    value "{{service-set-percent-policy-bytes-used-exp}}";
                }
                type float;
                description "Expected value for service-set policy bytes utilisation, defaults to 90%";
            }
            field service-set-percent-session-bytes-used {
                sensor servicesetsummary {
                    path service-set-percent-session-bytes-used;
                }
                type float;
                description "Percentage of session bytes used by service-set";
            }
            trigger service_set_test {
                frequency 60s;
                term cpu_utilization_high {
                    when {
                        greater-than-or-equal-to "$cpu-utilisation-value" "$cpu-util-exp" {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "CPU Utilisation is High for $interface-name: $cpu-utilisation";
                        }
                    }
                }
                term service_set_bytes_high {
                    when {
                        greater-than-or-equal-to "$service-set-percent-bytes-used" 90.0 {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Service-set percent bytes used is high for $interface-name";
                        }
                    }
                }
                term service_set_percent_policy_bytes_used_high {
                    when {
                        greater-than-or-equal-to "$service-set-percent-policy-bytes-used" "$service-set-percent-policy-bytes-used-exp" {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Percentage of service-set policy bytes used is high";
                        }
                    }
                }
                term all_normal {
                    then {
                        status {
                            color green;
                            message "Service-set summary output is normal for $interface-name";
                        }
                    }
                }
            }
            variable cpu-util-exp {
                value 90.0;
                type float;
            }
            variable service-interface-name {
                value None;
                description "Service interface name to be matched";
                type string;
            }
            variable service-set-bytes-percent-exp {
                value 90.0;
                description "Expected value for service-set bytes percentage utilisation, defaults to 90%";
                type float;
            }
            variable service-set-percent-policy-bytes-used-exp {
                value 90.0;
                description "Expected value for service-set policy bytes utilisation, defaults to 90%";
                type float;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 21.1R1 {
                                    release-support min-supported-release;
                                    platform All-models-where-SPC3-is-supported;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
