/*
 * This rule flags RED if session count is beyond the threshold (default: 16M)
 *
 * Data can be fetched to sensor:
 *  - Based on service interface name (parse vms-.* or ams.* for all vms or ams interfaces)
 *  - Selected service interface names using | seperated values e.g: ams0 | ams1
 *  - Specific service interface name using the name of service interface e.g: ams0
 *  - Based on service-set-name (parse .* for variable service-set-name) to fetch data for all service-sets
 *  - Data for sub-set of service-sets can be fetched by parsing | seperated values for variable service-set-name e.g: ss1 | ss2
 *  - Data for a specific service-set can be fetched by parsing the name of the service-set e.g: ss1
 *
 */
healthbot {
    topic usf.services-sessions-count {
        rule services-sessions-count {
            keys [ interface-name service-set-name ];
            description "Services Sessions Count";
            sensor ServicesSessionsCount {
                iAgent {
                    file services_sess_count.yml;
                    table ServiceSetSessionCountTable;
                    frequency 60s;
                }
            }
            field interface-name {
                sensor ServicesSessionsCount {
                    where "interface-name =~ /{{service-interface-name}}/";
                    path interface-name;
                }
                type string;
                description "Interface name";
            }
            field invalid-session-count {
                sensor ServicesSessionsCount {
                    path invalid-session-count;
                }
                type integer;
                description "Invalid session count";
            }
            field other-session-count {
                sensor ServicesSessionsCount {
                    path other-session-count;
                }
                type integer;
                description "Other session count";
            }
            field pending-session-count {
                sensor ServicesSessionsCount {
                    path pending-session-count;
                }
                type integer;
                description "Pending session count";
            }
            field service-set-name {
                sensor ServicesSessionsCount {
                    where "service-set-name =~ /{{ss-name}}/";
                    path service-set-name;
                }
                type string;
                description "Name of the service-set";
            }
            field valid-session-count {
                sensor ServicesSessionsCount {
                    path valid-session-count;
                }
                type integer;
                description "Valid Session Count";
            }
            field valid-session-count-exp {
                constant {
                    value "{{valid-session-count-limit}}";
                }
                type integer;
                description "Expected value for valid-session-count";
            }
            trigger session-count {
                frequency 60s;
                term valid-session-count-check {
                    when {
                        greater-than-or-equal-to "$valid-session-count" "$valid-session-count-exp";
                    }
                    then {
                        status {
                            color red;
                            message "Session count is exceeding the max allowed session count for service-interface $interface-name and service-set $service-set-name";
                        }
                    }
                }
                term invalid-session-count-check {
                    when {
                        greater-than "$invalid-session-count" 0;
                    }
                    then {
                        status {
                            color red;
                            message "Invalid session count is increasing for service-interface $interface-name and service-set $service-set-name";
                        }
                    }
                }
                term Default {
                    then {
                        status {
                            color green;
                            message "Session count for service-interface $interface-name and service-set $service-set-name";
                        }
                    }
                }
            }
            variable service-interface-name {
                value None;
                description "Service interface name to be matched";
                type string;
            }
            variable ss-name {
                value None;
                description "Name of the service set to be matched";
                type string;
            }
            variable valid-session-count-limit {
                value 16000000;
                description "Limit of sessions";
                type int;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 21.1R1 {
                                    release-support min-supported-release;
                                    platform All-models-where-SPC3-is-supported;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
