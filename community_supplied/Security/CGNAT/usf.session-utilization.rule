/*
 * This rule flags anamolies related to session-utilization
 *
 * It flags RED when one of the following events occur:
 *  - CPU load exceeds threshold (default: 90%)
 *  - Session count exceeds threshold (default: 16M)
 *  - Session memory exceeds threshold (default: 90%)
 *  - Memory percent exceeds threshold (default: 90%)
 * Else keeps flagging GREEN
 *
 */
healthbot {
    topic usf.session-utilization {
        rule session-utilization {
            keys interface-name;
            description "Fetches Session Utilization Output";
            function get-cpu-load {
                path get-float-from-cpu-string.py;
                method get_float_from_percentage_string;
                argument percentage_string {
                    mandatory;
                }
            }
            sensor sessionutilization {
                iAgent {
                    file session_utilization.yml;
                    table SessionUtilizationTable;
                    frequency 60s;
                }
            }
            field cpu-load {
                formula {
                    user-defined-function {
                        function-name get-cpu-load;
                        argument percentage_string "$cpu-utilization-string";
                    }
                }
                type float;
            }
            field cpu-load-exp {
                constant {
                    value "{{cpu-load-exp}}";
                }
                type float;
                description "Expected value for CPU load";
            }
            field cpu-utilization-string {
                sensor sessionutilization {
                    path cpu-load;
                }
                type string;
            }
            field interface-name {
                sensor sessionutilization {
                    where "interface-name =~ /{{service-interface-name}}/";
                    path interface-name;
                }
                type string;
                description "Name of service interface";
            }
            field memory-percent {
                sensor sessionutilization {
                    path memory-percent;
                }
                type float;
            }
            field memory-percent-exp {
                constant {
                    value "{{memory-percent-exp}}";
                }
                type float;
                description "Expected value for memory percentage";
            }
            field session-count {
                sensor sessionutilization {
                    path session-count;
                }
                type integer;
            }
            field session-count-exp {
                constant {
                    value "{{session-count-exp}}";
                }
                type integer;
                description "Expected value for session count";
            }
            field session-memory-exp {
                constant {
                    value "{{session-memory-exp}}";
                }
                type float;
                description "Expected value for session-memory";
            }
            field session-memory-percent {
                sensor sessionutilization {
                    path session-memory-percent;
                }
                type float;
            }
            trigger session-util-triggers {
                frequency 60s;
                term cpu-load-high {
                    when {
                        greater-than-or-equal-to "$cpu-load" "$cpu-load-exp" {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "CPU Load is high";
                        }
                        next;
                    }
                }
                term session-count-high {
                    when {
                        greater-than-or-equal-to "$session-count" "$session-count-exp" {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Session Count is High for $interface-name";
                        }
                        next;
                    }
                }
                term session-memory-percent-high {
                    when {
                        greater-than-or-equal-to "$session-memory-percent" "$session-memory-exp" {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Session Memory Percentage is high $interface-name";
                        }
                        next;
                    }
                }
                term memory-percent-high {
                    when {
                        greater-than-or-equal-to "$memory-percent" "$memory-percent-exp" {
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Memory percentage is high $interface-name";
                        }
                    }
                }
                term default {
                    then {
                        status {
                            color green;
                            message "Session utilization is Normal for $interface-name";
                        }
                    }
                }
            }
            variable cpu-load-exp {
                value 90.0;
                description "Expected value for CPU load, defaults to 90";
                type float;
            }
            variable memory-percent-exp {
                value 90.0;
                description "Expected value for memory percentage";
                type float;
            }
            variable service-interface-name {
                value None;
                description "Service interface name to be matched";
                type string;
            }
            variable session-count-exp {
                value 16000000;
                description "Expected value for session count, defaults to 16M";
                type int;
            }
            variable session-memory-exp {
                value 90.0;
                description "Expected value for session memory utilisation, defaults to 90%";
                type float;
            }
        }
    }
}
