healthbot {
    topic chassis.environment {
        description "Collects temperature and state from all chassis component sensors using iAgent";
        synopsis "All chassis components temperature and state checks";
        rule evo-check-fpc-temperature {
            keys [ name temperature-name ];
            sensor environment {
                synopsis "iAgent sensor definition";
                description "iAgent sensor to collect telemetry data from network device";
                iAgent {
                    file evo-chassis-environment.yml;
                    table EvoChassisEnvironmentFpcTable;
                    frequency 60s;
                }
            }
            field temp-threshold {
                constant {
                    value "{{temp-threshold}}";
                }
                type integer;
                description "Maximum temperature";
            }
            trigger check-temperature {
                synopsis "FPC temperature KPI";
                description "Sets health based increase in FPC temperature";
                frequency 1o;
                term is-temp-above-threshold {
                    when {
                        greater-than "$temperature" "$temp-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "($name) ($temperature-name) is above threshold: ($temperature)";
                        }
                    }
                }
                term is-temp-normal {
                    then {
                        status {
                            color green;
                            message "($name) ($temperature-name) is normal: ($temperature)";
                        }
                    }
                }
            }
            trigger state {
                frequency 1o;
                term is_comp_online {
                    when {
                        matches-with "$state" Online {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "($name): ($temperature-name) is online";
                        }
                    }
                }
                term is_comp_offline {
                    then {
                        status {
                            color red;
                            message "($name): ($temperature-name) is offline";
                        }
                    }
                }
            }
            variable temp-threshold {
                value 55;
                description "temperature threshold";
                type int;
            }
        }
    }
}
