healthbot {
    topic system.statistics{
        description "Rules relevant to metrics and KPI of the system";
        synopsis "System product name and software version analyzer";
        rule evo-check-version {
            description "Validates the product name and Junos version";
            synopsis "System product name and software version analyzer";
            keys product-model;
            sensor product-and-junos-version {
                description "Netconf rpc get-software-information to collect data from network device";
                synopsis "System product namd and software version iAgent sensor definition";
                iAgent {
                    file evo-software-version.yml;
                    table EvoSoftwareVersionTable;
                    frequency 60s;
                }
            }
            field configured-product-value {
               description "System product model like MX240 or MX480 or MX960"; 
                constant {
                    value "{{product-value}}";
                }
            }
            field configured-software-version-value {
               description "System software version";
                constant {
                    value "{{software-version-value}}";
                }
            }
            trigger product-name {
                description "sets health based on product model";
                synopsis "system product model kpi";
                frequency 1o;
                term is-product-model-valid {
                    when {
                        matches-with "$product" "$configured-product-value";
                    }
                    then {
                        status {
                            color green;
                            message "Device product model is valid ($configured-product-value)";
                        }
                    }
                }
                term unauthorized-product-model-used {
                    then {
                        status {
                            color red;
                            message "Unauthorized product ($product) is being used";
                        }
                    }
                }
            }
            trigger software-version {
                description "sets health based on software version";
                synopsis "system software version kpi";
                frequency 1o;
                term is-junos-version-correct {
                    when {
                        matches-with "$version" "$configured-software-version-value";
                    }
                    then {
                        status {
                            color green;
                            message "Junos version $configured-software-version-value is being used";
                        }
                    }
                }
                term unauthorized-junos-version-used {
                    then {
                        status {
                            color red;
                            message "Unauthorized Junos version ($version) is being used";
                        }
                    }
                }
            }
            variable product-value {
                value mx960;
                description "Product model the system should be";
                type string;
            }
            variable software-version-value {
                value 17.4R1;
                description "Software Version the system should have";
                type string;
            }
        }
    }
}
