healthbot {
    topic system.processes {
        rule evo-check-process-memory {
            keys daemon-name;
            synopsis "System processes memory utilization analyzer";
            description "Collects system process's memory utilization periodically and notifies anomalies when daemon memory usage exceed threshold";
            sensor SystemProcExtEvoSensor {
                synopsis "System processes memory iAgent sensor definition";
                description "iAgent netconf rpc/cli command sensor to collect data from network device";
                iAgent {
                    file evo-system-processes-exec.yml;
                    table EvoSystemProcExtTable;
                    frequency 60s;
                }
            }
            function toKiloBytes {
                path evo-system-proc-extn.py;
                method kb_convert;
                argument size_value {
                    mandatory;
                }
            } 

            field daemon-name {
                sensor SystemProcExtEvoSensor {
                    path cmd;
                }
                type string;
            } 
            field resident-memory {
                formula {
                    user-defined-function {
                        function-name toKiloBytes;
                        argument size_value "$res";
                    }
                }
                type float;
            }
            field shared-memory {
                formula {
                    user-defined-function {
                        function-name toKiloBytes;
                        argument size_value "$shr";
                    }
                }
                type float;
            }
            field virtual-memory {
                formula {
                    user-defined-function {
                        function-name toKiloBytes;
                        argument size_value "$virt";
                    }
                }
                type float;
            }
            field max-threshold {
                constant {
                    value "{{high-threshold}}";
                }
                type float;
            }
            field mem-util-percent {
                sensor SystemProcExtEvoSensor {
                    path mem;
                }
                type float;
            }
            field min-threshold {
                constant {
                    value "{{low-threshold}}";
                }
                type float;
            }
            field process-name {
                constant {
                    value "{{process-name-input}}";
                }
                type string;
            }
            trigger mem-usage {
                synopsis "System prcoesses memory utilization kpi";
                description "Sets health based on system processes memory utilization";
                frequency 1o;
                term is-processes-not-found {
                    when {
                        does-not-match-with "$daemon-name" "$process-name";
                    }
                }
                term is-mem-utilization-high {
                    when {
                        greater-than-or-equal-to "$mem-util-percent" "$max-threshold" {
                            time-range 3o;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$daemon-name mem utilization ($mem-util-percent), crossed high threshold ($max-threshold). virtual memory: ($virtual-memory), resident-memory: ($resident-memory), shared-memory: ($shared-memory)";
                        }
                    }
                }
                term is-mem-utilization-warn {
                    when {
                        greater-than-or-equal-to "$mem-util-percent" "$min-threshold" {
                            time-range 3o;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$daemon-name mem utilization ($mem-util-percent), is in middle range. virtual memory: ($virtual-memory), resident-memory: ($resident-memory), shared-memory: ($shared-memory)";
                        }
                    }
                }
                term is-mem-utilization-low {
                    then {
                        status {
                            color green;
                            message "$daemon-name mem utilization:($mem-util-percent), is normal. virtual memory: ($virtual-memory), resident-memory: ($resident-memory), shared-memory: ($shared-memory)";
                        }
                    }
                }
            }
            variable high-threshold {
                value 80.0;
                description "Daemon memory high threshold: Utilization increase between metrics, before we report anomaly";
                type float;
            }
            variable low-threshold {
                value 50.0;
                description "Daemon memory low threshold: Utilization increase between metrics, before we report anomaly";
                type float;
            }
            variable process-name-input {
                value .*;
                description "Demon name to monitor, regular regular expression, e.g. 'rpd|dfwd|dcd'";
                type string;
            }
        }
    }
}
