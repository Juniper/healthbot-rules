healthbot {
    topic system.processes {
        rule evo-check-process-cpu {
            synopsis "System processes cpu analyzer";
            description "Collects system process's cpu utilization periodically and notifies anomalies when daemon CPU usage exceed threshold";
            keys [ daemon daemon-name ];
            sensor SystemProcExtEvoSensor {
                synopsis "System processes CPU iAgent sensor definition";
                description "iAgent netconf rpc/cli command sensor to collect data from network device";
                iAgent {
                    file evo-system-processes-exec.yml;
                    table EvoSystemProcExtTable;
                    frequency 60s;
                }
            }
            field cpu-util-percent {
                sensor SystemProcExtEvoSensor {
                    path cpu;
                }
                description "Daemon CPU utilization";
                type float;
            }
            field daemon-name {
                sensor SystemProcExtEvoSensor {
                    path cmd;
                }
                description "Daemon to be monitored";
                type string;
            }
            field max-threshold {
                constant {
                    value "{{high-threshold}}";
                }
                description "Daemon cpu high threshold";
                type float;
            }
            field min-threshold {
                constant {
                    value "{{low-threshold}}";
                }
                description "Daemon cpu low threshold";
                type float;
            }
            field process-name {
                constant {
                    value "{{process-name-input}}";
                }
                description "Selected daemon to be monitored";
                type string;
            }
            trigger cpu-usage {
                synopsis "System prcoesses cpu utilization kpi";
                description "Sets health based on system processes cpu utilization";
                frequency 1o;
                term is-processes-not-found {
                    when {
                        does-not-match-with "$daemon-name" "$process-name";
                    }
                }
                term is-cpu-utilization-high {
                    when {
                        greater-than-or-equal-to "$cpu-util-percent" "$max-threshold" {
                            time-range 3o;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$daemon-name cpu utilization ($cpu-util-percent), crossed high threshold ($max-threshold)";
                        }
                    }
                }
                term is-cpu-utilization-warn {
                    when {
                        greater-than-or-equal-to "$cpu-util-percent" "$min-threshold" {
                            time-range 3o;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$daemon-name cpu utilization ($cpu-util-percent), is in middle range";
                        }
                    }
                }
                term is-cpu-utilization-low {
                    then {
                        status {
                            color green;
                            message "$daemon-name cpu utilization:($cpu-util-percent), is normal";
                        }
                    }
                }
            }
            variable high-threshold {
                value 80.0;
                description "Daemon cpu high threshold: Utilization increase between metrics, before we report anomaly";
                type float;
            }
            variable low-threshold {
                value 50.0;
                description "Daemon cpu low threshold: Utilization increase between metrics, before we report anomaly";
                type float;
            }
            variable process-name-input {
                value .*;
                description "Demon name to monitor, regular regular expression, eg 'rpd|dfwd|dcd'";
                type string;
            }
        }
    }
}
