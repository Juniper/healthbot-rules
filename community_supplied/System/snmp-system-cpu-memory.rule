/*
 * Detects System CPU & memory utilization and notifies when anomalies are found.
 * One input control detection
 * 
 *   1) Threshold, is the threshold value for CPU and memory utiilzation takes as input and pass to the rule to 
 *      report an anomaly.  By default value is 80
 *
 */
healthbot {
    topic system.statistics  {
        rule check-snmp-system-cpu-memory {
            synopsis "System CPU, Memory Utilization change detector";
            description "Collects CPU, Memory Utilization details from Routing Engines and notify anomalies based on threshold values ";
           /*
            * Use description as key for rule.
            */
            keys description;
            sensor system-cpu-memory {
			    synopsis "system CPU Memory sensor initialization";
                description "System SNMP sensor to collect data from network device";
                snmp {
                    table JUNIPER-MIB::jnxOperatingTable;
                    frequency 300s;
                }
            }
	   /*
            * Fields defined with variables, dynamic thresholds and constant values
            */
            field description {
                sensor system-cpu-memory {
                    where "jnxOperatingDescr =~ /{{component-name}}/";
                    path jnxOperatingDescr;
                }
                type string;
                description "Collect operating description name which contains Routing Engine in the jnxOperatingDescr";
            }
            field dt-buffer-memory-utilization {
                formula {
                    anomaly-detection {
                        algorithm 3sigma;
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$system-buffer-memory";
                    }
                }
                type integer;
                description "dynamic threshold value for memory buffer utilization";
            }
            field dt-cpu-utilization {
                formula {
                    dynamic-threshold {
                        algorithm 3sigma;           
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$system-cpu";
                    }
                }
                type integer;
                description "dynamic threshold value for system cpu utilization";
            }
            field system-buffer-memory {
                sensor system-cpu-memory {
                    path jnxOperatingBuffer;
                }
                type integer;
                description "System memory buffer utilization";
            }
            field system-cpu {
                sensor system-cpu-memory {
                    path jnxOperatingCPU;
                }
                type integer;
                description "System CPU utilization";
            }
            field threshold {
                constant {
                    value "{{static-threshold}}";
                }
                type integer;
				description "System CPU utilization"; 
            }
           /*
            * Anomaly detection logic for buffer memory utilization.
            */
            trigger system-buffer {
			    /*
                * Sets color to red and sends out an anomaly notification when
                * memory buffer utilization count increases more than threshold static ($threshold) value
                * 
                */ 
                frequency 300s;                      
                term is-system-buffer-memory-utilization-abnormal {
                    when {
                        greater-than "$system-buffer-memory" "$threshold";
                    }
                    then {
                        status {
                            color red;
                            message "System buffer utilization for $description has crossed static threshold value ($threshold), Value=($system-buffer-memory)";
                        }
                    }
                }
	       /*
                * Sets color to yellow and sends out an anomaly notification when
                * memory buffer utilization count increases more than dynamic threshold value
                * 
                */
                term is-buffer-utilization-above-dt {
                    when {
                        equal-to "$dt-buffer-memory-utilization" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "System buffer utilization for $description has crossed dynamic threshold value ($threshold), Value=($system-buffer-memory)";
                        }
                    }
                }
	       /*
                * Defaults color to green.
                */
                term is-system-buffer-memory-utilization-normal {
                    then {
                        status {
                            color green;
                            message "System buffer utilization for $description is normal, Value=($system-buffer-memory)";
                        }                           
                    }
                }
            }
			/*
            * Anomaly detection logic for CPU utilization.
            */
            trigger system-cpu {
	       /*
                * Sets color to red and sends out an anomaly notification when
                * CPU utilization count increases more than threshold static ($threshold) value
                * 
                */ 
                frequency 300s;
                term is-system-cpu-utilization-abnormal {
                    when {
                        greater-than "$system-cpu" "$threshold";
                    }
                    then {
                        status {
                            color red;
                            message "CPU utilization for $description has crossed static threshold value ($threshold), Value=($system-cpu)";
                        }
                    }
                }
				/*
                * Sets color to yellow and sends out an anomaly notification when
                * CPU utilization count increases more than dynamic threshold value
                * 
                */
                term is-system-cpu-utilization-above-dt {
                    when {
                        equal-to "$dt-cpu-utilization" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "CPU utilization for $description has crossed dynamic threshold value, Value=($system-cpu)";
                        }
                    }
                }
				/*
                * Defaults color to green.
                */
                term is-system-cpu-utilization-normal {
                    then {                          
                        status {
                            color green;
                            message "CPU utilization for $description is normal, Value=($system-cpu)";
                        }
                    }
                }
            }
            variable component-name {
                value "Routing Engine .*";
				description "Collectes all routing engines CPU and memory utilization";
                type string;
            }
            variable static-threshold {
                value 80;
                description "static threshold value for CPU and memory utilization";
                type int;
            }
			rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform ALL;
                                }
                            }
                        }                       
                    }
                }
            }
        }
	}	
 }    
