/*
 * Detects interface in errors and out errors and notifies when anomalies are found.
 * Two inputs control detection
 *
 * 1) error-threshold, is the threshold that causes the rule to
 * report an anomaly. By default it is 1. This rule will set the
 * dashboard color to red when interface input error count increases
 * atleast by error-threshold value, if the dt in errors is equal to 1
 * then the dashboard color is set to yellow. Otherwise it is set to green.
 * It will also set the dashboard color to red when interface output error
 * count increases atleast by error-threshold value, if the dt out errors is
 * equal to 1 then the dashboard color is set to yellow. Otherwise it is
 * set to green.
 *
 * 2) interface-name, is a regular expression that matches the
 * interfaces that you would like to monitor. By default it’s ‘.*’,
 * which matches all interfaces. Use something like ‘ge.*’ to
 * match only gigabit ethernet interfaces.
 */
healthbot {
    topic interface {
        description "Monitors and notify interface statistics i.e. link state, flaps, neighbor state, input & output traffic and errors";
        synopsis "Interface statistics analyzer";
        rule check-interface-errors-netconf {
            keys name;
            synopsis "Interface error analyzer";
            description "Collects the interface errors (errors (all), drops,discards, timeouts and runts) periodically and notifies in case of anomalies";
            /*
             * Monitors the interface error count. Notifies via the
             * dashboard colors when the error count increases at least
             * by threshold {{error-threshold}} it is set to red, if the dt in/out
             * error count is equal to 1 then it is set to yellow. Otherwise
             * it is set to green.
             *
             * Use name as key for rule
             *
             * Sensor configuration to get data from network devices.
             */
            sensor interface {
                synopsis "Interfaces netconf based iAgent sensor definition";
                description "iAgent sensor defined in yml file using netconf rpc/cli command and defined fields using pyez tables & views to collect data from network device";
                iAgent {
                    file IntStatsTable.yml;
                    table IntStatsTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field admin-status {
                sensor interface {
                    path admin-status;
                }
                type string;
                description "Admin status";
            }
            field bpdu-error {
                sensor interface {
                    path bpdu-error;
                }
                type string;
            }
            /*
             * Field defined with variable and constant value
             */
            field error-threshold {
                constant {
                    value "{{error-threshold}}";
                }
                type integer;
                description "Errors count increase threshold";
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field input-errors {
                sensor interface {
                    path input-errors;
                }
                type integer;
                description "Interfaces input error";
            }
            field l2pt-error {
                sensor interface {
                    path l2pt-error;
                }
                type string;
                description "Interfaces l2pt error";
            }
            field ld-pdu-error {
                sensor interface {
                    path ld-pdu-error;
                }
                type string;
                description "Interfaces ld pdu error";
            }
            field name {
                sensor interface {
                    where "admin-status =~ /up/";
                    where "name =~ /{{interface-name}}/";
                    path name;
                }
                type string;
                description "Interfaces to be monitored";
            }
            field output-errors {
                sensor interface {
                    path output-errors;
                }
                type integer;
                description "Interfaces output error";
            }
            /*
             * Anomaly detection logic.
             */
            trigger L2-pdu-errors {
                synopsis "L2 pdu errors";
                description "Sets health based on the change in L2-pdu-errors count";
                frequency 1.5offset;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the Ld-pdu error ($ld-pdu-error) doesn’t match with none.
                 */
                term is-l2-pdu-error {
                    when {
                        does-not-match-with "$ld-pdu-error" none {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Ld-pdu error($ld-pdu-error) count is increasing on $name";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-l2-pdu-error {
                    then {
                        status {
                            color green;
                            message "Ld-pdu error($ld-pdu-error) count is normal on $name";
                        }
                    }
                }
            }
            trigger L2pt-errors {
                synopsis "L2 pt errors";
                description "Sets health based on the change in L2pt-errors count";
                frequency 1.5offset;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the L2-pt error ($l2pt-error) doesn’t match with none.
                 */
                term is-L2pt-errors {
                    when {
                        does-not-match-with "$l2pt-error" none {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "L2pt error($l2pt-error) count is increasing on $name";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-L2pt-errors {
                    then {
                        status {
                            color green;
                            message "L2pt error($l2pt-error) count is normal on $name";
                        }
                    }
                }
            }
            trigger bpdu-errors {
                synopsis "bpdu errors";
                description "Sets health based on the change in bpdu-errors count";
                frequency 1offset;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the bpdu error ($bpdu-error) doesn’t match with none.
                 */
                term is-bpdu-errors {
                    when {
                        does-not-match-with "$bpdu-error" none {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Detected BPDU errors($bpdu-error) on $name";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-bpdu-errors {
                    then {
                        status {
                            color green;
                            message "BPDU error($bpdu-error) count is normal on $name";
                        }
                    }
                }
            }
            trigger interface-in-errors {
                synopsis "Interface input-errors";
                description "Sets health based on the change in input-errors count";
                frequency 1.5offset;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the interface input error count ($input-error) increases at least
                 * by the threshold ($error-threshold).
                 */
                term is-in-errors {
                    when {
                        increasing-at-least-by-value "$input-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$name input error count($input-errors) is increasing";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-in-errors {
                    then {
                        status {
                            color green;
                            message "$name input error count($input-errors) is normal";
                        }
                    }
                }
            }
            trigger interface-out-errors {
                synopsis "Interface output-errors";
                description "Sets health based on the change in output-errors count";
                frequency 1.5offset;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the interface output error count ($output-error) increases at
                 * least by the threshold ($error-threshold).
                 */
                term is-out-errors {
                    when {
                        increasing-at-least-by-value "$output-errors" {
                            value "$error-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$name output error count($output-errors) is increasing";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-out-errors {
                    then {
                        status {
                            color green;
                            message "$name output error count($output-errors) is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable error-threshold {
                value 1;
                description "Interface traffic low threshold value in bps.";
                type int;
            }
            variable interface-name {
                value "ge-.*|xe-.*|mge-.*|et-.*";
                description "Enter interface name in regex i.e. ge-.*";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category comprehensive;
                is-scaling-rule {
                    description "Fields:name ; Directly impacted by number of interfaces in each network device";
                }				
                supported-healthbot-version 3.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products EX {
                                platforms All {
                                    releases 17.3R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                        }
                        operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }						
                    }
                }
                helper-files other {
                    list-of-files IntStatsTable.yml;
                }				
            }
        }
    }
}