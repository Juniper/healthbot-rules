/*
 * Detects routing-engine CPU temperature threshold breaches and notifies when
 * anomalies are found.
 * Three inputs control detection
 *
 *   1) "re-slot-no" is a regular expression that matches the routing engine
 *      that you would like to monitor.  By default it's '0-1', which matches
 *      both the routing engines. Use something like '0' to match only
 *      routing engine 0.
 *
 *   2) "re-cpu-temperature-low-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 45 degree Cecilius of 
 *      RE CPU temperature. This rule will set a dashboard color to green
 *      when temperature is below low threshold.
 * 
 *   3) "re-cpu-temperature-high-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 55 degree Cecilius of RE 
 *      CPU temperature. This rule will set a dashboard color to yellow when
 *      temperature is below high threshold. Otherwise color is set to
 *      red and notify anomaly.
 */
healthbot {
    topic chassis.temperatures {
        description "Monitors the chassis temperatures of whole chassis, REs', FPCs' & RE CPUs and notifies anomalies";
        synopsis "Chassis environment analyzer";
        rule check-re-cpu-temperature {
            synopsis "RE CPU temperature check";
            description "Collects RE CPU temperature periodically and notifies anomaly when temperature exceed threshold";
            /*
             * Monitors RE CPU temperature. Notifies via the dashboard
             * colors when the when temperature is below low threshold
             * {{re-cpu-temperature-low-threshold}} to green. The color is
             * set to yellow if we see temperature is below high threshold
             * {{re-cpu-temperature-high-threshold}}. Otherwise the color is
             * set to red and notify anomaly.
             * 
             * Use routing-engine slot number as key for rule.
             */
             keys routing-engine;
            /*
             * Sensor configuration to get data from network devices
             */
            sensor components {
                synopsis "Chassis components sensor definition";
                description "/components open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /components/;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field routing-engine-cpu-temperature {
                sensor components {
                    where "/components/component/properties/property/@name == 'temperature-cpu'";
                    path /components/component/properties/property/state/value;
                    zero-suppression;
                }
                type integer;
                description "RE CPU temperature";
            }
            field routing-engine {
                sensor components {
                    where "/components/component/@name =~ /^Routing Engine[{{re-slot-no}}]*$/";
                    path "/components/component/@name";
                }
                type string;
                description "RE name to monitor";
            }
            /*
             * Fields defined with variables and constant values
             */
            field high-threshold {
                constant {
                    value "{{re-cpu-temperature-high-threshold}}";
                }
                type integer;
                description "RE CPU temperature high threshold";
            }
            field low-threshold {
                constant {
                    value "{{re-cpu-temperature-low-threshold}}";
                }
                type integer;
                description "RE CPU temperature low threshold";
            }
            /*
             * Anomaly detection logic.
             */
            trigger re-cpu-temperature {
                synopsis "RE CPU temperature KPI";
                description "Sets health based increase in RE CPU temperature";
                frequency 60s;
                /*
                 * Sets color to green when RE CPU temperature
                 * re-cpu-temperature is below low threshold ($low-threshold).
                 */ 
                term is-temperature-normal {
                    when {
                        less-than-or-equal-to "$routing-engine-cpu-temperature" "$low-threshold";
                    }
                    then {
                        status {
                            color green;
                            message "$routing-engine CPU temperature($routing-engine-cpu-temperature degree C) is normal";
                        }
                    }
                }
                /*
                 * Sets color to yellow and notify anomaly when RE CPU
                 * temperature ($routing-engine-cpu-temperature) is below high threshold
                 * ($high-threshold).
                 */  
                term is-temperature-median {
                    when {
                        less-than "$routing-engine-cpu-temperature" "$high-threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "$routing-engine CPU temperature($routing-engine-cpu-temperature degree C) exceed low threshold";
                        }
                    }
                }
                /*
                 * Defaults color to red and notify anomaly.
                 */ 
                term temperature-abnormal {
                    then {
                        status {
                            color red;
                            message "$routing-engine CPU temperature($routing-engine-cpu-temperature degree C) exceed high threshold";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable re-cpu-temperature-high-threshold {
                value 55;
                description "RE CPU temperature high threshold: Utilization increase between metrics, before we report anomaly";
                type int;
            }
            variable re-cpu-temperature-low-threshold {
                value 45;
                description "RE CPU temperature low threshold: Utilization increase between metrics, before we report anomaly";
                type int;
            }
            variable re-slot-no {
                value 0-1;
                description "Routing engine slot numbers to monitor, regular expression, e.g. '0'";
                type string;
            }
            rule-properties {
                version 2;
                    contributor juniper;
                    supported-healthbot-version 1.0.1;
                    catalogue {
                        tier 1;
                }
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX240 MX480 MX960 MX2010 MX2020 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX5000 PTX1000 PTX10000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
