/*
 *  This rule checks system power usage and notify in case any of the health monitored fields crosses threshold
 */
iceberg {
    topic chassis.power {
        description "This topic monitors PEM, zones and overall system power usage";
        synopsis "Chassis power management kpis";
        rule check-system-power-usage {
            synopsis "Chassis system power manager";
            description "This rule collects chassis system power usage statistics periodically and notifies in case of anomalies";
            /*
             * This function required to get remaining power as router provides only used
             */
            function used-percentage {
                description "calculates % of power usage out of total available";
                path used-percentage.py;
                method used_percentage;
                argument total {
                    mandatory;
                }
                argument used {
                    mandatory;
                }
            }
            /*
             * sensor configuration to get data from network devices
             */
            sensor components {
                synopsis "chassis components sensor definition";
                description "/components open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /components/;
                    frequency 10s;
                }
            }
            /*
             * Fields defined using sensor path
             */
            field power-system-capacity {
                sensor components {
                    where "/components/component/properties/property/@name == 'power-system-capacity'";
                    path /components/component/properties/property/state/value;
                }
                type integer;
                description "stores power system capacity";
            }
            field power-system-maximum {
                sensor components {
                    where "/components/component/properties/property/@name == 'power-system-maximum'";
                    path /components/component/properties/property/state/value;
                }
                type integer;
                description "stores max power available for system";
            }
            field power-system-remaining {
                sensor components {
                    where "/components/component/properties/property/@name == 'power-system-remaining'";
                    path /components/component/properties/property/state/value;
                }
                type integer;
                description "stores remaining power for system";
            }
            /*
             * Fields defined using formulae by user-defined function
             */
            field system-power-remaining-in-percentage {
                formula {
                    user-defined-function {
                        function-name used-percentage;
                        argument total "$power-system-maximum";
                        argument used "$power-system-remaining";
                    }
                }
                type integer;
                description "stores remaining power for system using udf";
            }
            /*
             * Fields defined with variables and constant values
             */
            field system-power-usage-threshold {
                constant {
                    value "{{system_power_usage_threshold}}";
                }
                type integer;
                description "Set pem power usage threshold";
            }
            /*
             * When system remaining power goes below threshold then sends an anomaly notification and sets color to red otherwise
             * sets color to green
             */
            trigger system-power-usage {
                synopsis "System power usage kpi";
                description "Sets health based on system power usage threshold.";
                term is-power-usage-abnormal {
                    when {
                        less-than "$system-power-remaining-in-percentage" "$system-power-usage-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "System power usage abnormal! only $system-power-remaining-in-percentage % of power remaining";
                        }
                    }
                }
                term power-usage-normal {
                    then {
                        status {
                            color green;
                            message "System power usage is normal $system-power-remaining-in-percentage % of power remaining";
                        }
                    }
                }
            }
            /*
             * Variables with default values which can be altered while deploying playbook instance
             */
            variable system_power_usage_threshold {
                value 20;
                description "Enter system remaining power threshold value";
                type int;
            }
        }
    }
}
