/*
 * Detects system power usage threshold breaches and notifies when  anomalies
 * are found.
 *
 * One input control detection
 *
 *   1) "system-power-remaining-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 20% of system remaining
 *      power. This rule will set a dashboard color to red when system 
 *      remaining power is below threshold 'system-power-remaining-threshold'.
 *      Otherwise color is set to green.
 */
healthbot {
    topic chassis.power {
        description "Monitors the chassis power usage of whole system, zone & PMs and notifies anomalies";
        synopsis "Chassis power manager";
        rule check-system-power-usage {
            synopsis "Chassis system power check";
            description "Collects PEM power usage periodically and notifies anomaly when power usage exceed threshold";
            /*
             * Monitors system power usage. Notifies via the dashboard colors
             * when the system remaining power is below threshold 
             * {{system-power-remaining-threshold}} to red. Otherwise the color
             * is set to green.
             *
             * Router provides power values in number hence function derives
             * used percent.
             */
            function used-percentage {
                description "Calculates % of power usage out of total available";
                path used-percentage.py;
                method used_percentage;
                argument total {
                    mandatory;
                }
                argument used {
                    mandatory;
                }
            }
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor components {
                synopsis "Chassis components sensor definition";
                description "/components open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /components/;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field power-system-maximum {
                sensor components {
                    where "/components/component/properties/property/@name == 'power-system-maximum'";
                    path /components/component/properties/property/state/value;
                    zero-suppression;
                }
                type integer;
                description "System max power available";
            }
            field power-system-remaining {
                sensor components {
                    where "/components/component/properties/property/@name == 'power-system-remaining'";
                    path /components/component/properties/property/state/value;
                    zero-suppression; 
                }
                type integer;
                description "System remaining power";
            }
            /*
             * Fields defined using formula by user-defined function
             */
            field system-power-remaining-in-percentage {
                formula {
                    user-defined-function {
                        function-name used-percentage;
                        argument total "$power-system-maximum";
                        argument used "$power-system-remaining";
                    }
                }
                type integer;
                description "Stores remaining power for system using UDF";
            }
            /*
             * Fields defined with variables and constant values
             */
            field system-power-usage-threshold {
                constant {
                    value "{{system-power-remaining-threshold}}";
                }
                type integer;
                description "System power usage threshold";
            }
            /*
             * Anomaly logic
             */
            trigger system-power-usage {
                synopsis "System power usage KPI";
                description "Sets health based on increasing system power usage";
                frequency 1o;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the system power ($system-power-remaining-in-percentage)
                 * available is below threshold ($system-power-usage-threshold).
                 */
                term is-power-usage-abnormal {
                    when {
                        less-than "$system-power-remaining-in-percentage" "$system-power-usage-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "System power usage abnormal! only $system-power-remaining-in-percentage % of power remaining";
                        }
                    }
                }
                term power-usage-normal {
                    then {
                        status {
                            color green;
                            message "System power usage is normal. $system-power-remaining-in-percentage% of power remaining";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable system-power-remaining-threshold {
                value 20;
                description "System remaining power threshold percentage";
                type int;
            }
            rule-properties {
                version 2;
                    contributor juniper;
                    supported-healthbot-version 1.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX240 MX480 MX960 MX2010 MX2020 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX5000 PTX1000 PTX10000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
