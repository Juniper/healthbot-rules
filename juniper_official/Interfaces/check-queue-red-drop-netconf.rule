/*
* Monitors the interface queue drop for RED packets and notifies when
* anomalies are found.
* Three input control detection
*
* 1) interface-name, is a regular expression that matches the
* interfaces that you would like to monitor. By default it '.*',
* which matches all interfaces. Use something like 'ge.*' to
* match only gigabit ethernet interfaces.
*
* 2) threshold, is the threshold that causes the rule to report
* an anomaly. By default it is 1. This rule will set a
* dashboard color to red when RED drop packets increase by min value of 
* 1 in 2mins interval . Otherwise it is set to green.
*
* 3) queue, is the queue number of the interface that is being monitored.
*/
healthbot {
    topic interface.statistics {
        rule check-queue-red-drop-netconf {
            keys [ interface-name queue_number ];
            synopsis "Queue  RED Drop KPI";
            description "To monitor the interface queue RED dropped packets";
            /*
            * Monitors interface RED dropped packets for all queues.Notifies via the
            * dashboard colors when red dropped packets exceeds the high
            * threshold {{$threshold}} it sets the color to red.
            * Otherwise the color is set to green.
            *
            * Use interface-name and queue as keys for rule
            */
            /*
            * Sensor configuration to get data from network devices.
            */
            sensor queuedepth {
                iAgent {
                    file queue-red-drop.yml;
                    table QueueStatsRedDropped;
                    frequency 60s;
                }
            }
            /*
            * Field defined using sensor path. Map the longer sensor names
            * to the shorter field names used in the rules.
            */			
            field high-threshold {
                constant {
                    value "{{high-threshold-var}}";
                }
                type float;
            }
            field interface-name {
                sensor queuedepth {
                    where "name =~ /{{if-name}}/";
                    path name;
                }
                type string;
                description "Name of the interface";
            }
            field queue-counters-red-packets {
                sensor queuedepth {
                    path queue-counters-red-packets;
                }
                type integer;
                description "Count of RED packets dropped";
            }
            field queue-counters-red-packets-rate {
                sensor queuedepth {
                    path queue-counters-red-packets-rate;
                }
                type integer;
                description "Queue RED dropped rate";
            }
            field queue_number {
                sensor queuedepth {
                    where "queue-number =~ /{{queue-no}}/";
                    path queue-number;
                }
                type string;
                description "Queue Number";
            }
            /*
            * Anomaly detection logic.
            */			
            trigger queue_red_drop_packets {
                synopsis "queue depth";
                description "Sets health based on the queue depth";
                frequency 1.5offset;
                term exceeds_threshold {
                    when {
                        increasing-at-least-by-value "$queue-counters-red-packets" {
                            value "$high-threshold";
                            time-range 2offset;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Count of Queue red dropped packets ($queue-counters-red-packets) has increased by $high-threshold for interface $interface-name queue $queue_number";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "Count of Queue red drop packets ($queue-counters-red-packets) is normal for interface $interface-name queue $queue_number";
                        }
                    }
                }
            }
            /*
            * Variables with default values. Default values can be changed
            * while deploying playbook instance.
            */			
            variable high-threshold-var {
                value 1;
                description "Queue red drop count high threshold value";
                type int;
            }
            variable if-name {
                value .*;
                description "Input interface-name to monitor";
                type string;
            }
            variable queue-no {
                value .*;
                description "Queue number or name to monitor, regular expression, eg '1|2'";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category comprehensive;
                is-scaling-rule {
                    description "Fields:[ interface-name queue_number ]; Directly impacted by number of interfaces and queues in each network device";
                }				
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms all {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                                platforms MX240 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX480 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX960 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2010 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2020 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                platforms PTX5000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX1000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX10000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                        }
                    }
                    other-vendor cisco-IOS-XR {
                        vendor-name cisco;
                        operating-system IOS-XR;
                    }
                }
            }
        }
    }
}	