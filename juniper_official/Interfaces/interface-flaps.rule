/*
 * Detects interface flaps and notifies anomalies.
 */
iceberg {
    topic interface.statistics {
        description "Monitors interface statistics i.e. link state, flaps, neighbor state, input & output traffic and errors and notify anomalies";
        synopsis "Interface statistics analyzer";
        rule check-interface-flaps {
            synopsis "Link flaps analyzer";
            description "Collects link flap count periodically and notifies in case flap count increases";
            /*
             * Use interface name as key for rule
             */
            keys interface-name;
            /*
             * Sensor configuration to get data from network devices
             */
            sensor interfaces {
                synopsis "Interface open-config sensor definition";
                description "Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/;
                    frequency 30s;
                }
            }
            /*
             * Fields defined using sensor path
             */
            field admin-state {
                sensor interfaces {
                    path /interfaces/interface/state/admin-status;
                }
                type string;
                description "Interface admin status";
            }
            field flaps {
                sensor interfaces {
                    path /interfaces/interface/state/counters/carrier-transitions;
                }
                type integer;
                description "Number of interface flaps";
            }
            field interface-name {
                sensor interfaces {
                    where "/interfaces/interface/@name =~ /{{interface_name}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            /*
             * Fields defined with variables and constant values
             */
            field flaps-threshold {
                constant {
                    value "{{flaps_threshold}}";
                }
                type integer;
                description "Flap count increase threshold";
            }
            /*
             * Anomaly detection logic.
             */
            trigger link-flaps {
                synopsis "Link flaps KPI";
                description "Sets health based on link flap count.";
                /*
                 * Skips evaluation for admin down interfaces
                 */
                term is-link-admin-down {
                    when {
                        matches-with "$admin-state" DOWN;
                    }
                }
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the interface carrier-transition($flaps) count increases in
                 * absolute for period of 60 seconds.
                 */
                term is-link-flapping-consistently {
                    when {
                        min-rate-of-increase "$flaps" {
                            rate "$flaps-threshold";
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name flaps($flaps) continuously";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the interface flap count increases in absolute.
                 */
                term is-link-fluctuating {
                    when {
                        min-rate-of-increase "$flaps" {
                            rate "$flaps-threshold";
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name flaps($flaps) are intermittent";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term is-link-stable {
                    then {
                        status {
                            color green;
                            message "$interface-name is stable";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be altered
             * while deploying playbook instance
             */
            variable flaps_threshold {
                value 1;
                description "Enter interface flaps threshold";
                type int;
            }
            variable interface_name {
                value ".*";
                description "Enter interface names to be monitored in regular expression";
                type string;
            }
        }
    }
}
