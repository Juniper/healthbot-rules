/*
 * Detects interface in errors and notifies when anomalies are found.
 * Two inputs control detection
 * 
 *   1) interface-name-variable, is a regular expression that matches the
 *      interfaces that you would like to monitor.  By default it's
 *      '.*', which matches all interfaces. Use something like 'ge.*' to
 *      match only gigabit ethernet interfaces.
 * 
 *   2) out-errors-threshold-variable, is the threshold that causes the rule to report
 *      an anomaly.  By default it's 1. This rule will set a dashboard
 *      color to red when *all* the error increases are greater than
 *      'out-errors-threshold-variable' for 180s. If it sees any errors increase for a
 *      period of less than 180s, it'll turn the color to yellow,
 *      otherwise color is set to green.
 */
healthbot {
    topic interface.statistics {
        description "Monitors and notify interface statistics i.e. link state, flaps, neighbor state, input & output traffic and errors";
        synopsis "Interface statistics analyzer";
        rule check-out-errors {
            synopsis "Interface out-errors analyzer";
            description "This rule collects interface output error (errors(all), drops, discards, timeouts and runts) periodically and notifies in case of anomalies";
            /*
             * Monitors the interface out-errors count on an interface.
             * Notifies via the dashboard colors when the flaps increase by
             * {{out-errors-threshold-variable}} for every collected metric during a 180s
             * time range (red).  The color is set to yellow if we see any
             * out errors increase by {{out-errors-threshold-variable}}. Otherwise the
             * color is set to green.
             * 
             * Use interface name as key for rule.
             */
            keys interface-name;
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces {
                synopsis "interface open-config sensor definition";
                description "/interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/;
                    frequency 30s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field interface-name {
                sensor interfaces {
                    where "/interfaces/interface/@name =~ /{{interface-name-variable}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field out-errors-count {
                sensor interfaces {
                    path "/interfaces/interface/state/counters/{{out-errors-stats-name-variable}}";
                    zero-suppression;
                }
                type integer;
                description "This field shows interface field's value";
            }
            /*
             * Fields defined with variables and constant values
             */
            field out-errors-threshold {
                constant {
                    value "{{out-errors-threshold-variable}}";
                }
                type integer;
                description "Out errors count increase threshold";
            }
            /*
             * Anomaly detection logic.
             */
            trigger out-errors {
                synopsis "Interface out-errors kpi";
                description "Sets health based on the change in out-errors count";
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the interface out errors ($out-errors-count) count increases
                 * for all points in 180 seconds period.
                 */
		frequency 60s;
                term is-interface-out-errors-abnormal {
                    when {
                        increasing-at-least-by-value "$out-errors-count" {
                            value "$out-errors-threshold";
                            time-range 180s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Out errors are increasing continuously on $interface-name, Error count is:$out-errors-count";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the increase is at least once.
                 */
                term is-interface-out-errors-median {
                    when {
                        increasing-at-least-by-value "$out-errors-count" {
                            value "$out-errors-threshold";
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name out errors ($out-errors-count) are intermittent";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-interface-out-errors {
                    then {
                        status {
                            color green;
                            message "$interface-name is stable";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable interface-name-variable {
                value ".*";
                description "Interface names to monitor, regular expression, e.g. 'ge-.*'";
                type string;
            }
            variable out-errors-threshold-variable {
                value 1;
                description "Interface out errors threshold: Number of errors increase between metrics, before we report anomaly";
                type int;
            }
            variable out-errors-stats-name-variable {
                value out-errors;
                description "Error stats counter name out-errors which is cumulative of out-resource-errors, out-drops and out-discards";
                type string;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                catalogue {
                    tier 1;
                }
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX240 MX480 MX960 MX2010 MX2020 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX5000 PTX1000 PTX10000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                        }
                    }
                    other-vendor cisco-IOS-XR {
                        vendor-name cisco;
                        operating-system IOS-XR;
                    }
                }
            }
        }
    }
}
