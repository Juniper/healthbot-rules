/*
 * Monitors interface link state and notifies when anomalies are found.
 * One input control detection
 * 
 *   1) interface_name, is a regular expression that matches the
 *      interfaces that you would like to monitor.  By default it's
 *      '.*', which matches all interfaces. Use something like 'ge.*' to
 *      match only gigabit ethernet interfaces.
 *
 */
iceberg {
    topic interface.statistics {
        description "Monitors and notify interface statistics i.e. link state, flaps, neighbor state, input & output traffic and errors";
        synopsis "Interface statistics analyzer";
        rule check-interface-status {
            synopsis "Tnterface state analyzer";
            description "Collects interface link oper state periodically and notifies when neighbor sate is down";
            /*
             * Monitors the interface link oper state. Notifies via the
             * dashboard colors when the *all* link oper state {{link-state}}
             * is down (red). Otherwise the color is set to green.
             * 
             * Use interface name as key for rule.
             */
            keys interface-name;
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces {
                synopsis "Interface open-config sensor definition";
                description "Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/;
                    frequency 20s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field admin-state {
                sensor interfaces {
                    path /interfaces/interface/state/admin-status;
                }
                type string;
                description "Interface admin status";
            }
            field interface-name {
                sensor interfaces {
                    where "/interfaces/interface/@name =~ /{{interface_name}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field link-state {
                sensor interfaces {
                    path /interfaces/interface/state/oper-status;
                }
                type string;
                description "Interfaces link operator status";
            }
            /*
             * Anomaly detection logic.
             */
            trigger link-state {
                synopsis "link state kpi";
                description "Sets health based on link state";
                /*
                 * Skips evaluation for admin down state interfaces
                 */
                frequency 20s;
                term is-link-admin-down {
                    when {
                        matches-with "$admin-state" DOWN;
                    }
                }
                /*
                 * Sets color to red and sends out anomaly notification when 
                 * the interface oper state ($link-state) is down.
                 */                    
                term is-link-down {
                    when {
                        matches-with "$admin-state" UP;
                        matches-with "$link-state" DOWN;
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name link operator status is DOWN";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */                
                term link-up {
                    then {
                        status {
                            color green;
                            message "$interface-name link operator status is UP";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable interface_name {
                value ".*";
                description "Interface names to monitor, regular expression, e.g. 'ge-.*'";
                type string;
            }
        }
    }
}
