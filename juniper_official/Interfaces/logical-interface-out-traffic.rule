/*
 * Monitors sub interface output traffic and notifies when anomalies are found.
 * Five inputs control detection
 *
 *   1) ifd-name, is a regular expression that matches the interfaces
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all interfaces. Use something like 'ge.*' to match only gigabit
 *      ethernet interfaces. 
 *
 *   2) ifl-no, is a regular expression that matches the IFL index number that
 *      you would like to monitor.  By default it's '.*', which matches all
 *      interfaces. Use something like '0-10*' to match only 0 to 10 IFLs.
 *
 *   3) stats-name, is a regular expression that matches the sub interface KPI
 *      statistics counter name that you would like to monitor. By default it's
 *      out-octets, Use proper counter name something like 'out-pkts' or
 *      "out-unicast-pkts" or "out-multicast-pkts" etc.
 *
 *   4) out-octets-high-threshold, is the threshold that causes the rule to
 *      report an anomaly.  By default it's 80000000 octets (80 MB). This rule
 *      will set a dashboard color to red when *all* the output traffic is above
 *      threshold for 60 seconds period. 
 *
 *   5) out-octets-low-threshold, is the threshold that causes the rule to
 *      report an anomaly.  By default it's 50000000 (50 MB)octets . This rule
 *      will set a dashboard color to yellow when *all* the output traffic is
 *      above threshold for 60 seconds period, otherwise color is set to green.
 */
healthbot {
    topic interface.statistics {
        description "Monitors and notify interface statistics i.e. link state, flaps, neighbor state, input & output traffic and errors";
        synopsis "Sub Interface statistics analyzer";
        rule check-ifl-out-traffic {
            synopsis "Sub Interface output traffic analyzer.";
            description "Collects output traffic (out-octets) periodically and notifies in case of traffic is above threshold";
            /*
             * Monitors the interface output traffic. Notifies via the dashboard
             * colors when the traffic is above {{out-octets-high-threshold}}
             * for every collected metric during a 60s time range (red).
             * The color is set to yellow when the traffic is above
             * {{out-octets-low-threshold}} for every collected metric during
             * a 60s. Otherwise the color is set to green.
             *
             * Use interface name as key for rule.
             */
            keys [interface-name sub-interface-index];
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces {
                synopsis "Sub Interface open-config sensor definition";
                description "Sub Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/;
                    frequency 30s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field out-octets-stats-value {
                sensor interfaces {
                    path "/interfaces/interface/subinterfaces/subinterface/state/counters/{{stats-name}}";
                    zero-suppression;
                }
                type integer;
                description "Sub Interface statistics counter (out-octets) value.";
            }
            field interface-name {
                sensor interfaces {
                    where "/interfaces/interface/@name =~ /{{ifd-name}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field sub-interface-index {
                sensor interfaces {
                    where "/interfaces/interface/subinterfaces/subinterface/@index =~ /{{ifl-no}}/";
                    path "/interfaces/interface/subinterfaces/subinterface/@index";
                }
                type string;
                description "Interfaces to be monitored";
            }
            /*
             * Fields defined with variables and constant values
             */
            field high-threshold {
                constant {
                    value "{{out-octets-high-threshold}}";
                }
                type integer;
                description "Output traffic high threshold.";
            }
            field low-threshold {
                constant {
                    value "{{out-octets-low-threshold}}";
                }
                type integer;
                description "Output traffic low threshold.";
            }
            /*
             * Anomaly detection logic.
             */
            trigger out-traffic {
                synopsis "Sub Interface output traffic kpi";
                description "Sets health based on output traffic exceed threshold.";
                /*
                 * Sets color to red and sends out an anomaly notification
                 * when the interface output traffic ($out-octets-stats-value) is
                 * above high threshold (out-octets-high-threshold) for all
                 * points in a 60 seconds period.
                 */
                frequency 60s;
                term is-interface-out-traffic-abnormal {
                    when {
                        min-rate-of-increase "$out-octets-stats-value" {
                            rate "$high-threshold";
                            time-range 5m;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index output traffic is above high threshold($high-threshold octets)";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the interface output traffic($out-octets-stats-value) is
                 * above low threshold (out-octets-low-threshold) for all points
                 * in a 60 seconds period.
                 */
                term is-interface-out-traffic-median {
                    when {
                        min-rate-of-increase "$out-octets-stats-value" {
                            rate "$low-threshold";
                            time-range 5m;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name.$sub-interface-index output traffic is in medium range(>=$low-threshold,<=$high-threshold  octets)";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term interface-out-traffic-normal {
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index output traffic:$out-octets-stats-value is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable out-octets-high-threshold {
                value 80000000;
                description "Sub Interface output traffic high threshold value in octets. Traffic rate of increase between metrics, before we report anomaly. Default value is 80000000 octets (80 MB)";
                type int;
            }
            variable out-octets-low-threshold {
                value 50000000;
                description "Sub Interface output traffic low threshold value in octets. Traffic rate of increase between metrics, before we report anomaly. Default value is 50000000 octets (50 MB)";
                type int;
            }
            variable stats-name {
                value out-octets;
                description "Sub Interface output traffic counter name";
                type string;
            }
            variable ifd-name {
                value ".*";
                description "Interfaces to be monitored, regular expression, eg 'ge-.*'";
                type string;
            }
            variable ifl-no {
                value ".*";
                description "Sub interfaces index to be monitored, regular expression, eg '0-10'";
                type string;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                catalogue {
                    tier 1;
                }
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX240 MX480 MX960 MX2010 MX2020 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX5000 PTX1000 PTX10000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                        }
                    }
                    other-vendor cisco-IOS-XR {
                        vendor-name cisco;
                        operating-system IOS-XR;
                    }
                }
            }
        }
    }
}
