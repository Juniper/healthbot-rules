/*
 * Detects linecards CPU utilization threshold breaches and notifies when 
 * anomalies are found.
 * 
 *   1) "buffer-usage-threshold" is the threshold that causes the rule to
 *       report an anomaly. By default it's 80% of CPU utilization. This
 *       rule will set a dashboard color to red when FPC CPU utilization 
 *       exceed high threshold 
 *   2) "cpu-usage-threshold" is the threshold that causes the rule to report
 *      an anomaly. By default it's 80% of CPU utilization. This rule will set
 *      a dashboard color to red when FPC CPU utilization exceed high threshold
 *   3) "heap-usage-threshold" is the threshold that causes the rule to report
 *      an anomaly. By default it's 80% of CPU utilization. This rule will set
 *      a dashboard color to red when FPC CPU utilization exceed high threshold
 */
healthbot {
    topic linecard.fpc {
        description "Monitors linecards memory & cpu and notifies anomalies";
        synopsis "Linecard health analyzer";
        rule check-fpc-cpu-memory-usage-netconf {
            description "Collects system FPC CPU statistics periodically and notifies anomalies when CPU utilization exceed threshold";
            synopsis "FPC CPU analyzer";
            /*
             * Monitors all the linecards CPU utilization. Notifies via the
             * dashboard colors. When the linecards CPU utilization exceed by
             * {{cpu-usage-threshold}} for every streaming interval. The color
             * is set to yellow if cpu-usage goes over dt-cpu-usage. 
             * Otherwise the color is set to green.
             * 
             * Monitors all the linecards buffer-memory-usage and Notifies via
             * the dashboard colors. When the linecards buffer-memory
             * utilization exceed by {{buffer-usage-threshold}} for every
             * streaming interval. The color is set to yellow 
             * if buffer-memory-usage goes over dt-buffer-memory-usage. 
             * Otherwise the color is set to green. 
             * Monitors all the linecards heap-memory-usage and Notifies via
             * the dashboard colors. When the linecards heap-memory
             * utilization exceed by {{heap-usage-threshold}} for every
             * streaming interval. The color is set to yellow if 
             * heap-memory-usage goes over dt-heap-memory-usage. 
             * Otherwise the color is set to green.
             * Use FPC slot name as key for this rule.
             */
            keys slot;
            sensor sensor-fpc-cpu-memory {
	            synopsis "FPC CPU Memory sensor initialization";
                description "FPC iAgent sensor to collect data from network device";
                iAgent {
                    file srx-fpc-state.yml;
                    table FPCStateTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined with variables, dynamic thresholds and constant values
             */
            field buffer-memory-usage {
                sensor sensor-fpc-cpu-memory {
                    path memory-buffer-util;
                }
                type integer;
                description "This field is for linecard buffer memory usage value.";
            }
            field buffer-usage-threshold {
                constant {
                    value "{{fpc-buffer-usage-threshold}}";
                }
                type integer;
                description "This field is for buffer usage threshold";
            }
            field cpu-usage {
                sensor sensor-fpc-cpu-memory {
                    path cpu-total;
                }
                type integer;
                description "This field is for linecard cpu usage value";
            }
            field cpu-usage-threshold {
                constant {
                    value "{{fpc-cpu-usage-threshold}}";
                }                                   
                type integer;
                description "This field is for linecard cpu usage threshold";
            }
            field dt-buffer-memory-usage {
                formula {
                    dynamic-threshold {
                        algorithm 3sigma;
                        learning-period 7days;
                        pattern-periodicity 1days,1hours;
                        field-name "$buffer-memory-usage";
                    }
                }
                type integer;
                description "ML derived linecard buffer usage threshold value ";
            }
            field dt-cpu-usage {
                formula {
                    dynamic-threshold {
                        algorithm 3sigma;
                        learning-period 7days;
                        pattern-periodicity 1days,1hours;
                        field-name "$cpu-usage";
                    }
                }
                type integer;
                description "ML derived linecard cpu usage threshold value ";
            }
            field dt-heap-memory-usage {
                formula {
                    dynamic-threshold {
                        algorithm 3sigma;
                        learning-period 7days;         
                        pattern-periodicity 1days,1hours;
                        field-name "$heap-memory-usage";
                    }
                }
                type integer;
                description "ML derived linecard heap usage threshold value ";
            }
            field fpc-status {
                sensor sensor-fpc-cpu-memory {
                    where "state != /Empty/";
                    path state;
                }
                type string;
                description "This field is for fpc status";
            }
            field heap-memory-usage {
                sensor sensor-fpc-cpu-memory {
                    path memory-heap-util;
                }
                type integer;
                description "This field is for linecard heap memory usage value";
            }
            field heap-usage-threshold {
                constant {
                    value "{{fpc-heap-usage-threshold}}";
                }
                type integer;
                description "This field is for linecard heap usage threshold";
            }
            field slot {
                sensor sensor-fpc-cpu-memory {
                    path slot;
                }
                type string;
                description "This field is for fpc-slot number";
            }
            /*
             * Anomaly detection logic for fpc buffer memory utilization.
             */
            trigger fpc-buffer-memory {
                frequency 90s;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * memory buffer utilization count increases more than static 
                 * threshold static value $buffer-usage-threshold
                 */
                term is-fpc-buffer-memory-usage-abnormal {
                    when {
                        greater-than-or-equal-to "$buffer-memory-usage" "$buffer-usage-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Buffer memory usage ($buffer-memory-usage) for FPC:$slot has crossed static threshold value ($buffer-usage-threshold)";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification when
                 * memory buffer utilization count increases more than dynamic
                 * threshold value
                 */
                term is-fpc-buffer-memory-usage-above-dt {
                    when {
                        equal-to "$dt-buffer-memory-usage" 1;
                    }
                    then {
                        status {
                            color yellow;           
                            message "Buffer memory usage ($buffer-memory-usage) for FPC:$slot has crossed dynamic threshold value";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term is-fpc-buffer-memory-usage-normal {
                    then {
                        status {
                            color green;
                            message "Buffer memory usage ($buffer-memory-usage) for FPC:$slot is normal";
                        }
                    }
                }
            }
            /*
             * Anomaly detection logic for CPU utilization.
             */
            trigger fpc-cpu {
                frequency 90s;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * CPU utilization count increases more than static threshold
                 *  value.
                 */	
                term is-fpc-cpu-usage-abnormal {
                    when {
                        greater-than-or-equal-to "$cpu-usage" "$cpu-usage-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "CPU usage ($cpu-usage) for FPC:$slot has crossed static threshold value ($cpu-usage-threshold)";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when CPU utilization count increases more than dynamic
                 * threshold value.
                 */
                term is-fpc-cpu-usage-above-dt {
                    when {
                        equal-to "$dt-cpu-usage" 1;  
                    }
                    then {
                        status {
                            color yellow;
                            message "CPU usage ($cpu-usage) for FPC:$slot has crossed dynamic threshold value";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term is-fpc-cpu-usage-normal {
                    then {
                        status {
                            color green;
                            message "CPU usage ($cpu-usage) for FPC:$slot is normal";
                        }
                    }
                }
            }
            /*
             * Anomaly detection logic for heap memory utilization.
             */
            trigger fpc-heap-memory {
                frequency 90s;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * memory heap utilization count increases more than static threshold) value
                 */	
                term is-fpc-heap-memory-usage-abnormal {
                    when {
                        greater-than-or-equal-to "$heap-memory-usage" "$heap-usage-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Heap memory usage ($heap-memory-usage) for FPC:$slot has crossed static threshold value ($heap-usage-threshold)";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification when
                 * heap memory utilization count increases more than dynamic
                 * threshold value
                 */				
                term is-fpc-heap-memory-usage-above-dt {
                    when {
                        equal-to "$dt-heap-memory-usage" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "Heap memory usage ($heap-memory-usage) for FPC:$slot has crossed dynamic threshold value";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term is-fpc-heap-memory-usage-normal {
                    then {
                        status {
                            color green;
                            message "Heap memory usage ($heap-memory-usage) for FPC:$slot is normal";
                        }
                    }
                }
            }
            /*
             * Anomaly detection logic for FPC offline and online.
             */
            trigger fpc-state {
                frequency 90s;
                /*
                 * Sets color to green when FPC state is Online 
                 * 
                 */	
                term is-fpc-normal {
                    when {
                        matches-with "$fpc-status" Online;
                    }
                    then {
                        status {
                            color green;
                            message "FPC:$slot status is Online";
                        }                           
                    }
                }
                /*
                 * Sets color to red when FPC state is other than Online 
                 * 
                 */	
                term is-fpc-offline {
                    then {
                        status {
                            color red;
                            message "FPC:$slot status is Offline";
                        }
                    }
                }
            }
            variable fpc-buffer-usage-threshold {
                value 80;
                description "Linecard Buffer Memory usage threshold value";
                type int;
            }
            variable fpc-cpu-usage-threshold {
                value 80;
                description "Linecard CPU usage threshold value";
                type int;
            }
            variable fpc-heap-usage-threshold {
                value 80;
                description "Linecard Heap Memory usage threshold value";
                type int;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products SRX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform All;
                                }
                            }
                        }                       
                    }
                }
            }
	       }
    }
}