/*
 * Detects linecards CPU utilization threshold breaches and notifies when 
 * anomalies are found.
 * Three inputs control detection
 * 
 *   1) "fpc-slot-no" is a regular expression that matches the linecard
 *      that you would like to monitor.  By default it's '0-20', which matches
 *      FPC 0 to 20 linecards. Use something like '0-3' to match only specific
 *      FPCs i.e. 0 to 3.
 * 
 *   2) "fpc-cpu-high-threshold" is the threshold that causes the rule to report
 *      an anomaly. By default it's 80% of CPU utilization. This rule will set
 *      a dashboard color to red when FPC CPU utilization exceed high threshold
 *      'fpc-cpu-high-threshold' for a period of 3 minutes.
 * 
 *   3) "fpc-cpu-low-threshold" is the threshold that causes the rule to report
 *      an anomaly. By default it's 50% of CPU utilization. This rule will set 
 *      a dashboard color to yellow when RE CPU utilization exceed low 
 *      threshold 'fpc-cpu-low-threshold' for a period of 3 minutes.
 *      Otherwise color is set to green.
 */
healthbot {
    topic linecard.fpc {
        description "Monitors linecards memory & cpu and notifies anomalies";
        synopsis "Linecard health analyzer";
        rule check-fpc-cpu {
            description "Collects system FPC CPU statistics periodically and notifies anomalies when CPU utilization exceed threshold";
            synopsis "FPC CPU analyzer";
            /*
             * Monitors all the linecards CPU utilization. Notifies via the
             * dashboard colors when the linecards CPU utilization exceed by
             * {{fpc-cpu-high-threshold}} for every collected metric during a
             * 3m time range (red). The color is set to yellow if we see
             * linecard CPU utilization exceed {{fpc-cpu-low-threshold}} for
             * every collected metric during a 3m time range. Otherwise the
             * color is set to green.
             * 
             * Use FPC name as key for rule.
             */
            keys fpc
            /*
             * sensor configuration to get data from network devices.
             */
            sensor components {
                synopsis "Chassis components open-config sensor definition";
                description "/components open-config sensor path to collect telemetry data from network device";
                open-config {
                    sensor-name /components/;
                    frequency 30s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field fpc {
                sensor components {
                    where "/components/component/@name =~ /^FPC{{fpc-slot-no}}:CPU$/";
                    path "/components/component/@name";
                }
                type string;
                description "FPC slot to monitor";
            }
            field fpc-cpu-utilization {
                sensor components {
                    where "/components/component/properties/property/@name == 'cpu-utilization-total'";
                    path /components/component/properties/property/state/value;
                    zero-suppression;
                }
                description "FPC CPU utilization";
                type integer;
            }
            /*
             * Fields defined with variables and constant values
             */
            field high-threshold {
                constant {
                    value "{{fpc-cpu-high-threshold}}";
                }
                type integer;
                description "FPC CPU utilization high threshold";
            }
            field low-threshold {
                constant {
                    value "{{fpc-cpu-low-threshold}}";
                }
                type integer;
                description "FPC CPU utilization low threshold";
            }
            /*
             * Anomaly detection logic.
             */
            trigger fpc-cpu-utilization {
                synopsis "FPC CPU utilization KPI";
                description "Sets health based on increase in FPC CPU utilization";
                frequency 60s; 
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the line card CPU utilization ($re-cpu-utilization) exceed
                 * high threshold ($high-threshold) for all points in a
                 * 3 minutes period.
                 */ 
                term is-fpc-cpu-utilization-abnormal {
                    when {
                        greater-than-or-equal-to "$fpc-cpu-utilization" "$high-threshold" {
                            time-range 3m;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$fpc utilization($fpc-cpu-utilization) exceed high threshold($high-threshold)";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the line card CPU utilization ($re-cpu-utilization)
                 * exceed low threshold ($low-threshold) for all points in a
                 * 3 minutes period.
                 */ 
                term is-fpc-cpu-utilization-median {
                    when {
                        greater-than-or-equal-to "$fpc-cpu-utilization" "$low-threshold" {
                            time-range 3m;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$fpc utilization($fpc-cpu-utilization) exceed low threshold($low-threshold)";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term fpc-cpu-utilization-normal {
                    then {
                        status {
                            color green;
                            message "$fpc utilization($fpc-cpu-utilization) is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable fpc-cpu-high-threshold {
                value 80;
                description "FPC CPU utilization high threshold: Utilization increase between metrics, before we report anomaly"
                type int;
            }
            variable fpc-cpu-low-threshold {
                value 50;
                description "FPC CPU utilization low threshold: Utilization increase between metrics, before we report anomaly"
                type int;
            }
            variable fpc-slot-no {
                value "[0-9]*";
                description "FPC slot to monitor, regular expression, e.g. '0-3'";
                type string;
            }
            rule-properties {
                version 2;
                contributor juniper;
                supported-healthbot-version 1.0.1;
                catalogue {
                        tier 1;
                }
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                releases 16.1R1 {
                                    release-support min-supported-release;
                                    platform [ MX240 MX480 MX960 MX2010 MX2020 ];
                                }
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform MX150;
                                }
                            }
                            products PTX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ PTX5000 PTX1000 PTX10000 ];
                                }
                            }
                            products QFX {
                                releases 17.2R1 {
                                    release-support min-supported-release;
                                    platform [ QFX10000 QFX5200 ];
                                }
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform QFX5100;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform QFX5120-48Y;
                                }
                            }
                            products EX {
                                releases 17.3R1 {
                                    release-support min-supported-release;
                                    platform EX9200;
                                }
                                releases 18.3R1 {
                                    release-support min-supported-release;
                                    platform EX4650;
                                }
                                releases 18.4R1 {
                                    release-support min-supported-release;
                                    platform EX4600;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
