/*
 * Checks if disk write usage fields exceed threshold value and raises alarm.
 *
 * Three input control detection.
 * 
 *   1) "threshold" is used to check if the used percentage is
 *      increasing by more than the threshold value.
 *   2) "threshold-increase" is used to check if the difference of current and previous
 *      values is increasing by more than the threshold-increase value.
 *   3) "freq" is the interval between data points.
 *  
 */
healthbot {
    topic node.exporter {
        rule check-disk-write-usage {
            /*
             * Monitors disk write usage fields and notifies through alarms if
             * anomalies are found.
             *
             * Use disk-name as key for rule.			 
             */		
            keys disk-name;
            description "Disk write information";
            function difference {
                description "Method that calculates the difference between current and previous readings ";
                path generic_functions.py;
                method value_diff;
                argument key_name {
                    mandatory;
                }
                argument value;
            }
            function used-percentage {
                description "Method to calculate the percentage";
                path used-percentage.py;
                method used_percentage;
                argument total;
                argument used;
            }
            sensor disk-write {
                /*
                 * Sensor configuration to get data from network devices.
                 */			
                description "node disk in seconds";
                server-monitoring {
                    sensor-name /node/disk;
                    frequency 60s;
                }
            }
            /*
             * Fields defined by specifying the sensor paths
             */			
            field bytes-total {
                sensor disk-write {
                    path /node/disk/written/bytes/total;
                    zero-suppression;
                }
                type integer;
                description "total Disk bytes";
            }
            field completed-total {
                sensor disk-write {
                    path /node/disk/writes/completed/total;
                    zero-suppression;
                }
                type integer;
                description "total Disk reads completed";
            }
            field completed-used-percentage {
                formula {
                    user-defined-function {
                        function-name used-percentage;
                        argument total "$frequency";
                        argument used "$diff-completed";
                    }
                }
                type float;
                description "Percentage of disk read completed";
            }
            field diff-completed {
                formula {
                    user-defined-function {
                        function-name difference;
                        argument key_name "$disk-name";
                        argument value "$completed-total";
                    }
                }
                type integer;
                description "Difference of previous and current values";
            }
            field diff-time-seconds {
                formula {
                    user-defined-function {
                        function-name difference;
                        argument key_name "$disk-name";
                        argument value "$time-seconds-total";
                    }
                }
                type integer;
                description "Difference of previous and current values";
            }
            field diff_bytes {
                formula {
                    user-defined-function {
                        function-name difference;
                        argument key_name "$disk-name";
                        argument value "$bytes-total";
                    }
                }
                type integer;
                description "Difference of previous and current values";
            }
            field disk-name {
                sensor disk-write {
                    path device;
                }
                type string;
                description "disk name";
            }
            field frequency {
                constant {
                    value "{{freq}}";
                }
                type integer;
                description "interval between 2 datapoints";
            }
            field threshold {
                constant {
                    value "{{threshold}}";
                }
                type integer;
                description "threshold percentage to be compared with";
            }
            field threshold-increase {
                constant {
                    value "{{threshold-increase}}";
                }
                type integer;
                description "threshold value increase to be compared with";
            }
            field time-seconds-total {
                sensor disk-write {
                    path /node/disk/write/time/seconds/total;
                    zero-suppression;
                }
                type integer;
                description "total Disk read time";
            }
            field time-seconds-used-percentage {
                formula {
                    user-defined-function {
                        function-name used-percentage;
                        argument total "$frequency";
                        argument used "$diff-time-seconds";
                    }
                }
                type float;
                description "threshold value increase to be compared with";
            }
            /*
             * Anomaly detection logic.
             */			
            trigger bytes-used-increase {
                frequency 1offset;
                term exceeds-threshold {
                    when {
                        greater-than-or-equal-to "$diff_bytes" "$threshold" {
                            time-range 3offset;
                            any;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "The bytes-used-increase $diff_bytes for $disk-name exceeds threshold";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "The bytes-used-increase $diff_bytes  for $disk-name is normal";
                        }
                    }
                }
            }
            trigger completed-used-percentage {
                frequency 1offset;
                term exceeds-threshold {
                    when {
                        greater-than-or-equal-to "$completed-used-percentage" "$threshold" {
                            time-range 3offset;
                            any;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "completed-used-percentage \"$completed-used-percentage\" for $disk-name exceeds threshold";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "completed-used-percentage \"$completed-used-percentage\" for $disk-name is normal";
                        }
                    }
                }
            }
            trigger time-seconds-used-percentage {
                frequency 1offset;
                term exceeds-threshold {
                    when {
                        greater-than-or-equal-to "$time-seconds-used-percentage" "$threshold" {
                            time-range 3offset;
                            any;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "time-seconds-used-percentage \"$time-seconds-used-percentage\" for $disk-name exceeds threshold";
                        }
                    }
                }
                term normal {
                    then {
                        status {
                            color green;
                            message "time-seconds-used-percentage \"$time-seconds-used-percentage\" for $disk-name is normal";
                        }
                    }
                }
            }
            /*
             * Values can be changed while deploying playbook instance. 
             *  
             */			
            variable freq {
                value 60;
                description "time interval to calculate used percentage";
                type int;
            }
            variable threshold {
                value 60;
                description "threshold percentage value ";
                type int;
            }
            variable threshold-increase {
                value 10000;
                description "threshold value";
                type int;
            }
        }
    }
}	
