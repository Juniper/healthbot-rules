/*
 * Detects interface flaps and notifies when anomalies are found.
 * Two inputs control detection
 *
 *   1) interface-name-variable, is a regular expression that matches the
 *      interfaces that you would like to monitor.  By default it's
 *      '.*', which matches all interfaces. Use something like 'ge.*' to
 *      match only gigabit ethernet interfaces.
 *
 *   2) dec-place, is the threshold that causes the rule to report
 *      an anomaly.  By default it's 1. This rule will set a dashboard
 *      color to red when *all* the flap-increases are greater than
 *      'flaps-threshold-variable' for 180s. If it sees any flaps increase for a
 *      period of less than 180s, it'll turn the color to yellow,
 *      otherwise color is set to green.
 *   3) unsupported_val1 variable, is the unsupported tx/rx value.
 *      Default value is -100000.
 *   4) unsupported_val2 variable, is the unsupported tx/rx value.
 *      Default value is 0. 
 */
healthbot {
    topic linecard.optical {
        rule check-optics-power-openconfig {
            keys [ interface-name lane ];
            synopsis "Interface rx optical power";
            description "Collects the interface input optical power and notifies in case of anomalies";
            function rounding {
                path round_float.py;
                method round_float;
                argument dec_place {
                    mandatory;
                }
                argument value {
                    mandatory;
                }
            }
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces {
                synopsis "Interface open-config sensor definition";
                description "Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /junos/system/linecard/optics/;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field decimal-place {
                constant {
                    value "{{dec-place}}";
                }
                type integer;
            }
            field interface-name {
                sensor interfaces {
                    where "/interfaces/interface/@name =~ /{{interface-name-variable}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field lane {
                sensor interfaces {
                    path /interfaces/interface/optics/lanediags/lane/lane_number;
                }
                type string;
                description "Interface lane number";
            }
            field rx-db {
                sensor interfaces {
                    path /interfaces/interface/optics/lanediags/lane/lane_laser_receiver_power_dbm;
                    zero-suppression;
                }
                type float;
                description "Received optical power";
            }
            field rx-db-pretty {
                formula {
                    user-defined-function {
                        function-name rounding;
                        argument value "$rx-db";
                        argument dec_place "$decimal-place";
                    }
                }
                type float;
            }
            field rx-power-high {
                reference {
                    path "/topic[topic-name='linecard.optical']/rule[rule-name='check-optics-power-thresholds-openconfig']/field[interface-name='$interface-name']/rx-power-high";
                    time-range 75s;
                }
                type float;
                description "Receiver power high alarm threshold";
            }
            field rx-power-low {
                reference {
                    path "/topic[topic-name='linecard.optical']/rule[rule-name='check-optics-power-thresholds-openconfig']/field[interface-name='$interface-name']/rx-power-low";
                    time-range 75s;
                }
                type float;
                description "Receive low power threshold";
            }
            field tx-db {
                sensor interfaces {
                    path /interfaces/interface/optics/lanediags/lane/lane_laser_output_power_dbm;
                    zero-suppression;
                }
                type float;
                description "Transmit optical power";
            }
            field tx-db-pretty {
                formula {
                    user-defined-function {
                        function-name rounding;
                        argument value "$tx-db";
                        argument dec_place "$decimal-place";
                    }
                }
                type float;
            }
            field tx-power-high {
                reference {
                    path "/topic[topic-name='linecard.optical']/rule[rule-name='check-optics-power-thresholds-openconfig']/field[interface-name='$interface-name']/tx-power-high";
                    time-range 75s;
                }
                type float;
                description "Transmit power high alarm threshold";
            }
            field tx-power-low {
                reference {
                    path "/topic[topic-name='linecard.optical']/rule[rule-name='check-optics-power-thresholds-openconfig']/field[interface-name='$interface-name']/tx-power-low";
                    time-range 75s;
                }
                type float;
                description "Transmit low power threshold";
            }
            field unsupported-val1 {
                constant {
                    value "{{unsupported_val1}}";
                }
                type integer;
            }
            field unsupported-val2 {
                constant {
                    value "{{unsupported_val2}}";
                }
                type integer;
            }
            /*
             * Anomaly detection logic.
             */
            trigger rx-power {
                synopsis "Interface rx optical power";
                description "Sets health based on rx optical power";
                frequency 1.5offset;
                term rx-unsupported1 {
                    when {
                        equal-to "$rx-db" "$unsupported-val1";
                    }
                    then {
                        status {
                            color green;
                            message "Optical RX power measurement is unsupported on this optic";
                        }
                    }
                }
                term rx-unsupported2 {
                    when {
                        equal-to "$rx-db" "$unsupported-val2";
                    }
                    then {
                        status {
                            color green;
                            message "Optical RX power measurement is unsupported on this optic";
                        }
                    }
                }
                term is-interface-rx-power-abnormal {
                    when {
                        greater-than "$rx-db" "$rx-power-high";
                    }
                    then {
                        status {
                            color red;
                            message "Optical RX power is above high threshold on $interface-name, Rx power is:$rx-db-pretty dbm. Should be less than $rx-power-high";
                        }
                    }
                }
                term is-interface-rx-power-low {
                    when {
                        less-than "$rx-db" "$rx-power-low";
                    }
                    then {
                        status {
                            color red;
                            message "Optical RX power is below low threshold on $interface-name, Rx power is:$rx-db-pretty dbm. Should be greater than $rx-power-low";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-interface-rx-power-issues {
                    then {
                        status {
                            color green;
                            message "$interface-name rx power($rx-db-pretty) is in normal range";
                        }
                    }
                }
            }
            trigger tx-power {
                synopsis "Interface optical tx power";
                description "Sets health based on the tx optical power";
                frequency 1.5offset;
                term tx-unsupported1 {
                    when {
                        equal-to "$tx-db" "$unsupported-val1";
                    }
                    then {
                        status {
                            color green;
                            message "Optical TX power measurement is unsupported on this optic";
                        }
                    }
                }
                term tx-unsupported2 {
                    when {
                        equal-to "$tx-db" "$unsupported-val2";
                    }
                    then {
                        status {
                            color green;
                            message "Optical TX power measurement is unsupported on this optic";
                        }
                    }
                }
                term is-interface-tx-power-abnormal {
                    when {
                        greater-than "$tx-db" "$tx-power-high";
                    }
                    then {
                        status {
                            color red;
                            message "Optical TX power is above high threshold on $interface-name, Tx power is:$tx-db-pretty dbm. Should be less than $tx-power-high";
                        }
                    }
                }
                term is-interface-tx-power-low {
                    when {
                        less-than "$tx-db" "$tx-power-low";
                    }
                    then {
                        status {
                            color red;
                            message "Optical TX power is below low threshold on $interface-name, Tx power is:$tx-db-pretty dbm. Should be greater than $tx-power-low";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term no-interface-tx-power-issues {
                    then {
                        status {
                            color green;
                            message "$interface-name tx power($tx-db-pretty) is in normal range";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable dec-place {
                value 4;
                description "Decimal places for routing of dBm values.";
                type int;
            }
            variable interface-name-variable {
                value .*;
                description "Interface names to monitor, regular expression, e.g. 'ge-.*'";
                type string;
            }
            variable unsupported_val1 {
                value -100000;
                description "unsupported tx/rx value";
                type int;
            }
            variable unsupported_val2 {
                value 0;
                description "unsupported tx/rx value";
                type int;
            }
            rule-properties {
                version 2;
                contributor juniper;
                category advanced;
                is-scaling-rule {
                    description "Fields:interface-name ; Directly impacted by number of interfaces running in each network device";
                }				
                supported-healthbot-version 4.0.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms MX240 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX480 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX960 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2010 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2020 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                            products PTX {
                                platforms PTX5000 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX1000 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX10000 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                            products QFX {
                                platforms QFX10000 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms QFX5200 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files round_float.py;
                }				
            }
        }
    }
}