/*
 * Detects BGP neighbor flaps and notifies when anomalies are found.
 * Two inputs control detection
 * 
 *   1) "neighbors" is a regular expression that matches the BGP neighbors
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all BGP neighbors. Use something like '172.16.*' to match all neighbor
 *      addresses which are in 172.16.0.0/16 network range.
 *
 *   2) "flaps_threshold" is the threshold that causes the rule to report
 *      an anomaly.  By default it's 1. This rule will set a dashboard
 *      color to red when any of the BGP neighbor session flap-increases
 *      are greater than 'flaps_threshold' for 60s. If it sees any flaps
 *      increase for a period of less than 60s, it'll turn the color to
 *      yellow, otherwise color is set to green.
 */
iceberg {
    topic protocol.bgp {
        description "Monitors BGP sessions statistics i.e. neighbor state, detects flaps, route damping and max received-routes count and notify anomalies";
        synopsis "BGP session statistics analyzer";
        rule check-bgp-neighbor-flaps {
            description "Collects BGP session carrier-transitions count periodically and notify anomalies when flap count increases";
            synopsis "BGP neighbor flaps detector";
            /*
             * Monitors the BGP neighbor sessions. Notifies via the dashboard
             * colors when the flaps increase by {{flaps_threshold}} for every
             * collected metric during a 60s time range (red). The color is set
             * to yellow if we see any flap increase by {{flaps_threshold}}.
             * Otherwise the color is set to green
             * 
             * Use neighbor address as key for rule.
             */
            keys neighbor-address;
            /*
             * Sensor configuration to get data from network devices
             */
            sensor bgp-sensor {
                synopsis "BGP open-config sensor definition";
                description "/protocol/bgp open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /network-instances/network-instance/protocols/protocol/bgp/;
                    frequency 30s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field established-transitions {
                sensor bgp-sensor {
                    path /network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state/established-transitions;
                }
                type integer;
                description "Number of neighbor session flaps";
            }
            field last-established {
                sensor bgp-sensor {
                    path /network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/state/last-established;
                }
                type string;
                description "BGP session last established time";
            }
            field neighbor-address {
                sensor bgp-sensor {
                    where "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address =~ /{{neighbors}}/";
                    path "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address";
                }
                type string;
                description "BGP neighbor addresses to monitor";
            }
            /*
             * Fields defined with variables and constant values.
             */
            field flap-count-threshold {
                constant {
                    value "{{flaps_threshold}}";
                }
                type integer;
                description "Flap count increase threshold";
            }
            /*
             * Anomaly detection logic.
             */
            trigger neigbor-flap {
                synopsis "BGP neighbor session flaps KPI";
                description "Sets health based on increase in bgp neighbor session flaps";
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the BGP neighbor session transition
                 * ($$established-transitions) count increases in all points in
                 * a 60 seconds period.
                 */
                term is-session-flapping {
                    when {
                        min-rate-of-increase "$established-transitions" {
                            rate $flap-count-threshold;
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Neighbor session flapping, last-established:$last-established";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the increase is at least once.
                 */
                term is-session-inconsistent {
                    when {
                        min-rate-of-increase "$established-transitions" {
                            rate $flap-count-threshold;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "Neighbor session inconsistent, last-established:$last-established";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term is-session-stable {
                    then {
                        status {
                            color green;
                            message "Neighbor session stable, last-established:$last-established";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable neighbors {
                value .*;
                description "BGP neighbor addresses to monitor, regular expression, e.g. '172.16.*'";
                type string;
            }
            variable flaps_threshold {
                value 1;
                type int;
                description "BGP neighbor session flaps threshold: Number of flap increase between metrics, before we report anomaly";
            }
        }
    }
}
