/*
 * Detects BGP neighbor state and notifies when anomalies are found
 *
 * Inputs control detection
 *
 *   1) "neighbors" is a regular expression that matches the BGP neighbors
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all BGP neighbors. Use something like '172.16.*' to match all neighbor
 *      addresses which are in 172.16.0.0/16 network range.
 */
healthbot {
    topic protocol.bgp {
        description "Monitors BGP neighbor state and notify anomalies";
        synopsis "BGP state statistics analyzer";
        rule check-bgp-neighbor-state-iagent {
            keys peer-address;
            synopsis "BGP neighbor state analyzer";
            description "Collects BGP neighbor state periodically and notifies anomaly";
            sensor BgpNeighbor {
                synopsis "iAgent sensor definition";
                iAgent {
                    file bgp_neighbor.yml;
                    table bgpNeighborTable;
                    frequency 60s;
                }
            }
            field peer-address {
                sensor BgpNeighbor {
                    where "peer-address =~ /{{neighbors}}/";
                    path peer-address;
                }
                type string;
                description "Sensor field to store peer address";
            }
            trigger neighbor-state {
                synopsis "BGP session state KPI";
                description "Sets health based on change in BGP neighbor session state";
                frequency 1.5offset;
                term is-neighbor-up {
                    when {
                        matches-with "$peer-state" Established {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "BGP neighbor($peer-address) session is up";
                        }
                    }
                }
                term neighbor-down {
                    then {
                        status {
                            color red;
                            message "BGP neighbor($peer-address) session is down";
                        }
                    }
                }
            }
            variable neighbors {
                value .*;
                description "BGP neighbor addresses to monitor, regular expression, e.g. '172.16.*'";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 2.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products PTX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products QFX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products EX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }						
                        }
                    }
                }
            }
        }
    }
}
