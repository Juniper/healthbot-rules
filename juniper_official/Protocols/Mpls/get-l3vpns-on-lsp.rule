healthbot {
    topic protocol.l3vpn {
        rule get-l3vpns-on-lsp {
            keys [ destination-prefix rt-destination vpn-route-table ];
            synopsis "L3vpn route analyzer";
            description "Collects the l3vpn site's subnet details on LSP";
            sensor l3vpn {
                iAgent {
                    file L3VpnsOnLspTable.yml;
                    table L3VpnsOnLspTable;
                    frequency 15m;
                }
            }
            field active-tag {
                sensor l3vpn {
                    path active-tag;
                }
                type string;
                description "Route active tag";
            }
            field destination-prefix {
                sensor l3vpn {
                    path destination-prefix;
                }
                type string;
                description "Destination ip prefix";
            }
            field destination-prefix-length {
                sensor l3vpn {
                    path destination-prefix-length;
                }
                type integer;
                description "Destination ip prefix length";
            }
            field lsp-name {
                sensor l3vpn {
                    path lsp-name;
                }
                type string;            
                description "LSP name";
            }
            field next-hop-ip {
                sensor l3vpn {
                    path next-hop-ip;
                }
                type string;
                description "Forwarding ip";
            }
            field outgoing-if {
                sensor l3vpn {
                    path outgoing-if;
                }
                type string;
                description "Forwarding interface";
            }
            field protocol-name {
                sensor l3vpn {
                    path protocol-name;
                }
                type string;
                description "Learned protocol";
            }
            field remote-pe {
                sensor l3vpn {
                    path learned-from;
                }
                type string;
                description "Remote PE router ip";
            }
            field route-distinguisher {
                sensor l3vpn {
                    path route-distinguisher;
                }
                type string;
                description "RD value";
            }
            field rt-destination {
                sensor l3vpn {          
                    path rt-destination;
                }
                type string;
                description "RT destination subnet";
            }
            field selected-next-hop {
                sensor l3vpn {
                    path selected-next-hop;
                }
                type string;
                description "Current next-hop";
            }
            field vpn-route-table {
                sensor l3vpn {
                    path vpn-route-table;
                }
                type string;
                description "Vpn route table name";
            }
            trigger test {
                frequency 1offset;
                term Term_1 {
                    when {
                        matches-with "$protocol-name" BGP {
                            ignore-case;
                        }
                    }
                }
                term Term_2 {
                    when {
                        does-not-match-with "$protocol-name" BGP {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$lsp-name";
                        }               
                    }
                }
            }
        }
    }
}
