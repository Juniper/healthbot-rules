/*
 * Detects system security alarms and notifies
 *
 * One input control detection.
 * 
 * 1) "input-alarm-description" is used to filter the based on the alarm
 *    description    
 *
 */
healthbot {
    topic system.alarm {
        rule check-alarm-status-netconf {
            /*
             * Monitors system alarms and notifies anomalies when alarms found.
             *
             * Use alarm-description as keys for rule.
             */
            keys [ alarm-description re-name ];
            synopsis "System alarm analyzer";
            description "Collects system alarm details periodically and notifies anomalies when alarms found in SRX cluster";
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor check-alarm-status-ha {
                iAgent {
                    file SystemAlarmStatus.yml;
                    table SystemAlarmStatusTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined with variables and constant values
             */
            field alarm-class {
                sensor check-alarm-status-ha {
                    path alarm-class;
                }
                type string;
                description "alarm class ";
            }
            field alarm-description {
                sensor check-alarm-status-ha {
                    where "alarm-description =~ /{{input-alarm-description}}/";
                    path alarm-description;
                }
                type string;
                description "alarm long description";
            }
            field alarm-type {
                sensor check-alarm-status-ha {
                    path alarm-type;
                }
                type string;
                description "alarm type";
            }
            field re-name {
                sensor check-alarm-status-ha {
                    path re-name;
                    data-if-missing {               
                        value StandaloneSRX;           
                    }
                }
                type string;
                description "re-name ";
            }
            /*
             * Anomaly detection logic.
             */
            trigger security-alarms {
                frequency 1.5offset;
                /*
                 * Sets dashboard color to red when alarms are detected and sends 
                 * notification.
                 */
                term alarm-status {
                    then {
                        status {
                            color red;
                            message "Alarm-class:$alarm-class;Alarm-type:$alarm-type;Description:$alarm-description on $re-name";
                        }
                    }
                }
            }
            /*
             * Values can be changed while trying to filter alarms based on class
             * or types while deploying playbook instance.
             */
            variable input-alarm-description {
                value .*;
                description "Enter system alarm description in regex";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                is-scaling-rule {
                    description "Collects system alarm details";
                }				
                supported-healthbot-version 2.1.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products SRX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform All-standalone-and-cluster-models;
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files [ SystemAlarmStatus.yml SystemAlarmStatusHA.yml SystemAlarmStatusSA.yml ];
                }
            }
        }
        rule check-no-alarms {
            synopsis "Chassis alarms detector";
            description "Refers rule system.alarm/check-alarm-status-netconf and shows system as healthy if no active alarms";
            rule-frequency 65s;
            field alarm-description {
                reference {
                    path "/topic[topic-name=system.alarm]/rule[rule-name=check-alarm-status-netconf ]/alarm-description";
                    data-if-missing {
                        value No-active-alarms;
                    }
                    time-range 65s;
                }
                type string;
                description "Chassis or System alarm description";
            }
            trigger chassis-alarms {
                frequency 65s;
                term no-active-alarms {
                    when {
                        matches-with "$alarm-description" No-active-alarms;
                    }
                    then {
                        status {
                            color green;
                            message "No active alarms";
                        }
                    }
                }
            }
        }
    }
}
