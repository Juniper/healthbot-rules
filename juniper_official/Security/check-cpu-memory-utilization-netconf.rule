/*
 * Monitors SPU's CPU and memory and notifies anomalies when CPU and memory
 * utilization exceeds threshold.
 *
 * Two input control detection.
 * 
 *  1) "max-threshold" variable, is the threshold that causes the rule to report
 *  an anomaly.By default it's 80. This rule will set a dashboard color to red
 *  when *all* the memory or cpu utilisation are greater than
 *  'max-threshold'.
 *  2) "min-threshold" variable, is the threshold that causes the rule to report
 *   an anomaly.By default it's 60. This rule will set a dashboard color to yellow
 *   when *all* the memory or cpu utilisation are greater than
 *   'min-threshold'.If it is less than min-threshold it is set to green.
 *  
 */
healthbot {
    topic security.spu {
        rule check-cpu-memory-utilization-netconf {
            /*
             * Monitors the cpu and memory utilization and notifies via the
             * dashboard colors, when the cpu and memory utilization is above 
             * high threshold {{max-threshold}} it will mark as red. The color 
             * is set to yellow when the cpu and memory utilization is above 
             * low threshold {{min-threshold}}. Otherwise the color is set to 
             * green.
             *
             * Use re-name, fpc and pic as keys for rule.
             */
            keys [ fpc pic re-name ];
            synopsis "SPU cpu and memory analyzer";
            description "SPU cpu and memory utilization of SRX cluster";
            /*
             * Sensor configuration to get data from network devices.
             * 
             */
            sensor check-cpu-memory-utilization-ha {
                iAgent {
                    file SecurityCPUMemoryUtilization.yml;
                    table PerfStatsTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined with variables and constant values
             */
            field higmax-threshold {
                constant {
                    value "{{max-threshold}}";
                }
                type integer;
                description "high threshold for trigger";
            }
            field low-threshold {
                constant {
                    value "{{min-threshold}}";
                }
                type integer;
                description "low threshold for trigger";
            }
            field re-name {
                sensor check-cpu-memory-utilization-ha {
                    path re-name;
                    data-if-missing {               
                        value StandaloneSRX;           
                    }
                }
                type string;
                description "re-name in the cluster";
            }
            field fpc {
                sensor check-cpu-memory-utilization-ha {
                    path fpc-number;
                    data-if-missing {               
                        value 0;           
                    }
                }
                type string;
                description "FPC number of the cluster";
            }
            field pic {                             
                sensor check-cpu-memory-utilization-ha {
                    path pic-number; 
                    data-if-missing {               
                        value 0;           
                    }               
                }                                   
                type string;                        
                description "PIC number of the cluster";
            }
            field spu-cpu-utilization {
                sensor check-cpu-memory-utilization-ha {
                    path spu-cpu-utilization;
                }
                type integer;
                description "cpu utilization value";
            }
            field spu-memory-utilization {
                sensor check-cpu-memory-utilization-ha {
                    path spu-memory-utilization;
                }
                type integer;
                description "memory utilization value";
            }
            /*
             * Anomaly detection logic.
             */
            trigger spu-cpu-utilization {
                frequency 1.5offset;
                /*
                 * Sets dashboard color to red when *all* the cpu 
                 * utilisation are greater than 'max-threshold'.
                 */
                term cpu-utilization-higmax-threshold {
                    when {
                        greater-than "$spu-cpu-utilization" "$higmax-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$re-name:Fpc$fpc:pic$pic CPU utilization($spu-cpu-utilization%) is above high threshold";
                        }
                    }
                }
                /*
                 * Sets dashboard color to yellow when *all* the cpu 
                 * utilisation are greater than 'min-threshold'.
                 */
                term cpu-utilization-low-threshold {
                    when {
                        greater-than "$spu-cpu-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$re-name:Fpc$fpc:pic$pic CPU utilization($spu-cpu-utilization%) is above low threshold";
                        }
                    }
                }
                /*
                 * Sets dashboard color to green when *all* the cpu 
                 * utilisation are less than 'min-threshold'.
                 */
                term cpu-utilization-normamin-threshold {
                    when {
                        less-than-or-equal-to "$spu-cpu-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "$re-name:Fpc$fpc:pic$pic CPU utilization($spu-cpu-utilization%) is normal";
                        }
                    }
                }
            }
            /*
             * Anomaly detection logic.
             */
            trigger spu-memory-utilization {
                frequency 1.5offset;
                /*
                 * Sets dashboard color to red when *all* the memory 
                 * utilisation are greater than 'max-threshold'.
                 */
                term memory-utilization-higmax-threshold {
                    when {
                        greater-than "$spu-memory-utilization" "$higmax-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$re-name:Fpc$fpc:pic$pic memory utilization($spu-memory-utilization%) is above high threshold";
                        }
                    }
                }
                /*
                 * Sets dashboard color to yellow when *all* the memory 
                 * utilisation are greater than 'min-threshold'.
                 */
                term memory-utilization-low-threshold {
                    when {
                        greater-than "$spu-memory-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$re-name:Fpc$fpc:pic$pic memory utilization($spu-memory-utilization%) is above low threshold";
                        }
                    }
                }
                /*
                 * Sets dashboard color to green when *all* the memory 
                 * utilisation is less than 'min-threshold'.
                 */
                term memory-utilization-normamin-threshold {
                    when {
                        less-than-or-equal-to "$spu-memory-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "$re-name:Fpc$fpc:pic$pic memory utilization($spu-memory-utilization%) is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable max-threshold {
                value 80;
                description "Enter high threshold value";
                type int;
            }
            variable min-threshold {
                value 60;
                description "Enter medium threshold value";
                type int;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                is-scaling-rule {
                    description "SPU cpu and memory utilization of SRX cluster";
                }				
                supported-healthbot-version 2.1.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products SRX {
                                platforms All-standalone-and-cluster-models {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files [ SecurityCPUMemoryUtilization.yml SecurityCPUMemoryUtilizationMidrangeHA.yml SecurityCPUMemoryUtilizationHighendHA.yml SecurityCPUMemoryUtilizationSA.yml SecurityCPUMemoryUtilizationHighendSA.yml ];
                }
            }
        }
    }
}
