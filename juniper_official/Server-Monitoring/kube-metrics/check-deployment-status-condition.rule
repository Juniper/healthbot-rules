healthbot {
    topic kube-metrics {
        rule check-deployment-status-condition {
            keys [ condition deployment namespace ];
            synopsis "KPI to check pod deployment status";
            description "Checks that there are zero unavailable daemons sets and that critical pieces such as docker-registry/docker-registry are up and running";
            sensor deployment-status {
                description "Checks kube metrics deployment status condition";
                server-monitoring {
                    sensor-name /kube/deployment;
                    frequency 60s;
                }
            }
            field condition {
                sensor deployment-status {
                    path condition;
                }
                type string;
                description "Deployment condition";
            }
            field deployment {
                sensor deployment-status {
                    path deployment;
                }
                type string;
                description "Deployment pod name";
            }
            field namespace {
                sensor deployment-status {
                    path namespace;
                }
                type string;
                description "Deployment namespace";
            }
            field status {
                sensor deployment-status {
                    path status;
                }
                type string;
                description "Checks for true or false condition";
            }
            trigger deployment-status {
                frequency 1offset;
                term available {
                    when {
                        matches-with "$status" true {
                            time-range 3offset;
                            any;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "Deployment status for $deployment is $status";
                        }
                    }
                }
                term notavailable {
                    then {
                        status {
                            color red;
                            message "Deployment status for $deployment is $status";
                        }
                    }
                }
            }
        }
    }
}	