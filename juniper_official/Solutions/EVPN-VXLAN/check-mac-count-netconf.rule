/*
 *   This rule checks health of MAC count in ethernet switching table and notify in case any of the health monitored field crosses threshold
 */
healthbot {
    topic protocol.evpn {
        description "This rule checks health of MAC count in ethernet switching table and notify in case any of the health monitored field crosses threshold";
        synopsis "MAC count check in ethernet switching";
        rule check-mac-count-netconf {
            keys vlan-name;
            synopsis "MAC count in ethernet switching table analyzer";
            description "This rule checks health of MAC count in ethernet switching table and notify in case any of the health monitored field crosses threshold";
            sensor mac-count {
                synopsis "mac count netconf based iAgent sensor definition";
                description "iAgent sensor defined in yml file using netconf rpc/cli command and defined fields using pyez tables&views to collect data from network device";
                iAgent {
                    file mac-count.yml;
                    table MacCountTable;
                    frequency 180s;
                }
            }
            field dt-mac-count {
                formula {
                    anomaly-detection {
                        algorithm 3sigma;
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$mac-count";
                    }
                }
                type integer;
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field mac-count {
                sensor mac-count {
                    path rtb-mac-count;
                }
                type integer;
                description "This filed is for mac count";
            }
            field threshold {
                constant {
                    value "{{static-threshold}}";
                }
                type integer;
            }
            field vlan-name {
                sensor mac-count {
                    where "vlan-name =~ /{{vlan-id}}/";
                    path vlan-name;
                }
                type string;
                description "VLAN ID";
            }
            /*
             * Anomaly detection logic.
             */
            trigger mac-count {
                synopsis "MAC count kpi";
                description "Sets health based on MAC count in ethernet switching table.";
                frequency 1.1offset;
                term ignore-default-vlan {
                    when {
                        matches-with "$vlan-name" default {
                            ignore-case;
                        }
                    }
                }
                term is-mac-count-above-static-threshold {
                    when {
                        greater-than-or-equal-to "$mac-count" "$threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Observed significant amount of changes in MAC count($mac-count) of VLAN($vlan-name)";
                        }
                    }
                }
                term is-mac-count-above-anomaly-detection {
                    when {
                        equal-to "$dt-mac-count" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "Observed changes in MAC count($mac-count) of VLAN($vlan-name)";
                        }
                    }
                }
                term mac-count-normal {
                    then {
                        status {
                            color green;
                            message "MAC count($mac-count) of VLAN($vlan-name) is normal";
                        }
                    }
                }
            }
           /*
            * Variables with default values. Default values can be changed
            * while deploying playbook instance.
            */
            variable static-threshold {
                value 800;
                description "Enter MAC limit threshold per VLAN";
                type int;
            }
            variable vlan-id {
                value .*;
                description "Enter VLAN IDs to be monitored.";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                is-scaling-rule {
                    description "Monitors mac count is evpn table";
                }				
                supported-healthbot-version 3.0.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products QFX {
                                platforms All {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files mac-count.yml;
                }
            }
        }
    }
}
