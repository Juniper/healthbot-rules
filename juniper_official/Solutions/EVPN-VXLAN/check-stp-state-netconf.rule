/*
 * Collects each member vlan STP state periodically and notifies anomalies 
 * when STP state is discarding.
 *
 * One input controls detection
 * 
 *   1) input-vlan-id variable, is a regular expression that matches the vlan id that you would 
 *      like to monitor.  By default it's '.*', which matches all interfaces. 
 *      Use something like '100|107' to match only vlan IDs 100 and 107.
 *
 */
 healthbot {
    topic protocol.evpn {
        rule check-stp-state-netconf {
            keys [ vlan-id vlan-name ];
            synopsis "STP state analyzer";
            description "Monitors member vlan's STP state periodically and notifies in case of anomalies";
            sensor stp {
                iAgent {
                    file vlan-member-stp-state.yml;
                    table MemberStpStateTable;
                    frequency 180s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field stp-state {
                sensor stp {
                    path stp-state;
                }
                type string;
                description "Member vlan STP state";
            }
            field vlan-id {
                sensor stp {
                    where "l2iff-interface-vlan-id  =~ /{{input-vlan-id}}/";
                    where "l2iff-interface-vlan-id =~ /.+/";
                    path l2iff-interface-vlan-id;
                }
                type string;
                description "Member vlan id";
            }
            field vlan-name {
                sensor stp {
                    where "l2iff-interface-vlan-name =~ /.+/";
                    path l2iff-interface-vlan-name;
                }
                type string;
                description "Member vlan name";
            }
            /*
             * Anomaly detection logic.
             */
            trigger vlan-stp-state {
                synopsis "VLAN stp kpi";
                description "sets health based on VLAN STP state";
                frequency 1.1offset;
                term is-stp-state-discarding {
                    when {
                        does-not-match-with "$stp-state" Forwarding {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$vlan-name and $vlan-id state is $stp-state";
                        }
                    }
                }
                term is-stp-state-forwarding {
                    then {
                        status {
                            color green;
                            message "$vlan-name and $vlan-id state is $stp-state";
                        }
                    }
                }
            }
           /*
            * Variables with default values. Default values can be changed
            * while deploying playbook instance.
            */
            variable input-vlan-id {
                value .*;
                description "Input vlan id or ids to monitor in regex. e.g. 100|102-105|108";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.0.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products QFX {
                                platforms All {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files vlan-member-stp-state.yml;
                }
            }
        }
    }
}
