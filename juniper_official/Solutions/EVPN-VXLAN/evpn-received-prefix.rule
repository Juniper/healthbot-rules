/*
 * Detects BGP neighbor received route count threshold breaches and notifies
 * when anomalies are found.
 * Two inputs control detection
 *
 *   1) "addr-table" is a regular expression that matches the BGP evpn table
 *      that you would like to monitor.By default it's 'default-switch.evpn.0'
 *
 *   2) "max-route-threshold"  is the threshold that causes the
 *      rule to report an anomaly. By default it's 10000. This rule will set
 *      a dashboard color to red when received route count exceed threshold
 *
 */
healthbot {
    topic protocol.evpn {
        description "Monitors max received-routes count in EVPN table and notify anomalies";
        synopsis "EVPN session statistics analyzer";
        rule check-evpn-received-prefix {
            keys [ name peer-address ];
            synopsis "BGP EVPN received routes analyzer";
            description "Collects BGP EVPN session received routes count periodically and notifies anomaly when received route count exceed threshold";
            sensor BgpNeighbour {
                synopsis "iAgent sensor definition";
                iAgent {
                    file bgp_neighbour.yml;
                    table bgpNeighbourTable;
                    frequency 60s;
                }
            }
            field name {
                sensor BgpNeighbour {
                    where "name =~ /{{addr-table}}/";
                    path name;
                }
                type string;
                description "Sensor field to store table name";
            }
            field peer-address {
                sensor BgpNeighbour {
                    path peer-address;
                }
                type string;
                description "Sensor field to store peer address";
            }
            field received-count {
                sensor BgpNeighbour {
                    path received-prefix-count;
                    zero-suppression;
                }
                type integer;
                description "Sensor field to store received prefix count";
            }
            field received-count-dynamic-threshold {
                formula {
                    dynamic-threshold {
                        algorithm 3sigma;
                        learning-period 7d;
                        pattern-periodicity 1d,1h;
                        field-name "$received-count";
                    }
                }
                type integer;
                description "Formula Field to store anomaly/no-anomaly in received-count field";
            }
            field route-count-threshold {
                constant {
                    value "{{max-route-threshold}}";
                }
                type integer;
            }
            trigger received-prefix {
                synopsis "BGP EVPN max received routes KPI";
                description "Sets health based on increase in received EVPN routes on neighbor session";
                frequency 90s;
                term above-static-threshold {
                    when {
                        greater-than-or-equal-to "$received-count" "$route-count-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "EVPN received route count($received-count) exceed static threshold";
                        }
                    }
                }
                term is-received-count-abnormal {
                    when {
                        equal-to "$received-count-dynamic-threshold" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "EVPN received route count($received-count) exceed dynamic threshold";
                        }
                    }
                }
                term is-received-count-normal {
                    then {
                        status {
                            color green;
                            message "EVPN received route count($received-count) is normal";
                        }
                    }
                }
            }
            variable addr-table {
                value default-switch.evpn.0;
                description "BGP Neighbour table, regular expression, e.g. 'efault-switch.evpn.0'";
                type string;
            }
            variable max-route-threshold {
                value 10000;
                description "BGP EVPN table received routes threshold: Number of received route count increase between metrics, before we report anomaly";
                type int;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 2.1.0;
                catalogue {
                    tier 2;
                }
                supported-devices {
                    juniper {
                        operating-system junos {
                            products QFX {
                                releases 18.1R1 {
                                    release-support min-supported-release;
                                    platform All;
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files bgp_neighbour.yml;
                }
            }
        }
    }
}
