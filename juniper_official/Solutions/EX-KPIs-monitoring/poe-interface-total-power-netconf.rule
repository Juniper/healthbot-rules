/*
 * Detects POE Interface Power consumption and notifies when anomalies are found.
 * Two inputs control detection
 * 
 *   1) poe-threshold-variable, is the threshold that causes the rule to report
 *      an anomaly.  By default it's 80. This rule will set a dashboard
 *      color to red when the interface power utilization is greater than
 *      poe-threshold-variable.Otherwise color is set to green.
 * 
 *   2) variable-status-variable, is used to check if the interface operational
 *      state is ON.
 */
healthbot {
    topic poe.interface {
        description "Monitors POE Interface power utilization and raises alarm if threshold is exceeded";
        synopsis "POE Interface Power consumption analyzer";	
        rule check-power-consumption-netconf {
            /*
             * Monitors the POE Interface power consumption. Notifies via the dashboard colors
             * when interface power utilization percentage is more than the threshold (red).
             * Otherwise the color is set to green.
             *
             * Use interface name as key for rule.
             *
             */		
            keys interface-name;
            synopsis "PoE interface power consumption KPI";
            description "Monitors PoE interface power consumption and display anomaly where power usage is more than the threshold";
            /*
             * Function to calculate the ratio of total vs used percentage 
             */			
            function used_percentage {
                path used-percentage.py;
                method used_percentage;
                argument total {
                    mandatory;
                }
                argument used {
                    mandatory;
                }
            }
            /*
             * Sensor configuration to get data from network devices.
             */			
            sensor poe-interface-power {
                iAgent {
                    file poeInterface.yml;
                    table poeInterfaceTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */			
            field interface-name {
                sensor poe-interface-power {
                    where "interface-status =~ /{{variable-status}}/";
                    path interface-name;
                }
                type string;
                description "Interface name";
            }
            field interface-status {
                sensor poe-interface-power {
                    path interface-status;
                }
                type string;
                description "PoE interface operational status";
            }
            field max-threshold {
                constant {
                    value "{{poe-threshold}}";
                }
                type integer;
                description "User defined maximum threshold";
            }
            field power-utilization-percent {
                formula {
                    user-defined-function {
                        function-name used_percentage;
                        argument total "$interface-power-limit";
                        argument used "$interface-power";
                    }
                }
                type integer;
                description "Power utilization percent";
            }
            /*
             * Anomaly detection logic.
             */			
            trigger PoE-interface-power-consumption {
                synopsis "PoE interface power consumption KPI";
                description "Sets health based on the change in interface power consumption percentage";			
                frequency 1.5offset;
                term is-more-than-threshold {
                    when {
                        greater-than-or-equal-to "$power-utilization-percent" "$max-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "PoE Interface-power consumption percentage ($power-utilization-percent) is more than the max threshold.";
                        }
                    }
                }
                term is-less-than-threshold {
                    then {
                        status {
                            color green;
                            message "PoE Interface-power consumption percentage ($power-utilization-percent) is less than the max threshold.";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */			
            variable poe-threshold {
                value 80;
                description "User defined maximum PoE threshold";
                type int;
            }
            variable variable-status {
                value ON;
                description "PoE operational status";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.0.1;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products EX {
                                platforms All {
                                    releases 17.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                 }
             }			
        }
    }
}
