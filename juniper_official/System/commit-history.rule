/*
 * Monitors commit history and notifies when anomalies are found.
 * Three inputs control detection
 *
 *   1) l1-commit-threshold, lowest threshold in minutes notifies the commit.
 *       By default it monitors the commit in the last 5 minutes. If there is
 *       any commits in the last 5 minutes, it'll turn the color to yellow.
 *
 *   2) l2-commit-threshold, lowest threshold in minutes notifies the commit.
 *       By default it monitors the commit in the last 30 minutes. If there is
 *       any commits in the last 30 minutes, it'll turn the color to yellow.
 *
 *   3) l3-commit-threshold, lowest threshold in minutes notifies the commit.
 *       By default it monitors the commit in the last 60 minutes. If there is
 *       any commits in the last 60 minutes, it'll turn the color to yellow.
 *       if it's not matching above, it'll turn to green.
 */
healthbot {
    topic system.commit {
        rule commit-history {
            /*
             * Monitors the commit history. Notifies via the
             * dashboard colors when the commit executed within the specified interval.
             * The color is set to yellow if we see any commits in given time.
             * Otherwise the color is set to green
             *
             * Use sequence-number as key for rule.
             */
            keys sequence-number;
            synopsis "commit history detector";
            description "Pulls the commit history and displays it.";
            function commit-time {
                path last-commit.py;
                method check_commit_time;
                argument datetime {
                    mandatory;
                }
            }
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor last-commit {
                iAgent {
                    file last-commit.yml;
                    table CommitTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field client {
                sensor last-commit {
                    path client;
                }
                type string;
            }
            field comment {
                sensor last-commit {
                    path log;
                    data-if-missing {
                        value None;
                    }
                }
                type string;
            }
            field date-time {
                sensor last-commit {
                    path date-time;
                }
                type string;
            }
            field l1-threshold {
                constant {
                    value "{{l1-commit-threshold}}";
                }
                type integer;
            }
            field l2-threshold {
                constant {
                    value "{{l2-commit-threshold}}";
                }
                type integer;
            }
            field l3-threshold {
                constant {
                    value "{{l3-commit-threshold}}";
                }
                type integer;
            }
            field sequence-number {
                sensor last-commit {
                    path sequence-number;
                }
                type string;
            }
            field test {
                type string;
            }
            field time-diff {
                formula {
                    user-defined-function {
                        function-name commit-time;
                        argument datetime "$date-time";
                    }
                }
                type string;
            }
            field user {
                sensor last-commit {
                    path user;
                }
                type string;
            }
            /*
             * Anomaly detection logic.
             */
            trigger Commit-Time {
                frequency 1.5offset;
                term l1-threshold {
                    when {
                        less-than-or-equal-to "$time-diff" "$l1-threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "Commit $sequence-number was less than $l1-threshold minutes ago. User: $user Method: $client Comment: $comment";
                        }
                    }
                }
                term l2-threshold {
                    when {
                        less-than-or-equal-to "$time-diff" "$l2-threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "Commit $sequence-number was less than $l2-threshold minutes ago. User: $user Method: $client Comment: $comment";
                        }
                    }
                }
                term l3-threshold {
                    when {
                        less-than-or-equal-to "$time-diff" "$l3-threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "Commit $sequence-number was less than $l3-threshold minutes ago. User: $user Method: $client Comment: $comment";
                        }
                    }
                }
                term print-all-commits {
                    then {
                        status {
                            color green;
                            message "Commit $sequence-number by $user at $date-time via $client with the comment $comment";
                        }
                        next;
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable l1-commit-threshold {
                value 5;
                description "The lowest threshold in minutes to be notified of a commit. Default value, commit in the last 5 minutes.";
                type int;
            }
            variable l2-commit-threshold {
                value 30;
                description "The second threshold in minutes to be notified of a commit. Default value, commit in the last 30 minutes.";
                type int;
            }
            variable l3-commit-threshold {
                value 60;
                description "The third threshold in minutes to be notified of a commit. Default value, commit in the last 60 minutes.";
                type int;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                is-scaling-rule {
                    description "Checks commit history";
                }				
                supported-healthbot-version 3.1.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products EX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products PTX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                            products QFX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }
                        }
                    }
                }
            }
        }
    }
}
