## Last changed: 2018-05-10 12:06:48 UTC
iceberg:iceberg {
    topic chassis {
        description "This topic is for monitoring chassis components like fpc properties such as buffer, heap, cpu utilization and temperature";
        rule fpc {
            keys [ fpc fpc_property ];
            sensor components {
                open-config {
                    sensor-name /components/;
                    frequency 20s;
                }
            }
            field buffer_higher_threshold {
                constant {
                    value "{{buffer_higher_threshold}}";
                }
                type integer;
            }
            field buffer_lower_threshold {
                constant {
                    value "{{buffer_lower_threshold}}";
                }
                type integer;
            }
            field fpc {
                sensor components {
                    where "/components/component/@name =~ /{{fpc_expr}}/";
                    path "/components/component/@name";
                }
                type string;
            }
            field fpc_property {
                sensor components {
                    where "/components/component/properties/property/@name =~ /{{fpc_property_expr}}/";
                    path "/components/component/properties/property/@name";
                }
                type string;
            }
            field fpc_property_value {
                sensor components {
                    where "/components/component/properties/property/@name =~ /{{fpc_property_expr}}/";
                    path /components/component/properties/property/state/value;
                }
                type integer;
            }
            field fpc_temperature_higher_threshold {
                constant {
                    value "{{fpc_temperature_higher_threshold}}";
                }
                type integer;
            }
            field fpc_temperature_lower_threshold {
                constant {
                    value "{{fpc_temperature_lower_threshold}}";
                }
                type integer;
            }
            field heap_higher_threshold {
                constant {
                    value "{{heap_higher_threshold}}";
                }
                type integer;
            }
            field heap_lower_threshold {
                constant {
                    value "{{heap_lower_threshold}}";
                }
                type integer;
            }
            trigger buffer_memory {
                term skip {
                    when {
                        does-not-match-with "$fpc_property" memory-utilization-buffer;
                    }
                }
                term green {
                    when {
                        less-than-or-equal-to "$fpc_property_value" "$buffer_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "fpc memory buffer utilization is below lower threshold i.e ($fpc_property_value <= $buffer_lower_threshold)";
                        }
                    }
                }
                term yellow {
                    when {
                        less-than-or-equal-to "$fpc_property_value" "$buffer_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "fpc memory buffer utilization is medium i.e ($buffer_lower_threshold <= $fpc_property_value <= $buffer_higher_threshold)";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "fpc memory buffer utilization is above higher threshold i.e ($fpc_property_value > $buffer_higher_threshold)";
                        }
                    }
                }
            }
            trigger fpc_temperature {
                term skip {
                    when {
                        does-not-match-with "$fpc_property" temperature-intake;
                    }
                }
                term green {
                    when {
                        less-than "$fpc_property_value" "$fpc_temperature_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "fpc-temperature is below lower threshold i.e ($fpc_property_value <= $fpc_temperature_lower_threshold)";
                        }
                    }
                }
                term yellow {
                    when {
                        less-than "$fpc_property_value" "$fpc_temperature_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "fpc-temperature is medium i.e ($fpc_temperature_lower_threshold <= $fpc_property_value <= $fpc_temperature_higher_threshold)";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "fpc-temperature is above higher threshold i.e $fpc_property_value > $fpc_temperature_higher_threshold";
                        }
                    }
                }
            }
            trigger heap_memory {
                term skip {
                    when {
                        does-not-match-with "$fpc_property" memory-utilization-heap;
                    }
                }
                term green {
                    when {
                        less-than-or-equal-to "$fpc_property_value" "$heap_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "fpc memory heap utilization is below lower threshold i.e ($fpc_property_value <= $heap_lower_threshold)";
                        }
                    }
                }
                term yellow {
                    when {
                        less-than-or-equal-to "$fpc_property_value" "$heap_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "fpc memory heap utilization is medium i.e ($heap_lower_threshold <= $fpc_property_value <= $heap_higher_threshold)";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "fpc memory heap utilization is above higher threshold i.e ($fpc_property_value > $heap_higher_threshold)";
                        }
                    }
                }
            }
            variable buffer_higher_threshold {
                value 70;
                type int;
            }
            variable buffer_lower_threshold {
                value 25;
                type int;
            }
            variable fpc_expr {
                value "^FPC[0-9]*$";
                type string;
            }
            variable fpc_property_expr {
                value "memory-utilization-buffer|memory-utilization-heap|temperature-intake";
                type string;
            }
            variable fpc_temperature_higher_threshold {
                value 55;
                type int;
            }
            variable fpc_temperature_lower_threshold {
                value 45;
                type int;
            }
            variable heap_higher_threshold {
                value 70;
                type int;
            }
            variable heap_lower_threshold {
                value 25;
                type int;
            }
        }
        rule fpc_cpu {
            keys [ fpc fpc_property ];
            sensor components {
                open-config {
                    sensor-name /components/;
                    frequency 20s;
                }
            }
            field fpc {
                sensor components {
                    where "/components/component/@name =~ /{{fpc_expr}}/";
                    path "/components/component/@name";
                }
                type string;
            }
            field fpc_cpu_utilization_higher_threshold {
                constant {
                    value "{{fpc_cpu_utilization_higher_threshold}}";
                }
                type integer;
            }
            field fpc_cpu_utilization_lower_threshold {
                constant {
                    value "{{fpc_cpu_utilization_lower_threshold}}";
                }
                type integer;
            }
            field fpc_property {
                sensor components {
                    where "/components/component/properties/property/@name =~ /{{fpc_property_expr}}/";
                    path "/components/component/properties/property/@name";
                }
            }
            field fpc_property_value {
                sensor components {
                    where "/components/component/properties/property/@name =~ /{{fpc_property_expr}}/";
                    path /components/component/properties/property/state/value;
                }
            }
            trigger fpc_cpu_utilization {
                term skip {
                    when {
                        does-not-match-with "$fpc_property" cpu-utilization-total;
                    }
                }
                term green {
                    when {
                        less-than "$fpc_property_value" "$fpc_cpu_utilization_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "fpc-cpu-utilization is lesser than lower threshold i.e ($fpc_property_value <= $fpc_cpu_utilization_lower_threshold)";
                        }
                    }
                }
                term yellow {
                    when {
                        less-than "$fpc_property_value" "$fpc_cpu_utilization_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "fpc-cpu-utilization is medium i.e ($fpc_cpu_utilization_lower_threshold <= $fpc_property_value <= $fpc_cpu_utilization_higher_threshold)";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "fpc-cpu-utilization is greater than higher threshold i.e ($fpc_property_value > $fpc_cpu_utilization_higher_threshold)";
                        }
                    }
                }
            }
            variable fpc_cpu_utilization_higher_threshold {
                value 60;
                type int;
            }
            variable fpc_cpu_utilization_lower_threshold {
                value 20;
                type int;
            }
            variable fpc_expr {
                value "^FPC[0-9]:CPU$";
                type string;
            }
            variable fpc_property_expr {
                value cpu-utilization-total;
                type string;
            }
        }
        rule re {
            keys [ re_property route-engine ];
            function subtract {
                path system_sensors.py;
                method subtract;
                argument a {
                    mandatory;
                }
                argument b {
                    mandatory;
                }
            }
            sensor components {
                open-config {
                    sensor-name /components/;
                    frequency 20s;
                }
            }
            field cpu_temperature_higher_threshold {
                constant {
                    value "{{cpu_temperature_higher_threshold}}";
                }
                type integer;
            }
            field cpu_temperature_lower_threshold {
                constant {
                    value "{{cpu_temperature_lower_threshold}}";
                }
                type integer;
            }
            field cpu_utilization_higher_threshold {
                formula {
                    user-defined-function {
                        function-name subtract;
                        argument a 100;
                        argument b "{{cpu_utilization_higher_threshold}}";
                    }
                }
                type integer;
            }
            field cpu_utilization_lower_threshold {
                formula {
                    user-defined-function {
                        function-name subtract;
                        argument a 100;
                        argument b "{{cpu_utilization_lower_threshold}}";
                    }
                }
                type integer;
            }
            field re_property {
                sensor components {
                    where "/components/component/properties/property/@name =~ /{{re_property_expr}}/";
                    path "/components/component/properties/property/@name";
                }
            }
            field re_property_value {
                sensor components {
                    where "/components/component/properties/property/@name =~ /{{re_property_expr}}/";
                    path /components/component/properties/property/state/value;
                }
            }
            field re_temperature_higher_threshold {
                constant {
                    value "{{re_temperature_higher_threshold}}";
                }
                type integer;
            }
            field re_temperature_lower_threshold {
                constant {
                    value "{{re_temperature_lower_threshold}}";
                }
                type integer;
            }
            field route-engine {
                sensor components {
                    where "/components/component/@name =~ /{{re_expr}}/";
                    path "/components/component/@name";
                }
            }
            trigger cpu_temperature {
                term skip {
                    when {
                        does-not-match-with "$re_property" temperature-cpu;
                    }
                }
                term green {
                    when {
                        less-than-or-equal-to "$re_property_value" "$cpu_temperature_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "cpu-temperature is lesser than lower threshold i.e ($re_property_value <= $cpu_temperature_lower_threshold)";
                        }
                    }
                }
                term yellow {
                    when {
                        less-than "$re_property_value" "$cpu_temperature_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "cpu-temperature is medium i.e ($cpu_temperature_lower_threshold <= $re_property_value <= $cpu_temperature_higher_threshold)";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "cpu-temperature is greater than higher threshold i.e ($re_property_value > $cpu_temperature_higher_threshold)";
                        }
                    }
                }
            }
            trigger cpu_utilization {
                term skip {
                    when {
                        does-not-match-with "$re_property" cpu-utilization-idle;
                    }
                }
                term green {
                    when {
                        greater-than-or-equal-to "$re_property_value" "$cpu_utilization_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "cpu utilization is lesser than lower threshold";
                        }
                    }
                }
                term yellow {
                    when {
                        greater-than-or-equal-to "$re_property_value" "$cpu_utilization_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "cpu utilization is medium";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "cpu utilization is greater than higher threshold";
                        }
                    }
                }
            }
            trigger temperature {
                term skip {
                    when {
                        does-not-match-with "$re_property" temperature;
                    }
                }
                term green {
                    when {
                        less-than-or-equal-to "$re_property_value" "$re_temperature_lower_threshold";
                    }
                    then {
                        status {
                            color green;
                            message "re temperature is lesser than lower threshold i.e ($re_property_value <= $re_temperature_lower_threshold)";
                        }
                    }
                }
                term yellow {
                    when {
                        less-than-or-equal-to "$re_property_value" "$re_temperature_higher_threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "re temperature is medium i.e ($re_temperature_lower_threshold <= $re_property_value <= $re_temperature_higher_threshold)";
                        }
                    }
                }
                term red {
                    then {
                        status {
                            color red;
                            message "re temperature is greater than higher threshold i.e ($re_property_value > $re_temperature_higher_threshold)";
                        }
                    }
                }
            }
            variable cpu_temperature_higher_threshold {
                value 50;
                type int;
            }
            variable cpu_temperature_lower_threshold {
                value 35;
                type int;
            }
            variable cpu_utilization_higher_threshold {
                value 50;
                type int;
            }
            variable cpu_utilization_lower_threshold {
                value 20;
                type int;
            }
            variable re_expr {
                value "^Routing Engine[0-1]*$";
                type string;
            }
            variable re_property_expr {
                value "temperature-cpu|temperature|cpu-utilization-idle";
                type string;
            }
            variable re_temperature_higher_threshold {
                value 50;
                type int;
            }
            variable re_temperature_lower_threshold {
                value 40;
                type int;
            }
        }
    }
    playbook system-chassis-playbook {
        rules [ chassis/fpc chassis/fpc_cpu chassis/re ];
        synopsis "This playbook is for monitoring chassis components like fpc properties such as buffer, heap, cpu utilization and temperature";
    }
}
