/*
 * Detects VMhost cpu utilization and notifies when anomalies are found.
 *	
 * Two input control detection
 *
 * 1) cpu-name-variable, is a regular expression that matches the cpu that you
 *  would like to monitor.  By default it's '.*', which matches all cpu's.
 *  
 * 2) cpu-threshold-variable, is the threshold that causes the rule to report an
 *  anomaly. By default it's 80. This rule will set a dashboard color to red
 *  when *all* the cpu-utilisation-increases are greater than
 *  'cpu-threshold-variable' for 5 mins or more. If it sees any cpu-utilisation
 *  increase by more than threshold-variable, it'll turn the color to yellow,
 *  else color is set to green. 
 *  
 */
healthbot {
    topic system.vmhost {
        rule check-vmhost-cpu-iagent {
            keys cpu;
            synopsis "VMhost CPU analyzer";
            description "Collects VMhost  CPU statistics periodically and notifies anomalies when CPU utilization exceeds threshold";
            /*
             * Monitors the VMhost cpu utilization. Notifies via the 
             * dashboard color red when utilsation exceeds threshold for 5mins,
             * color yellow when utilsation exceeds threshold,
             * else the color is set to green.
             *
             * Function to find the cpu utilisation.
             * 
             */
            function difference {
                description "Functions derives cpu used percent";
                path generic_functions.py;
                method difference;
                argument num1 {
                    mandatory;
                }
                argument num2 {
                    mandatory;
                }
            }
            /*
             * Sensor configuration to collect date from the monitored device.
             */
            sensor cpuanalyzer {
                synopsis "iAgent sensor definition";
                description "Vmhost netconf sensor to collect data from network device";
                iAgent {
                    file vmhost_cpu_monitoring.yml;
                    table VMhostCPUTable;
                    frequency 60s;
                }
            }
            field cpu {
                sensor cpuanalyzer {
                    where "cpu =~ /{{cpu-name}}/";
                    path cpu;
                }
                type string;
                description "Vmhost CPU name";
            }
            field guest {
                sensor cpuanalyzer {
                    path guest;
                }
                type float;
                description "CPU percentage used by guest process";
            }
            field idle {
                sensor cpuanalyzer {
                    path idle;
                }
                type float;
                description "CPU idle percentage";
            }
            field iowait {
                sensor cpuanalyzer {
                    path iowait;
                }                               
                type float;
                description "CPU percentage used by I/O wait time process";
            }
            field irq {
                sensor cpuanalyzer {
                    path irq;
                }
                type float;
                description "CPU percentage used by interrupt request process";
            }
            field nice {
                sensor cpuanalyzer {
                    path nice;
                }
                type float;
                description "CPU percentage used by nice process";
            }
            field soft {
                sensor cpuanalyzer {
                    path soft;
                }
                type float;
                description "CPU percentage used by soft process";
            }
           field steal {
                sensor cpuanalyzer {
                    path steal;
                }
                type float;
                description "CPU percentage used by steal process";
            }
            field sys {
                sensor cpuanalyzer {
                    path sys;
                }
                type float;
                description "CPU percentage used by system processes";
            }
            field threshold {
                constant {
                    value "{{cpu-theshold}}";
                }
                type float;
                description "Static threshold of CPU";
            }
            field used_percent {
                 formula {
                     user-defined-function {
                         function-name difference;
                         argument num1 100;
                         argument num2 "$idle";
                     }
                 }
                 type float;
                 description "CPU utilization percentage ";
            }
            field usr {
                sensor cpuanalyzer {
                    path usr;
                }
                type float;
                description "Percentage of CPU used by the usr program";
            }
            /*
             * Anomaly detection logic.
             */
            trigger vmhost-cpu-usage {
                frequency 1.5offset;
                /*
                 * Sets color to red and sends out an anomaly notification when
                 * the vmhost all cpu utilisation is greater than threshold in 
                 * 5 mins time-range.
                 */
                term is-cpu-utilization-abnormal {
                    when {
                        greater-than-or-equal-to "$used_percent" "$threshold" {
                            time-range 5offset;
                            all;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Vmhost CPU(core-$cpu) utilization($used_percent%) exceeds high threshold($threshold) frequently";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification when
                 * the vmhost cpu utilisation is greater than threshold
                 */
                term is_cpu_utilization_spikes {
                    when {
                        greater-than-or-equal-to "$used_percent" "$threshold";
                    }
                    then {
                        status {
                            color yellow;
                            message "Vmhost CPU(core-$cpu) utilization($used_percent%) exceeded high threshold($threshold)";
                        }
                    }
                }
                /*
                 * Defaults color to green and sends notification.
                 */
                term cpu-utilization-normal {
                    then {
                        status {
                            color green;
                            message "Vmhost CPU(core-$cpu) utilization($used_percent%) is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable cpu-name {
                value .*;
                description "Enter system cpu core name to monitor. e.g. \"all\" for all cores or \"1\" for core 1, etc.";
                type string;                    
            }
            variable cpu-theshold {
                value 80.0;
                description "Enter CPU threshold.";
                type float;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                is-scaling-rule {
                    description "Collects VMhost  CPU statistics";
                }				
                supported-healthbot-version 3.0.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms MX240 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX480 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX960 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2010 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2020 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }						
                            products PTX {
                                platforms PTX500 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                                platforms PTX5000 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX1000 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX10000 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                            }							
                            products QFX {
                                platforms QFX10002 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms QFX10008 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms QFX10016 {
                                    releases 18.2R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }							
                        }
                    }
                }
            }
        }
    }
}
