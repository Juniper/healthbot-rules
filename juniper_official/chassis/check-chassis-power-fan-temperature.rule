/*
 * Moniters status of chassis temperature, fan and power and notifies when anomalies
 * are found.
 * Two input controls detection
 * 
 *  1) class-name variable, Name of the class,can be fan,power or temperature
 *     
 *  2) item-name variable, is the name of the item to monitor. 
 */
healthbot {
    topic chassis {
        rule check-chassis-power-fan-temperature {
            /*
             * Monitors chassis temperature, fan and power status. Notifies via 
             * the dashboard color green when the ok.
             * Otherwise the color is set to red to notify anomaly.
             *  
             * Uses class and name as keys for the rule.
             */		
            keys [ class name ];
            description "Moniters status of chassis fan, power and temperature are Ok";
            synopsis "Chassis Fan, Power and Temperature KPI";
            /*
             * Sensor configuration to get data from network devices
             */			
            sensor chassis-netconf {
                iAgent {
                    file FanTemperature.yml;
                    table FanTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using values in the yml file.
             * 
             */			
            field class {
                sensor chassis-netconf {
                    where "class =~ /{{class-name}}/";
                    path class;
                }
                type string;
                description "Type of item that is monitored";
            }
            field comment {
                sensor chassis-netconf {
                    path comment;
                }
                type string;
                description "RPM  of fan";
            }
            field name {
                sensor chassis-netconf {
                    where "name =~ /{{item-name}}/";
                    path name;
                }
                type string;
                description "Name of the item";
            }
            field status {
                sensor chassis-netconf {
                    path status;
                }
                type string;
                description "Status of the monitored item";
            }
            field temperature {
                sensor chassis-netconf {
                    path temperature;
                }
                type integer;
                description "Temperature of item";
            }
            /*
             * Anomaly detection logic.
             */			
            trigger fan-temperature-status {
                synopsis "Fan Temperature KPI";
                description "Sets health based on Fan Temperature";			
                frequency 1offset;
                /*
                 * Sets color to green when status is ok.
                 * 
                 */				
                term status-is-ok {
                    when {
                        matches-with "$status" ok {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "Status of $class \"$name\" is ok";
                        }
                    }
                }
                /*
                 * Sets color to red when status is not equal to ok.
                 * 
                 */				
                term status-is-not-ok {
                    then {
                        status {
                            color red;
                            message "Status of $class \"$name\" is not ok";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */			
            variable class-name {
                value .*;
                description "Enter Class as Fan, Power or Temperature";
                type string;
            }
            variable item-name {
                value .*;
                description "Enter Name of the item to moniter";
                type string;
            }			
            rule-properties {
                version 1;
                contributor juniper;
                category basic;
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }						
                    }
                }
                helper-files other {
                    list-of-files FanTemperature.yml;
                }
            }			
        }
    }
}	
	