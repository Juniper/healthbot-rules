/*
 * Monitors Cyclic Redundancy,In-Fragment and Jabber frames errors and notifies when anomalies are found
 * Two inputs control detection
 *
 *   1) interface-name-variable, matches the interfaces
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all interfaces. Use something like 'ge.*' to match only gigabit
 *      ethernet interfaces. 
 *
 *   2) discard-count, usef to check if the error count is increasing.
 *      By default it's 1.
 * 
 * 
 */
healthbot {
    topic interfaces {
        rule check-ethernet-crc-framing-errors {
            /*
             * Monitors CRC,In-Fragment and Jabber frame errors and notifies via dashboard, red color 
             * when threshold is exceeded else green
			 *
             * Use interface-name-variable as key for rule.
             */
            keys interface-name;
            synopsis "Ethernet CRC and Frames Error KPI's";
            description "Collects CRC and Frames errors and notifies when count increases";
            /*
             * Sensor configuration to get data from network devices.
             */			
            sensor interface-sensor-oc {
                synopsis "open-config sensor definition";
                description "Collects data from network device by subscribing to oc sensor paths";
                open-config {
                    sensor-name /interfaces/interface/ethernet;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */				
            field crc-errors {
                sensor interface-sensor-oc {
                    path /interfaces/interface/ethernet/state/counters/in-crc-errors;
					zero-suppression;
                }
                type integer;
                description "Cyclic Redundancy Check errors";
            }
            field drop-threshold {
                constant {
                    value "{{discard-count}}";
                }
                type integer;
                description "Drop count increase threshold";
            }
            field fragment-frames {
                sensor interface-sensor-oc {
                    path /interfaces/interface/ethernet/state/counters/in-fragment-frames;
					zero-suppression;
                }
                type integer;
                description "fragement frames";
            }
            field interface-name {
                sensor interface-sensor-oc {
                    where "/interfaces/interface/@name =~ /{{interface-name-variable}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field jabber-frames {
                sensor interface-sensor-oc {
                    path /interfaces/interface/ethernet/state/counters/in-jabber-frames;
					zero-suppression;
                }
                type integer;
                description "Jabber frames";
            }
            /*
             * Anomaly detection logic.
             */			
            trigger cyclic-redundancy-check-errors {
                synopsis "PFE data error discards KPI";
                description "Sets health based on the change in PFE data error discard count";
                frequency 1.25offset;
                /*
                 * Sets color to red when the crc error count is increasing at least by drop threshold value
                 */				
                term is-crc-error-inreasing {
                    when {
                        increasing-at-least-by-value "$crc-errors" {
                            value "$drop-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Increasing crc error count $crc-errors on $interface-name";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */				
                term no-crc-error-increasing {
                    then {
                        status {
                            color green;
                            message "crc errors count $crc-errors on $interface-name is normal";
                        }
                    }
                }
            }
            trigger fragment-frames {
                synopsis "PFE bad route discards KPI";
                description "Sets health based on the change in PFE bad route discard count";
                frequency 1.25offset;
                /*
                 * Sets color to red when the fragment frame count is increasing at least by drop threshold value
                 */				
                term is-fragment-frames-increasing {
                    when {
                        increasing-at-least-by-value "$fragment-frames" {
                            value "$drop-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Increasing fragment frames count $fragment-frames on $interface-name";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */				
                term no-fragment-frames-increasing {
                    then {
                        status {
                            color green;
                            message "fragment frames count $fragment-frames on $interface-name is normal";
                        }
                    }
                }
            }
            trigger jabber-frames {
                synopsis "PFE bits to test discards KPI";
                description "Sets health based on the change in PFE bits to test discard count";
                frequency 1.25offset;
                /*
                 * Sets color to red when the jabber frames count is increasing at least by drop threshold value
                 */				
                term is-jabber-frames-increasing {
                    when {
                        increasing-at-least-by-value "$jabber-frames" {
                            value "$drop-threshold";
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Increasing jabber-frames count $jabber-frames on $interface-name";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */				
                term no-jabber-frames-increasing {
                    then {
                        status {
                            color green;
                            message "jabber-frames count $jabber-frames on $interface-name is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */			
            variable discard-count {
                value 1;
                description "Discard threshold: Number of discards increase between metrics, before we report anomaly";
                type int;
            }
            variable interface-name-variable {
                value .*;
                description "Interfaces to be monitored";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category basic;
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                         operating-system junosEvolved {
                             products ACX {
                                 platforms All {
                                     releases 22.3R1 {
                                         release-support min-supported-release;
                                     }
                                 }
                             }
                         }						
                    }
                }
            }
		}
    }
}	

			 