/*
 * Monitors sub interface state and input/output traffic,it notifies when anomalies are found.
 * Four inputs control detection
 *
 *   1) interface-name, is a regular expression that matches the interfaces
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all interfaces. Use something like 'ge.*' to match only gigabit
 *      ethernet interfaces. 
 *
 *   2) ifl-no, is a regular expression that matches the IFL index number that
 *      you would like to monitor.  By default it's '.*', which matches all
 *      interfaces. Use something like '0-10*' to match only 0 to 10 IFLs.
 *
 * 
 *   3) high-threshold, is the threshold that causes the rule to 
 *      report an anomaly.  By default it's 80. This rule will 
 *      set a dashboard color to red when *all* the input traffic is above 
 *      threshold for 180 seconds period. 
 *
 *   4) low-threshold, is the threshold that causes the rule to
 *      report an anomaly.  By default it's 50. This rule will
 *      set a dashboard color to yellow when *all* the input traffic is above
 *      threshold for 180 seconds period, otherwise color is set to green.
 *
 */
healthbot {
    topic interfaces {
        rule check-ifl-state-in-out-traffic {
            synopsis "Sub Interface input traffic analyzer.";
            description "Collects input/output traffic (in-octets/out-octets) periodically and notifies in case of traffic is above threshold";
            /*
             * Monitors the interface state and input/output traffic.Notifies via the dashboard
             * colors when the traffic is above {{high-threshold}}
             * for every collected metric during a 60s time range (red).
             * The color is set to yellow when the traffic is above
             * {{low-threshold}} for every collected metric during
             * a 60s. Otherwise the color is set to green.
			 * If ifl operational state is down red alarm is shown else it is green. 
             *
             * Use interface and sub-interface name as keys for rule.
             */
            keys [interface-name sub-interface-index];
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces-oc {
                synopsis "Sub Interface open-config sensor definition";
                description "Sub Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/interface/subinterfaces/subinterface/state;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field in-octets {
                sensor interfaces-oc {
                    path "/interfaces/interface/subinterfaces/subinterface/state/counters/in-octets";
                    zero-suppression;
                }
                type integer;
                description "Sub Interface statistics counter (in-octets) value.";
            }
            field out-octets {
                sensor interfaces-oc {
                    path "/interfaces/interface/subinterfaces/subinterface/state/counters/out-octets";
                    zero-suppression;
                }
                type integer;
                description "Sub Interface statistics counter (out-octets) value.";
            }			
            field interface-name {
                sensor interfaces-oc {
                    where "/interfaces/interface/@name =~ /{{interface-name}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field sub-interface-index {
                sensor interfaces-oc {
                    where "/interfaces/interface/subinterfaces/subinterface/@index =~ /{{ifl-no}}/";
                    path "/interfaces/interface/subinterfaces/subinterface/@index";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field ifl-admin-status {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/admin-status;
                }
                type string;
                description "Subinterface admin status";
            }
            field ifl-oper-status {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/oper-status;
                }
                type string;
                description "Subinterface operational status";
            }
            field in-mbps {
                formula {
                    rate-of-change {
                        field-name "$in-octets";
                        multiplication-factor 0.000001;
                    }
                }
                type float;
                description "Derives mbps based (current in-octets - previous in-octets) divided by (current time - previous time) divided by mbps multiplication factor";
            }
            field in-util {
                formula {
                    eval {
                        expression "($in-mbps / $speed) * 100";
                    }
                }
                type float;
                description "Utilization in percentage which derived based on mbps and interface speed";
            }
            field out-mbps {
                formula {
                    rate-of-change {
                        field-name "$out-octets";
                        multiplication-factor 0.000001;
                    }
                }
                type float;
                description "Derives mbps based (current out-octets - previous out-octets) divided by (current time - previous time) divided by mbps multiplication factor";
            }
            field out-util {
                formula {
                    eval {
                        expression "($out-mbps / $speed) * 100";
                    }
                }
                type float;
                description "Utilization in percentage which derived based on mbps and interface speed";
            }			
            /*
             * Fields defined with variables and constant values
             */
            field high-threshold {
                constant {
                    value "{{high-threshold}}";
                }
                type integer;
                description "Traffic high threshold.";
            }
            field low-threshold {
                constant {
                    value "{{low-threshold}}";
                }
                type integer;
                description "Traffic low threshold.";
            }
            /*
             * Anomaly detection logic.
             */
            trigger ifl-input-traffic {
                synopsis "Sub-Interface input traffic kpi";
                description "Sets health based on input traffic exceeding threshold";
                /*
                 * Sets color to red and sends out an anomaly notification
                 * when the interface input traffic ($in-octets-stats-value) is
                 * above high threshold (in-octets-high-threshold) continuosly for
                 * 4 offset time-range
                 */
                frequency 2offset;
                term is-interface-in-traffic-abnormal {
                    when {
                        increasing-at-least-by-value "$in-util" {
                            value "$high-threshold";
                            time-range 3offset;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index input traffic:$in-mbps mbps and $in-util % is above high threshold";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the interface input traffic($in-octets-stats-value) is
                 * above low threshold (in-octets-low-threshold) continuosly for
                 * 4 offset time-range
                 */

                term is-interface-in-traffic-median {
                    when {
                        increasing-at-least-by-value "$in-util" {
                            value "$low-threshold";
                            time-range 3offset;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name.$sub-interface-index input traffic:$in-mbps mbps and $in-util % is in medium range)";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term interface-in-traffic-normal {
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index input traffic:$in-mbps mbps and $in-util % is normal";
                        }
                    }
                }
            }
            trigger ifl-output-traffic {
                synopsis "Sub Interface output traffic kpi";
                description "Sets health based on output traffic exceed threshold.";
                /*
                 * Sets color to red and sends out an anomaly notification
                 * when the interface output traffic ($out-octets-stats-value) is
                 * above high threshold (out-octets-high-threshold) continuosly for
                 * 4 offset time-range
                 */
                frequency 2offset;
                term is-interface-stats-abnormal {
                    when {
                        increasing-at-least-by-value "$out-util" {
                            value "$high-threshold";
                            time-range 3offset;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index output traffic:$out-mbps mbps and $out-util % is above high threshold";
                        }
                    }
                }
                /*
                 * Sets color to yellow and sends out an anomaly notification
                 * when the interface output traffic($out-octets-stats-value) is
                 * above low threshold (out-octets-low-threshold) continuosly for
                 * 4 offset time-range
                 */
                term is-interface-stats-median {
                    when {
                        increasing-at-least-by-value "$out-util" {
                            value "$low-threshold";
                            time-range 3offset;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$interface-name.$sub-interface-index output traffic:$out-mbps mbps and $out-util % is in medium range";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */
                term is-interface-stats-normal {
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index output traffic:$out-mbps mbps and $out-util % is normal";
                        }
                    }
                }
            }
            trigger ifl-status {
                synopsis "Sub-interface status check kpi";
                description "Sets health based on ifl state";
                frequency 1offset;
                /*
                 * Sets dashboard color to red when sub-interface operational state is down
                 */				
                term is-ifl-down {
                    when {
                        matches-with "$ifl-oper-status" DOWN {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index status $ifl-oper-status";
                        }
                    }
                }
                /*
                 * Defaults color to green.
                 */				
                term ifl-up {
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index status $ifl-oper-status";
                        }
                    }
                }
            }			
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable high-threshold {
                value 80;
                description "Interface input traffic high threshold value in percentage";
                type int;
            }
            variable low-threshold {
                value 50;
                description "Interface output traffic high threshold value in percentage";
                type int;
            }			 
            variable interface-name {
                value ".*";
                description "Interfaces to be monitored, regular expression, eg 'ge-.*'";
                type string;
            }
            variable ifl-no {
                value ".*";
                description "Sub interfaces index to be monitored, regular expression, eg '0-10'";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category basic;
                is-scaling-rule {
                    description "Fields:[ interface-name sub-interface-index ]; Directly impacted by number of interfaces and sub-interfaces in each network device";
                }				
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junos {
                            products MX {
                                platforms MX240 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX480 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX960 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2010 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX2020 {
                                    releases 16.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms MX150 {
                                    releases 17.3R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                            products PTX {
                                platforms PTX5000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX1000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms PTX10000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                            products QFX {
                                platforms QFX10000 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms QFX5200 {
                                    releases 17.2R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms QFX5100 {
                                    releases 18.1R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms QFX5120-48Y {
                                    releases 18.3R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                            products EX {
                                platforms EX9200 {
                                    releases 17.3R1 {
                                        release-support min-supported-release;
                                    }
                                }							
                                platforms EX4650 {
                                    releases 18.3R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms EX4600 {
                                    releases 18.4R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                        }
                        operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }						
                    }
                }
            }
        }
    }
}