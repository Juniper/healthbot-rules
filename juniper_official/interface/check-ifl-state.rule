/*
 * Monitors sub interface state and notifies when anomalies are found.
 * Two inputs control detection
 *
 *   1) ifd-name, is a regular expression that matches the interfaces
 *      that you would like to monitor.  By default it's '.*', which matches
 *      all interfaces. Use something like 'ge.*' to match only gigabit
 *      ethernet interfaces. 
 *
 *   2) ifl-no, is a regular expression that matches the IFL index number that
 *      you would like to monitor.  By default it's '.*', which matches all
 *      interfaces. Use something like '0-10*' to match only 0 to 10 IFLs.
 *
 */
healthbot {
    topic interfaces {
        rule check-ifl-state {
            synopsis "Sub Interface input traffic analyzer.";
            description "Collects input/output traffic (in-octets/out-octets) periodically and notifies in case of traffic is above threshold";
            /*
             * Monitors the interface state. If ifl operational state is down 
             * red alarm is shown else it is green. 
             *
             * Use interface and sub-interface name as keys for rule.
             */
            keys [interface-name sub-interface-index];
            /*
             * Sensor configuration to get data from network devices.
             */
            sensor interfaces-oc {
                synopsis "Sub Interface open-config sensor definition";
                description "Sub Interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/interface/subinterfaces/subinterface/state;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
			field interface-name {
                sensor interfaces-oc {
                    where "/interfaces/interface/@name =~ /{{ifd-name}}/";
                    path "/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field sub-interface-index {
                sensor interfaces-oc {
                    where "/interfaces/interface/subinterfaces/subinterface/@index =~ /{{ifl-no}}/";
                    path "/interfaces/interface/subinterfaces/subinterface/@index";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field ifl-admin-status {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/admin-status;
                }
                type string;
                description "Subinterface admin status";
            }
            field ifl-oper-status {
                sensor interfaces-oc {
                    path /interfaces/interface/subinterfaces/subinterface/state/oper-status;
                }
                type string;
                description "Subinterface operational status";
            }		      
            /*
             * Anomaly detection logic.
             */
            trigger ifl-state {
                synopsis "Sub-interface status check kpi";
                description "Sets health based on ifl state";
                frequency 1offset;
                /*
                 * Sets color to green when both admin and link state is UP
                 */			
                term is-ifl-up{
                    when {
                        matches-with "$ifl-oper-status" UP;
                        matches-with "$ifl-admin-status" UP;
                    }
                    then {
                        status {
                            color green;
                            message "$interface-name.$sub-interface-index status $ifl-oper-status";
                        }
                    }
                }
                /*
                 * Defaults color to red.
                 */				
                term ifl-up {
                	when {
                        matches-with "$ifl-oper-status" DOWN;
                        matches-with "$ifl-admin-status" UP;
                    }
                    then {
                        status {
                            color red;
                            message "$interface-name.$sub-interface-index status $ifl-oper-status";
                        }
                    }
                }
            }			
            variable ifd-name {
                value ".*";
                description "Interfaces to be monitored, regular expression, eg 'ge-.*'";
                type string;
            }
            variable ifl-no {
                value ".*";
                description "Sub interfaces index to be monitored, regular expression, eg '0-10'";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category basic;
                is-scaling-rule {
                    description "Fields: interface-name ; Directly impacted by number of interfaces and IFLs in each network device";
                }				
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                }
            }
    	}	
    }
}