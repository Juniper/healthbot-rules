/*
 * Detects LLDP (session) state changes and notifies when anomalies are found.
 *
 * Requirement 455 - https://paragon-automation.atlassian.net/browse/REQ-455
 *
 */
healthbot {
    topic lldp {
        description "Monitors lldp information i.e. neighbor state and notify anomalies";
        synopsis "LLDP session statistics analyzer";
        rule check-lldp-session {
            description "Collects lldp session state periodically and notify anomaly when state is down";
            synopsis "LLDP session state analyzer";
            /*
             * Monitors the LLDP session state. color is set to red when state is down.
             * Otherwise the color is set to green.
             * 
             * Use interface name as key for rule.
             */
            keys interface-name;
            /*
             * Sensor configuration to get data from network devices
             */
            sensor lldp-sensor {
                synopsis "LLDP open-config sensor definition";
                description "/lldp open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /lldp/;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */
            field if-lldp-state {
                sensor lldp-sensor {
                    path /lldp/interfaces/interface/state/enabled;
                }
                type string;
                description "Local interface LLDP state";
            }
            field interface-name {
                sensor lldp-sensor {
                    where "/lldp/interfaces/interface/@name =~ /{{interface-name}}/";
                    path "/lldp/interfaces/interface/@name";
                }
                type string;
                description "Interfaces to be monitored";
            }
            field neighbor-state {
                reference {
                    path "/topic[topic-name='lldp']/rule[rule-name='get-lldp-state']/field[interface-name='$interface-name']/neighbor-capability-state";
                    time-range 60s;
                }
                type string;
                description "LLDP neighbor state";
            }
            /*
             * Anomaly detection logic.
             */
            trigger lldp-session-state {
                synopsis "LLDP state KPI";
                description "Sets health based on lldp session state changes and notify anomaly.";
                frequency 1offset;
                /*
                 * Sets color to green when LLDP neighbor state is true.
                 */
                term is-lldp-session-up {
                    when {
                        matches-with "$neighbor-state" true;
                        matches-with "$if-lldp-state" true;
                    }
                    then {
                        status {
                            color green;
                            message "Interface $interface-name lldp session is up";
                        }
                    }
                }
                /*
                 * Defaults color to red and notify anomaly.
                 */
                term lldp-session-down {
                    then {
                        status {
                            color red;
                            message "Interface-$interface-name lldp session down";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable interface-name {
                value ".*";
                type string;
                description "Interface names to monitor, regular expression, eg 'ge-.*'";
           }
           rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 4.0.0;
                supported-devices {
                    juniper {
                         operating-system junos {
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                         }
                         operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }						
                    }
                }
            }
        }
    }
}
