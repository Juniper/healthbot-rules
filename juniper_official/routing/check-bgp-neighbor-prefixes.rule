/*
 * Collects BGP neighbor advertised and received prefix count for ML and plotting.
 *
 */
 healthbot {
    topic routing.bgp {
        rule check-bgp-neighbor-prefixes {
            keys [ address-family peer-address ];
            synopsis "BGP neighbor prefix collector";
            description "Collects BGP neighbor advertised and received prefix count periodically to plot the data";
            sensor bgp-netconf {
                synopsis "Netconf sensor definition";
                iAgent {
                    file bgp_neighbor.yml;
                    table bgpNeighborTable;
                    frequency 180s;
                }
            }
            sensor bgp-oc {
                synopsis "Open-config sensor definition";
                open-config {
                    sensor-name /network-instances/network-instance/protocols/protocol/bgp/neighbors;
                    frequency 60s;
                }
            }
            field address-family {
                sensor bgp-netconf {
                    where "name =~ /{{address-table-var}}/";
                    path name;
                }
                sensor bgp-oc {
                    where "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/@afi-safi-name =~ /{{address-table-var}}/";
                    path "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/@afi-safi-name";
                }
                type string;
                description "Prefix address family";
            }
            field advertised-prefixes {
                sensor bgp-netconf {
                    path advertised-prefix-count;
                }
                sensor bgp-oc {
                    path /network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/state/prefixes/sent;
                }
                type integer;
                description "Neighbor advertised prefixes";
            }
            field peer-address {
                sensor bgp-netconf {
                    where "peer-address =~ /{{neighbors}}/";
                    path peer-address;
                }
                sensor bgp-oc {
                    where "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address =~ /{{neighbors}}/";
                    path "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address";
                }
                type string;
                description "Sensor field to store peer address";
            }
            field received-prefixes {
                sensor bgp-netconf {
                    path received-prefix-count;
                }
                sensor bgp-oc {
                    path /network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/state/prefixes/received;
                }
                type integer;
                description "Neighbor received prefixes";
            }
            field advertised-route-count-threshold {
                constant {
                    value "{{max-advertised-route-count-threshold}}";
                }
                type integer;
                description "Advertised routes count increase threshold";
            }
            field received-route-count-threshold {
                constant {
                    value "{{max-received-route-count-threshold}}";
                }
                type integer;
                description "Received routes count increase threshold";
            }
            /*
             * Anomaly detection logic.
             */			
            trigger advertised-routes {
                synopsis "BGP max advertised routes KPI";
                description "Sets health based on increase in advertised routes on neighbor session";
                frequency 1offset;
                /*
                 * Sets color to green when advertised-routes is less than or equal to threshold
                 */				
                term route-count-normal {
                    when {
                        less-than-or-equal-to "$advertised-routes" "$advertised-route-count-threshold";
                    }	
                    then {
                        status {                    
                            color green;
                            message "Advertised route count($advertised-routes) is normal";
                        }
                    }
                }
                /*
                 * Sets color to red when advertised-routes is greater than threshold
                 */				
                term above-static-threshold {
                    when {
                        greater-than-or-equal-to "$advertised-routes" "$advertised-route-count-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Advertised route count($advertised-routes) exceed static threshold";
                        }
                    }
                }
            }
            trigger received-routes {
                synopsis "BGP max received routes KPI";
                description "Sets health based on increase in received routes on neighbor session";
                frequency 1offset;
                /*
                 * Sets color to green when received-routes is less than or equal to threshold
                 */				
                term route-count-normal {
                    when {
                        less-than-or-equal-to "$received-routes" "$received-route-count-threshold";
                    }	
                    then {
                        status {                    
                            color green;
                            message "Received route count($received-routes) is normal";
                        }
                    }
                }
                /*
                 * Sets color to red when received-routes is greater than threshold
                 */				
                term above-static-threshold {
                    when {
                        greater-than-or-equal-to "$received-routes" "$received-route-count-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "Received route count($received-routes) exceed static threshold";
                        }
                    }
                }
            }
            variable max-received-route-count-threshold {
                value 10000;
                description "BGP neighbor session received routes threshold: Number of received route count increase between metrics, before we report anomaly";
                type int;
            }
            variable max-advertised-route-count-threshold {
                value 10000;
                description "BGP neighbor session advertised routes threshold: Number of advertised route count increase between metrics, before we report anomaly";
                type int;
            }			
            variable address-table-var {
                value .*;
                description "Address table specific routes, regular expression, e.g. 'IPV4_UNICAST'";
                type string;
            }
            variable neighbors {
                value .*;
                description "BGP neighbor addresses to monitor, regular expression, e.g. '172.16.*'";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category comprehensive;
                is-scaling-rule {
                    description "Fields: peer-address ; Directly impacted by number of bgp neighbors in each network device";
                }
                supported-healthbot-version 2.1.0;
                supported-devices {
                    sensors bgp-oc;
                    juniper {
                        operating-system junos {
                            products EX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                            products MX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                            products PTX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                            products QFX {
                                platforms All {
                                    releases 15.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                            products ACX {
                                platforms All {
                                    releases 22.1R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
