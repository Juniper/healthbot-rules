/*
 * Monitors NTP status and notifies when anomalies are found.
 * 
 * Four inputs control detection
 *
 *   1) "milli-seconds-high-threshold is high milli-seconds-threshold.
 *      By default it's '0.7'.
 *
 *   1) "milli-seconds-low-threshold is low milli-seconds-threshold.
 *      By default it's '-0.7'. 
 * 
 *   3) "root-delay-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 400.
 *
 *   4) "root-dispersion-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 50.
 *
 */
healthbot {
    topic hardware.system {
        rule check-ntp-status {
            /*
             * Monitors the NTP Offset,Root Delay and Root Dispersion. 
			 *
             * Use routing-engine as key for rule.
             */
			keys reference-id; 
            synopsis "NTP Sync KPI";
            description "Monitors NTP Status";
            sensor ntp-status {
                iAgent {
                    file ntpStatusTable.yml;
                    table ntpStatusTable;
                    frequency 60s;
                }
            }
            field clock-jitter {
                sensor ntp-status {
                    path clk-jitter;
                }
                type float;
                description "Indicates the magnitude of jitter, in milliseconds, between several time queries.";
            }
            field milli-seconds-high-threshold {
                constant {
                    value "{{milli-seconds-high-threshold}}";
                }
                type float;
                description "High Threshold value in milli-seconds";
            }
            field milli-seconds-low-threshold {
                constant {
                    value "{{milli-seconds-low-threshold}}";
                }
                type float;
                description "Low Threshold value in milli-seconds";
            }
            field offset {
                sensor ntp-status {
                    path offset;
                }
                type float;
                description "Current estimated offset of the peer, in milliseconds. Indicates the time difference between the reference clock and the local clock.";
            }
            field precision {
                sensor ntp-status {
                    path precision;
                }
                type string;
                description "The precision of the peer clock, how precisely the frequency and time can be maintained with this particular timekeeping system.";
            }
            field reference-id {
                sensor ntp-status {
                    path refid;
                }
                type string;
                description "Reference identifier of the remote peer. If the reference identifier is not known, this field shows a value of 0.0.0.0.";
            }
            field reference-time {
                sensor ntp-status {
                    path reftime;
                }
                type string;
                description "The local time, in timestamp format, when the local clock was last updated. If the local clock has never been synchronized, the value is zero.";
            }
            field root-delay {
                sensor ntp-status {
                    path rootdelay;
                }
                type float;
                description "The total roundtrip delay to the primary reference source, in seconds.";
            }
            field root-delay-threshold {
                constant {
                    value "{{root-delay-threshold}}";
                }
                type float;
                description "Root delay threshold value to compare";
            }
            field root-dispersion {
                sensor ntp-status {
                    path rootdisp;
                }
                type float;
                description "The maximum error relative to the primary reference source, in seconds.";
            }
            field root-dispersion-threshold {
                constant {
                    value "{{root-dispersion-threshold}}";
                }
                type float;
                description "Root Dispersion Threshold to compare";
            }
            field stratum {
                sensor ntp-status {
                    path stratum;
                }
                type integer;
                description "The stratum of the peer server. ";
            }
            trigger offset {
                frequency 1offset;
                term offset-is-within-limit {
                    when {
                        greater-than "$offset" "$milli-seconds-low-threshold";
                        less-than "$offset" "$milli-seconds-high-threshold";
                    }
                    then {
                        status {
                            color green;
                            message "NTP Offset \"$offset\" is within limits for $reference-id";
                        }
                    }
                }
                term offset-is-greater-than-high-threshold {
                    when {
                        greater-than-or-equal-to "$offset" "$milli-seconds-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "NTP Offset \"$offset\" is outside limit for $reference-id";
                        }
                        next;
                    }
                }
                term offset-is-lesser-than-low-threshold {
                    when {
                        less-than-or-equal-to "$offset" "$milli-seconds-low-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "NTP Offset \"$offset\" is outside limit for $reference-id";
                        }
                    }
                }
            }
            trigger root-delay {
                frequency 1offset;
                term does-not-exceed-threshold {
                    when {
                        less-than "$root-delay" "$root-delay-threshold";
                    }
                    then {
                        status {
                            color green;
                            message "root-delay \"$root-delay\" is within limit for $reference-id";
                        }
                    }
                }
                term exceed-threshold {
                    when {
                        greater-than-or-equal-to "$root-delay" "$root-delay-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "root-delay \"$root-delay\" is exceeding for $reference-id";
                        }
                    }
                }
            }
            trigger root-dispersion {
                frequency 1offset;
                term does-not-exceed-threshold {
                    when {
                        less-than "$root-dispersion" "$root-dispersion-threshold";
                    }
                    then {
                        status {
                            color green;
                            message "root-dispersion $root-dispersion is within limit for $reference-id";
                        }
                    }
                }
                term exceeds-threshold {
                    when {
                        greater-than-or-equal-to "$root-dispersion" "$root-dispersion-threshold";
                    }
                    then {
                        status {
                            color red;
                            message "root-dispersion $root-dispersion is exceeding for $reference-id";
                        }
                    }
                }
            }
            variable milli-seconds-high-threshold {
                value 0.7;
                description "high milli-seconds-threshold can be input while deploying";
                type float;
            }
            variable milli-seconds-low-threshold {
                value -0.7;
                description "low milli-seconds-threshold can be input while deploying";
                type float;
            }
            variable root-delay-threshold {
                value 400.00;
                description "Root Delay Threshold can be input while deploying";
                type float;
            }
            variable root-dispersion-threshold {
                value 50.00;
                description "Root Dispersion Threshold can be input while deploying";
                type float;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files ntpStatusTable.yml;
                }
            }			
		}	
    }
}	