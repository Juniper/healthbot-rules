/*
 * Monitors system cpu, memory utlilization and notifies when anomalies are found.
 * 
 * Four inputs control detection
 *
 *   1) "re-slot-no" is a regular expression that matches the routing engine
 *      that you would like to monitor.  By default it's '0-1', which matches
 *      both the routing engines. Use something like '0' to match only
 *      routing engine 0.
 *
 *   2) "memory-buffer-re-high-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 75. 
 * 
 *   3) "re-cpu-high-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 80.
 *
 *   4) "re-cpu-low-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 50.
 *
 *   5) "memory-buffer-re-low-threshold" is the threshold that causes the
 *      rule to report an anomaly. By default it's 50. 
 */
healthbot {
    topic hardware.system {
        rule check-system-cpu-memory {
            /*
             * Monitors the system cpu, memory utlilization and notifies via dashboard, red color 
             * when threshold is exceeded else green. 
			 *
             * Use routing-engine as key for rule.
             */		
            keys routing-engine;
            synopsis "CPU and Memory analyzer";
            description "Collects system RE CPU and Memory statistics periodically and notifies anomalies";
            /*
             * Sensor configuration to get data from network devices.
             */			 
            sensor components-oc {
                synopsis "system cpu and memory KPI";
                description "/components open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /components/component;
                    frequency 60s;
                }
            }
            /*
             * Fields defined using sensor path. Map the longer sensor names
             * to the shorter field names used in the rules.
             */				 
            field re-cpu-utilization {
                sensor components-oc {
                    where "/components/component/properties/property/@name == 'cpu-utilization-total'";
                    path /components/component/properties/property/state/value;
                    zero-suppression;
                }
                type float;
                description "Collects RE CPU utilization";
            }
            field re-cpu-utilization-anomaly {
                formula {
                    jaiml-anomaly-detection {
                        field-name "$re-cpu-utilization";
                    }
                }
                type integer;
                description "JAIML anomaly detection on re-cpu-utilization field";
            }
            field re-cpu-utilization-high-threshold {
                constant {
                    value "{{re-cpu-high-threshold}}";
                }
                type integer;
                description "RE CPU utilization high threshold";
            }
            field re-cpu-utilization-low-threshold {
                constant {
                    value "{{re-cpu-low-threshold}}";
                }
                type integer;
                description "RE CPU utilization low threshold";
            }
            field re-memory-buffer {
                sensor components-oc {
                    where "/components/component/properties/property/@name == 'memory-utilization-buffer'";
                    path /components/component/properties/property/state/value;
                    zero-suppression;
                }
                type integer;
                description "RE system memory buffer value";
            }
            field re-memory-buffer-anomaly {
                formula {
                    jaiml-anomaly-detection {
                        field-name "$re-memory-buffer";
                    }
                }
                type integer;
                description "JAIML anomaly detection on re-memory-buffer field";
            }
            field re-memory-buffer-high-threshold {
                constant {
                    value "{{memory-buffer-re-high-threshold}}";
                }
                type integer;
                description "RE system memory buffer high threshold";
            }
            field re-memory-buffer-low-threshold {
                constant {
                    value "{{memory-buffer-re-low-threshold}}";
                }
                type integer;
                description "RE system memory buffer low threshold";
            }
            field routing-engine {
                sensor components-oc {
                    where "/components/component/@name =~ /^Routing Engine[{{re-slot-no}}]$|^RE[{{re-slot-no}}]$/";
                    path "/components/component/@name";
                }
                description "RE name to monitor";
            }
            /*
            * Anomaly detection logic.
            */
             trigger routing-engine-cpu-utilization {
                 synopsis "Routing engine CPU KPI";
                 description "Sets health based on increase in RE CPU utilization";
                 frequency 1offset;
                /*
                 * Sets color to green when re-cpu utilization is less-than re-cpu-utilization-low-threshold
                 */				 
                 term re-cpu-utilization-normal {
                     when {
                         less-than "$re-cpu-utilization" "$re-cpu-utilization-low-threshold";
                         less-than-or-equal-to "$re-cpu-utilization-anomaly" 0;
                     }				 
                     then {
                         status {
                             color green;
                             message "$routing-engine CPU utilization($re-cpu-utilization%) is normal";
                         }
                     }
                 }	
                 /*
                 * Sets color to yellow when re-cpu utilization is below low threshold ($re-cpu-utilization-low-threshold)
                 * and the temperature value is anomalous.
                 */ 
                term is-re-cpu-utilization-anomalous {
                    when {
                        less-than "$re-cpu-utilization" "$re-cpu-utilization-low-threshold";
                        equal-to "$re-cpu-utilization-anomaly" 1;
                        
                    }
                    then {
                        status {
                            color yellow;
                            message "$routing-engine CPU utilization($re-cpu-utilization%) is not between the predicted range of ($re-cpu-utilization-anomaly-lower-boundary% and $re-cpu-utilization-anomaly-upper-boundary%)";
                        }
                    }
                }		
                /*
                 * Sets color to green when re-cpu utilization is less-than re-cpu-utilization-low-threshold
                 * 
                 */				
                term is-re-cpu-utilization-less-than-low-threshold {
                    when {
                        less-than "$re-cpu-utilization" "$re-cpu-utilization-low-threshold";
                    }
                    then {
                        status {
                            color green;
                            message "$routing-engine CPU utilization($re-cpu-utilization%) is normal";
                        }
                    }
                }			 
                /*
                 * Sets color to yellow when re-cpu utilization is greater-than-or-equal-to re-cpu-utilization-low-threshold
                 */				 
                 term is-re-cpu-utilization-middle {
                     when {
                         greater-than-or-equal-to "$re-cpu-utilization" "$re-cpu-utilization-low-threshold";
                         less-than "$re-cpu-utilization" "$re-cpu-utilization-high-threshold";						 
                     }
                     then {
                         status {
                             color yellow;
                             message "$routing-engine CPU utilization($re-cpu-utilization%) is greater than or equal to high threshold ($re-cpu-utilization-low-threshold%)";
                         }
                     }
                 }
                			 
                /*
                 * Sets color to red when re-cpu utilization is greater-than-or-equal-to re-cpu-utilization-high-threshold
                 */				 
                 term is-re-cpu-utilization-abnormal {
                     when {
                         greater-than-or-equal-to "$re-cpu-utilization" "$re-cpu-utilization-high-threshold";
                     }
                     then {
                         status {
                             color red;
                             message "$routing-engine CPU utilization($re-cpu-utilization%) exceeds critical threshold($re-cpu-utilization-high-threshold%)";
                         }
                     }
                 }				 
             }
             trigger routing-engine-memory-buffer-utilization {
                 synopsis "RE system memory buffer utilization kpi";
                 description "Sets health based on increase in system memory buffer utilization";
                 frequency 1offset;
                /*
                 * Sets color to green when re-memory-buffer utilization is less-than re-memory-buffer-low-threshold
                 */				 
                 term is-re-memory-buffer-utilization-normal {
                     when {
                         less-than "$re-memory-buffer" "$re-memory-buffer-low-threshold";
                         less-than-or-equal-to "$re-memory-buffer-anomaly" 0;
                     }				 
                     then {
                         status {
                             color green;
                             message "$routing-engine memory buffer utilization($re-memory-buffer%) is normal";
                         }
                     }
                 }	
                 /*
                 * Sets color to yellow when re-memory-buffer utilization is below low threshold ($re-memory-buffer-low-threshold)
                 * and the re-memory-buffer value is anomalous.
                 */ 
                term is-re-memory-buffer-anomalous {
                    when {
                        less-than "$re-memory-buffer" "$re-memory-buffer-low-threshold";
                        equal-to "$re-memory-buffer-anomaly" 1;
                    }
                    then {
                        status {
                            color yellow;
                            message "$routing-engine memory buffer utilization($re-memory-buffer%) is not between the predicted range of ($re-memory-buffer-anomaly-lower-boundary% and $re-memory-buffer-anomaly-upper-boundary%)";
                        }
                    }
                }	
                /*
                 * Sets color to green when re-memory-buffer utilization is below low threshold ($re-memory-buffer-low-threshold)
                 * 
                 */				
                term is-re-memory-buffer-utilization-less-than-low-threshold {
                    when {
                        less-than "$re-memory-buffer" "$re-memory-buffer-low-threshold";
                    }
                    then {
                        status {
                            color green;
                            message "$routing-engine memory buffer utilization($re-memory-buffer%) is normal";
                        }
                    }
                }			 
                /*
                 * Sets color to yellow when re-memory-buffer utilization is greater-than-or-equal-to re-memory-buffer-low-threshold
                 */				 
                 term is-re-memory-buffer-utilization-middle {
                     when {
                         greater-than-or-equal-to "$re-memory-buffer" "$re-memory-buffer-low-threshold";
                         less-than "$re-memory-buffer" "$re-memory-buffer-high-threshold";
                        }						 
                     then {
                         status {
                             color yellow;
                             message "$routing-engine memory buffer utilization($re-memory-buffer%) is greater than or equal to high threshold($re-memory-buffer-low-threshold%)";
                         }
                     }
                 }
                /*
                 * Sets color to red when re-memory-buffer utilization is greater-than-or-equal-to re-memory-buffer-high-threshold
                 */				 
                 term is-re-memory-buffer-utilization-abnormal {
                     when {
                         greater-than-or-equal-to "$re-memory-buffer" "$re-memory-buffer-high-threshold";
                     }
                     then {
                         status {
                             color red;
                             message "$routing-engine memory buffer utilization($re-memory-buffer%) exceed critical threshold($re-memory-buffer-high-threshold%)";
                         }
                     }
                 }				 
             }			 
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */			
            variable memory-buffer-re-high-threshold {
                value 75;
                description "Memory buffer high threshold: Utilization increase between metrics, before we report anomaly";
                type int;
            }
            variable memory-buffer-re-low-threshold {
                value 50;
                description "Memory buffer low threshold: Utilization increase between metrics, before we report anomaly";
                type int;
            }
            variable re-cpu-high-threshold {
                value 80;
                description "RE CPU utilization high threshold: Utilization increase between metrics, before we report anomaly";
                type int;
            }
            variable re-cpu-low-threshold {
                value 50;
                description "RE CPU utilization low threshold: Utilization increase between metrics, before we report anomaly";
                type int;
            }
            variable re-slot-no {
                value 0-1;
                description "Routing engine numbers to monitor, regular expression, e.g. '0'";
                type string;
            }
            rule-properties {
                version 1;
                contributor juniper;
                category advanced;
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junosEvolved {
                            sensors components-oc;
                            products ACX {
                                sensors components-oc;
                                platforms ACX7024 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7100 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7348 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                                platforms ACX7509 {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }								
                            }
                        }
                        operating-system junos {							
                            products MX {
                                sensors components-oc;
                                platforms MX204 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }								
                                platforms MX304 {
                                    releases 22.2R3 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }						
                    }
                }
            }
        }
	}	
}	
		