/*
 * Monitors the time system was last rebooted and notifies uptime.
 * 
 */
healthbot {
    topic system.uptime {
        rule system-uptime-evo {
            synopsis "System Uptime KPI";
            description "Monitors the time system was last rebooted";
            sensor uptime {
                iAgent {
                    file SystemUptime.yml;
                    table SystemUptimeTable;
                    frequency 60s;
                }
            }
            /*
             * Fields defined in the yml for which data is collected.
             */			
            field date-rebooted {
                sensor uptime {
                    path date;
                }
                type string;
                description "Date and time when the sytem was rebooted ";
            }
            field date-seconds {
                sensor uptime {
                    path date-time;
                }
                type integer;
                description "Time in seconds when the system was rebooted (epoch)";
            }
            field duration-seconds {
                sensor uptime {
                    path time-length;
                }
                type integer;
                description "Time in seconds since the system was last rebooted";
            }
            field time-rebooted {
                sensor uptime {
                    path time;
                }
                type string;
                description "Time since the system was last rebooted";
            }
            /*
             * Anomaly detection logic.
             */			
            trigger system-rebooted {
                frequency 1offset;
                /*
                 * Sets color to red when the system has been down in the last 5 minutes.
                 * 
                 */				
                term in-past-5-minutes {
                    when {
                        less-than-or-equal-to "$duration-seconds" 300;
                    }
                    then {
                        status {
                            color red;
                            message "system has rebooted in the last 5 minutes at $date-rebooted";
                        }
                    }
                }
                /*
                 * Sets color to yellow when the system has been up for less than 30 minutes.
                 * 
                 */				
                term in-past-30-minutes {
                    when {
                        less-than-or-equal-to "$duration-seconds" 1800;
                    }
                    then {
                        status {
                            color yellow;
                            message "system has rebooted in the last 30 minutes at $date-rebooted";
                        }
                    }
                }
                /*
                 * Sets color to green when the system has been up for more than 30 minutes.
                 * 
                 */				
                term normal {
                    then {
                        status {
                            color green;
                            message "system uptime is $time-rebooted";
                        }
                    }
                }
            }
            rule-properties {
                version 1;
                contributor juniper;
                category basic;
                supported-healthbot-version 4.2.0;
                supported-devices {
                    juniper {
                        operating-system junosEvolved {
                            products ACX {
                                platforms All {
                                    releases 22.3R1 {
                                        release-support min-supported-release;
                                    }
                                }
                            }
                        }
                    }
                }
                helper-files other {
                    list-of-files SystemUptime.yml;
                }
            }			
        }
    }
}	